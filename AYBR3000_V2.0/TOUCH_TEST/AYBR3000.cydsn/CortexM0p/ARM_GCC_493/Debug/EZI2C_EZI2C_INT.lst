ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"EZI2C_EZI2C_INT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.EZI2C_EZI2C_STRETCH_ISR,"ax",%progbits
  18              		.align	2
  19              		.global	EZI2C_EZI2C_STRETCH_ISR
  20              		.code	16
  21              		.thumb_func
  22              		.type	EZI2C_EZI2C_STRETCH_ISR, %function
  23              	EZI2C_EZI2C_STRETCH_ISR:
  24              	.LFB1:
  25              		.file 1 "Generated_Source\\PSoC4\\EZI2C_EZI2C_INT.c"
   1:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * \file EZI2C_EZI2C_INT.c
   3:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * \version 3.20
   4:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *
   5:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * \brief
   6:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *  This file provides the source code to the Interrupt Service Routine for
   7:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *  the SCB Component in EZI2C mode.
   8:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *
   9:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * Note:
  10:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *
  11:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** ********************************************************************************
  12:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * \copyright
  13:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  19:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** #include "EZI2C_PVT.h"
  20:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** #include "EZI2C_EZI2C_PVT.h"
  21:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  23:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** #if(EZI2C_EZI2C_SCL_STRETCH_ENABLE_CONST)
  24:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     /*******************************************************************************
  25:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     * Function Name: EZI2C_EZI2C_STRETCH_ISR
  26:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     ****************************************************************************//**
  27:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *
  28:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *  Handles the Interrupt Service Routine for the SCB EZI2C mode.
  29:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *  The clock stretching is used during operation.
  30:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *
  31:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     *******************************************************************************/
  32:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     CY_ISR_PROTO(EZI2C_EZI2C_STRETCH_ISR)
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 2


  33:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     {
  26              		.loc 1 33 0
  27              		.cfi_startproc
  28 0000 70B5     		push	{r4, r5, r6, lr}
  29              		.cfi_def_cfa_offset 16
  30              		.cfi_offset 4, -16
  31              		.cfi_offset 5, -12
  32              		.cfi_offset 6, -8
  33              		.cfi_offset 14, -4
  34:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static uint16 locBufSize;
  35:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locIndex;
  36:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locStatus;
  37:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  38:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 endTransfer;
  39:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 fifoIndex;
  40:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locByte;
  41:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  42:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locIntrCause;
  43:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 locIntrSlave;
  44:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  45:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #ifdef EZI2C_EZI2C_STRETCH_ISR_ENTRY_CALLBACK
  46:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         EZI2C_EZI2C_STRETCH_ISR_EntryCallback();
  47:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #endif /* EZI2C_EZI2C_STRETCH_ISR_ENTRY_CALLBACK */
  48:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  49:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #if(EZI2C_SECONDARY_ADDRESS_ENABLE_CONST)
  50:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Variable intended to be used with either buffer */
  51:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static volatile uint8 * EZI2C_dataBuffer; /* Pointer to data buffer              */
  52:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static uint16 EZI2C_bufSizeBuf;           /* Size of buffer in bytes             */
  53:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static uint16 EZI2C_protectBuf;           /* Start index of write protected area */
  54:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  55:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         static uint8 activeAddress;
  56:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         uint32 ackResponse;
  57:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  58:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         ackResponse = EZI2C_EZI2C_ACK_RECEIVED_ADDRESS;
  59:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #endif /* (EZI2C_SECONDARY_ADDRESS_ENABLE_CONST) */
  60:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  61:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #if !defined (CY_REMOVE_EZI2C_CUSTOM_INTR_HANDLER)
  62:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         if(NULL != EZI2C_customIntrHandler)
  34              		.loc 1 62 0
  35 0002 B24B     		ldr	r3, .L39
  36 0004 1B68     		ldr	r3, [r3]
  37 0006 002B     		cmp	r3, #0
  38 0008 00D0     		beq	.L2
  63:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         {
  64:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_customIntrHandler();
  39              		.loc 1 64 0
  40 000a 9847     		blx	r3
  41              	.LVL0:
  42              	.L2:
  65:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         }
  66:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #else
  67:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         CY_EZI2C_CUSTOM_INTR_HANDLER();
  68:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #endif /* !defined (CY_REMOVE_EZI2C_CUSTOM_INTR_HANDLER) */
  69:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  70:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Make local copy of global variable */
  71:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         locIndex = EZI2C_EZI2C_GET_INDEX(activeAddress);
  43              		.loc 1 71 0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 3


  44 000c B04B     		ldr	r3, .L39+4
  45 000e 1C88     		ldrh	r4, [r3]
  46              	.LVL1:
  72:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  73:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Get interrupt sources */
  74:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         locIntrSlave = EZI2C_GetSlaveInterruptSource();
  47              		.loc 1 74 0
  48 0010 B04B     		ldr	r3, .L39+8
  49 0012 1D68     		ldr	r5, [r3]
  50              	.LVL2:
  75:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         locIntrCause = EZI2C_GetInterruptCause();
  51              		.loc 1 75 0
  52 0014 B04B     		ldr	r3, .L39+12
  53 0016 1E68     		ldr	r6, [r3]
  54              	.LVL3:
  76:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  77:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* INTR_SLAVE.I2C_ARB_LOST and INTR_SLAVE_I2C.BUS_ERROR */
  78:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Handles errors on the bus. There are cases when both bits are set.
  79:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         * The error recovery is common: re-enable the scb IP. The content of the RX FIFO is lost.
  80:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         */
  81:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         if(0u != (locIntrSlave & (EZI2C_INTR_SLAVE_I2C_ARB_LOST |
  55              		.loc 1 81 0
  56 0018 0223     		mov	r3, #2
  57 001a FF33     		add	r3, r3, #255
  58 001c 1D42     		tst	r5, r3
  59 001e 36D0     		beq	.L3
  82:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                   EZI2C_INTR_SLAVE_I2C_BUS_ERROR)))
  83:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         {
  84:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_CTRL_REG &= (uint32) ~EZI2C_CTRL_ENABLED; /* Disable SCB block */
  60              		.loc 1 84 0
  61 0020 AE4A     		ldr	r2, .L39+16
  62 0022 1368     		ldr	r3, [r2]
  63 0024 5B00     		lsl	r3, r3, #1
  64 0026 5B08     		lsr	r3, r3, #1
  65 0028 1360     		str	r3, [r2]
  85:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  86:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         #if(EZI2C_CY_SCBIP_V0)
  87:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != ((uint8) EZI2C_EZI2C_STATUS_BUSY & EZI2C_curStatus))
  88:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         #endif /* (EZI2C_CY_SCBIP_V0) */
  89:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
  90:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_curStatus &= (uint8) ~EZI2C_EZI2C_STATUS_BUSY;
  66              		.loc 1 90 0
  67 002a AD4B     		ldr	r3, .L39+20
  68 002c 1A78     		ldrb	r2, [r3]
  69 002e 2021     		mov	r1, #32
  70 0030 8A43     		bic	r2, r1
  71 0032 1A70     		strb	r2, [r3]
  91:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_curStatus |= (uint8)  EZI2C_EZI2C_STATUS_ERR;
  72              		.loc 1 91 0
  73 0034 1978     		ldrb	r1, [r3]
  74 0036 1022     		mov	r2, #16
  75 0038 0A43     		orr	r2, r1
  76 003a 1A70     		strb	r2, [r3]
  92:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
  93:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_TX_EMPTY is enabled in the address phase to receive data */
  94:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if(0u == (EZI2C_GetTxInterruptMode() & EZI2C_INTR_TX_EMPTY))
  77              		.loc 1 94 0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 4


  78 003c A94B     		ldr	r3, .L39+24
  79 003e 1B68     		ldr	r3, [r3]
  80 0040 DB06     		lsl	r3, r3, #27
  81 0042 0BD4     		bmi	.L4
  95:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
  96:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Write complete */
  97:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(EZI2C_indexBuf1 != EZI2C_offsetBuf1)
  82              		.loc 1 97 0
  83 0044 A24B     		ldr	r3, .L39+4
  84 0046 1A88     		ldrh	r2, [r3]
  85 0048 A74B     		ldr	r3, .L39+28
  86 004a 1B88     		ldrh	r3, [r3]
  87 004c 9A42     		cmp	r2, r3
  88 004e 0AD0     		beq	.L5
  98:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
  99:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_curStatus |= (uint8) EZI2C_INTR_SLAVE_I2C_WRITE_STOP;
  89              		.loc 1 99 0
  90 0050 A34A     		ldr	r2, .L39+20
  91 0052 1178     		ldrb	r1, [r2]
  92 0054 0823     		mov	r3, #8
  93 0056 0B43     		orr	r3, r1
  94 0058 1370     		strb	r3, [r2]
  95 005a 04E0     		b	.L5
  96              	.L4:
 100:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 101:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 102:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 else
 103:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 104:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Read complete */
 105:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_curStatus |= (uint8) EZI2C_INTR_SLAVE_I2C_NACK;
  97              		.loc 1 105 0
  98 005c A04A     		ldr	r2, .L39+20
  99 005e 1178     		ldrb	r1, [r2]
 100 0060 0223     		mov	r3, #2
 101 0062 0B43     		orr	r3, r1
 102 0064 1370     		strb	r3, [r2]
 103              	.L5:
 106:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 107:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 108:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 109:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_DISABLE_SLAVE_AUTO_DATA;
 104              		.loc 1 109 0
 105 0066 A14A     		ldr	r2, .L39+32
 106 0068 1168     		ldr	r1, [r2]
 107 006a A14B     		ldr	r3, .L39+36
 108 006c 0B40     		and	r3, r1
 109 006e 1360     		str	r3, [r2]
 110:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 111:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* Disable TX and RX interrupt sources */
 112:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 110              		.loc 1 112 0
 111 0070 0023     		mov	r3, #0
 112 0072 A04A     		ldr	r2, .L39+40
 113 0074 1360     		str	r3, [r2]
 113:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_SetTxInterruptMode(EZI2C_NO_INTR_SOURCES);
 114              		.loc 1 113 0
 115 0076 9B4A     		ldr	r2, .L39+24
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 5


 116 0078 1360     		str	r3, [r2]
 114:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 115:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         #if(EZI2C_CY_SCBIP_V0)
 116:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* Clear interrupt sources as they are not automatically cleared after SCB is disabled 
 117:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_ClearRxInterruptSource(EZI2C_INTR_RX_ALL);
 118:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_ClearSlaveInterruptSource(EZI2C_INTR_SLAVE_ALL);
 119:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         #endif /* (EZI2C_CY_SCBIP_V0) */
 120:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 121:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_fsmState = EZI2C_EZI2C_FSM_IDLE;
 117              		.loc 1 121 0
 118 007a 0222     		mov	r2, #2
 119 007c 9E4B     		ldr	r3, .L39+44
 120 007e 1A70     		strb	r2, [r3]
 122:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 123:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             EZI2C_CTRL_REG |= (uint32) EZI2C_CTRL_ENABLED;  /* Enable SCB block */
 121              		.loc 1 123 0
 122 0080 964A     		ldr	r2, .L39+16
 123 0082 1368     		ldr	r3, [r2]
 124 0084 8021     		mov	r1, #128
 125 0086 0906     		lsl	r1, r1, #24
 126 0088 0B43     		orr	r3, r1
 127 008a 1360     		str	r3, [r2]
 128 008c 1AE1     		b	.L6
 129              	.L3:
 124:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         }
 125:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         else
 126:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         {
 127:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* INTR_I2C_EC_WAKE_UP */
 128:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* Wakes up device from deep sleep */
 129:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != (locIntrCause & EZI2C_INTR_CAUSE_I2C_EC))
 130              		.loc 1 129 0
 131 008e F306     		lsl	r3, r6, #27
 132 0090 02D5     		bpl	.L7
 130:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
 131:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Disables wakeup interrupt source but does not clear it. It is cleared in INTR_SL
 132:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_SetI2CExtClkInterruptMode(EZI2C_NO_INTR_SOURCES);
 133              		.loc 1 132 0
 134 0092 0022     		mov	r2, #0
 135 0094 994B     		ldr	r3, .L39+48
 136 0096 1A60     		str	r2, [r3]
 137              	.L7:
 133:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 134:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 135:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != (locIntrCause & (EZI2C_INTR_CAUSE_RX | EZI2C_INTR_CAUSE_SLAVE)))
 138              		.loc 1 135 0
 139 0098 0A23     		mov	r3, #10
 140 009a 3342     		tst	r3, r6
 141 009c 00D1     		bne	.LCB117
 142 009e A3E0     		b	.L8	@long jump
 143              	.LCB117:
 136:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
 137:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_RX.NOT_EMPTY */
 138:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Receives data byte-by-byte. Does not use RX FIFO capabilities */
 139:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if (0u != (EZI2C_GetRxInterruptSourceMasked() & EZI2C_INTR_RX_NOT_EMPTY))
 144              		.loc 1 139 0
 145 00a0 974B     		ldr	r3, .L39+52
 146 00a2 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 6


 147 00a4 5B07     		lsl	r3, r3, #29
 148 00a6 69D5     		bpl	.L9
 140:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 141:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 #if(EZI2C_SECONDARY_ADDRESS_ENABLE_CONST)
 142:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* If I2C_STOP service is delayed to I2C_ADDR_MATCH the address byte is in the 
 143:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * RX_NOT_EMPTY is enabled. The address byte has to stay into RX FIFO therefore
 144:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * RX.NOT_EMPTY service has to be skipped. The address byte has to be read by I2
 145:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     */
 146:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if (0u == (locIntrCause & EZI2C_INTR_CAUSE_SLAVE))
 147:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 #endif /* (EZI2C_SECONDARY_ADDRESS_ENABLE_CONST) */
 148:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 149:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locByte = EZI2C_RX_FIFO_RD_REG;
 149              		.loc 1 149 0
 150 00a8 964B     		ldr	r3, .L39+56
 151 00aa 1A68     		ldr	r2, [r3]
 152              	.LVL4:
 150:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 151:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         switch(EZI2C_fsmState)
 153              		.loc 1 151 0
 154 00ac 924B     		ldr	r3, .L39+44
 155 00ae 1B78     		ldrb	r3, [r3]
 156 00b0 012B     		cmp	r3, #1
 157 00b2 04D0     		beq	.L11
 158 00b4 002B     		cmp	r3, #0
 159 00b6 22D0     		beq	.L12
 160 00b8 022B     		cmp	r3, #2
 161 00ba 16D0     		beq	.L13
 162 00bc 57E0     		b	.L38
 163              	.L11:
 152:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 153:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         case EZI2C_EZI2C_FSM_BYTE_WRITE:
 154:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             if(0u != locBufSize)
 164              		.loc 1 154 0
 165 00be 924B     		ldr	r3, .L39+60
 166 00c0 1B88     		ldrh	r3, [r3]
 167 00c2 002B     		cmp	r3, #0
 168 00c4 0DD0     		beq	.L14
 155:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 156:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Store data byte and ACK */
 157:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_ACK;
 169              		.loc 1 157 0
 170 00c6 0121     		mov	r1, #1
 171 00c8 904B     		ldr	r3, .L39+64
 172 00ca 1960     		str	r1, [r3]
 158:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 159:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_dataBuffer1[locIndex] = (uint8) locByte;
 173              		.loc 1 159 0
 174 00cc 904B     		ldr	r3, .L39+68
 175 00ce 1B68     		ldr	r3, [r3]
 176 00d0 1B19     		add	r3, r3, r4
 177 00d2 D2B2     		uxtb	r2, r2
 178              	.LVL5:
 179 00d4 1A70     		strb	r2, [r3]
 160:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locIndex++;
 180              		.loc 1 160 0
 181 00d6 0134     		add	r4, r4, #1
 182              	.LVL6:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 7


 161:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locBufSize--;
 183              		.loc 1 161 0
 184 00d8 8B4A     		ldr	r2, .L39+60
 185 00da 1388     		ldrh	r3, [r2]
 186 00dc 013B     		sub	r3, r3, #1
 187 00de 1380     		strh	r3, [r2]
 188 00e0 48E0     		b	.L15
 189              	.LVL7:
 190              	.L14:
 162:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 163:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             else
 164:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 165:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Discard data byte and NACK */
 166:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_NACK;
 191              		.loc 1 166 0
 192 00e2 0222     		mov	r2, #2
 193              	.LVL8:
 194 00e4 894B     		ldr	r3, .L39+64
 195 00e6 1A60     		str	r2, [r3]
 196 00e8 44E0     		b	.L15
 197              	.LVL9:
 198              	.L13:
 167:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 168:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             break;
 169:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 170:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(EZI2C_SUB_ADDRESS_SIZE16_CONST)
 171:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         case EZI2C_EZI2C_FSM_OFFSET_HI8:
 172:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 173:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_I2C_SLAVE_GENERATE_ACK;
 199              		.loc 1 173 0
 200 00ea 0121     		mov	r1, #1
 201 00ec 874B     		ldr	r3, .L39+64
 202 00ee 1960     		str	r1, [r3]
 174:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 175:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Store offset most significant byre */
 176:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             locBufSize = (uint16) ((uint8) locByte);
 203              		.loc 1 176 0
 204 00f0 D2B2     		uxtb	r2, r2
 205              	.LVL10:
 206 00f2 854B     		ldr	r3, .L39+60
 207 00f4 1A80     		strh	r2, [r3]
 177:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 178:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_fsmState = EZI2C_EZI2C_FSM_OFFSET_LO8;
 208              		.loc 1 178 0
 209 00f6 0022     		mov	r2, #0
 210 00f8 7F4B     		ldr	r3, .L39+44
 211 00fa 1A70     		strb	r2, [r3]
 179:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 180:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             break;
 212              		.loc 1 180 0
 213 00fc 3AE0     		b	.L15
 214              	.LVL11:
 215              	.L12:
 181:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif /* (EZI2C_SUB_ADDRESS_SIZE16_CONST) */
 182:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 183:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         case EZI2C_EZI2C_FSM_OFFSET_LO8:
 184:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 8


 185:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #if (EZI2C_SUB_ADDRESS_SIZE16)
 186:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 187:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Collect 2 bytes offset */
 188:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locByte = ((uint32) ((uint32) locBufSize << 8u)) | locByte;
 216              		.loc 1 188 0
 217 00fe 824B     		ldr	r3, .L39+60
 218 0100 1B88     		ldrh	r3, [r3]
 219 0102 1B02     		lsl	r3, r3, #8
 220 0104 1A43     		orr	r2, r3
 221              	.LVL12:
 189:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 190:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #endif
 191:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 192:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Check offset against buffer size */
 193:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             if(locByte < (uint32) EZI2C_bufSizeBuf1)
 222              		.loc 1 193 0
 223 0106 834B     		ldr	r3, .L39+72
 224 0108 1B88     		ldrh	r3, [r3]
 225 010a 9342     		cmp	r3, r2
 226 010c 2BD9     		bls	.L16
 194:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 195:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_ACK;
 227              		.loc 1 195 0
 228 010e 0121     		mov	r1, #1
 229 0110 7E4B     		ldr	r3, .L39+64
 230 0112 1960     		str	r1, [r3]
 231              	.LVL13:
 196:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 197:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Update local buffer index with new offset */
 198:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locIndex = locByte;
 199:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 200:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Get available buffer size to write */
 201:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 locBufSize = (uint16) ((locByte < EZI2C_protectBuf1) ?
 232              		.loc 1 201 0
 233 0114 804B     		ldr	r3, .L39+76
 234 0116 1B88     		ldrh	r3, [r3]
 235 0118 9342     		cmp	r3, r2
 236 011a 02D9     		bls	.L35
 237              		.loc 1 201 0 is_stmt 0 discriminator 1
 238 011c 9B1A     		sub	r3, r3, r2
 239 011e 9BB2     		uxth	r3, r3
 240 0120 00E0     		b	.L17
 241              	.L35:
 242              		.loc 1 201 0
 243 0122 0023     		mov	r3, #0
 244              	.L17:
 245              		.loc 1 201 0 discriminator 4
 246 0124 7849     		ldr	r1, .L39+60
 247 0126 0B80     		strh	r3, [r1]
 202:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                                        (EZI2C_protectBuf1 - locByte) : (0u));
 203:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 204:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #if(EZI2C_CY_SCBIP_V0)
 205:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 206:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 if(locBufSize < EZI2C_EZI2C_FIFO_SIZE)
 207:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 208:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte */
 209:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_fsmState = EZI2C_EZI2C_FSM_BYTE_WRITE;
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 9


 210:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 211:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Receive RX FIFO chunks */
 212:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 else if(locBufSize == EZI2C_EZI2C_FIFO_SIZE)
 213:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 214:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is full */
 215:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 216:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 217:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 else
 218:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 219:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO is fu
 220:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_SetRxInterruptMode(EZI2C_INTR_RX_FULL);
 221:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 222:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 223:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #else
 224:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 225:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 #if(EZI2C_SECONDARY_ADDRESS_ENABLE)
 226:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 227:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte.
 228:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     * The byte by byte receive is always chosen for two addresses. 
 229:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     */
 230:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     EZI2C_fsmState = EZI2C_EZI2C_FSM_BYTE_WRITE;
 231:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 232:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 #else
 233:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 {
 234:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     if (locBufSize < EZI2C_EZI2C_FIFO_SIZE)
 248              		.loc 1 234 0 is_stmt 1 discriminator 4
 249 0128 072B     		cmp	r3, #7
 250 012a 03D8     		bhi	.L18
 235:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     {
 236:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         /* Set FSM state to receive byte by byte */
 237:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_fsmState = EZI2C_EZI2C_FSM_BYTE_WRITE;
 251              		.loc 1 237 0
 252 012c 0121     		mov	r1, #1
 253 012e 724B     		ldr	r3, .L39+44
 254 0130 1970     		strb	r1, [r3]
 255 0132 14E0     		b	.L19
 256              	.L18:
 238:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     }
 239:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     /* Receive RX FIFO chunks */
 240:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     else if (locBufSize == EZI2C_EZI2C_FIFO_SIZE)
 257              		.loc 1 240 0
 258 0134 082B     		cmp	r3, #8
 259 0136 09D1     		bne	.L20
 241:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     {
 242:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is full 
 260              		.loc 1 242 0
 261 0138 6C49     		ldr	r1, .L39+32
 262 013a 0B68     		ldr	r3, [r1]
 263 013c A020     		mov	r0, #160
 264 013e 0002     		lsl	r0, r0, #8
 265 0140 0343     		orr	r3, r0
 266 0142 0B60     		str	r3, [r1]
 243:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 267              		.loc 1 243 0
 268 0144 0021     		mov	r1, #0
 269 0146 6B4B     		ldr	r3, .L39+40
 270 0148 1960     		str	r1, [r3]
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 10


 271 014a 08E0     		b	.L19
 272              	.L20:
 244:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     }
 245:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     else
 246:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     {
 247:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO i
 273              		.loc 1 247 0
 274 014c 6749     		ldr	r1, .L39+32
 275 014e 0B68     		ldr	r3, [r1]
 276 0150 8020     		mov	r0, #128
 277 0152 8001     		lsl	r0, r0, #6
 278 0154 0343     		orr	r3, r0
 279 0156 0B60     		str	r3, [r1]
 248:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                         EZI2C_SetRxInterruptMode(EZI2C_INTR_RX_FULL);
 280              		.loc 1 248 0
 281 0158 0821     		mov	r1, #8
 282 015a 664B     		ldr	r3, .L39+40
 283 015c 1960     		str	r1, [r3]
 284              	.L19:
 249:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                     }
 250:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 }
 251:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 #endif
 252:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 253:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             #endif /* (EZI2C_CY_SCBIP_V0) */
 254:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 255:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Store local offset into global variable */
 256:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_EZI2C_SET_OFFSET(activeAddress, locIndex);
 285              		.loc 1 256 0
 286 015e 624B     		ldr	r3, .L39+28
 287 0160 1A80     		strh	r2, [r3]
 198:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 288              		.loc 1 198 0
 289 0162 141C     		mov	r4, r2
 290 0164 06E0     		b	.L15
 291              	.LVL14:
 292              	.L16:
 257:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 258:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             else
 259:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 260:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Discard offset byte and NACK */
 261:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 EZI2C_I2C_SLAVE_GENERATE_NACK;
 293              		.loc 1 261 0
 294 0166 0222     		mov	r2, #2
 295              	.LVL15:
 296 0168 684B     		ldr	r3, .L39+64
 297 016a 1A60     		str	r2, [r3]
 298 016c 02E0     		b	.L15
 299              	.LVL16:
 300              	.L38:
 262:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 263:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             break;
 264:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 265:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         default:
 266:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             CYASSERT(0u != 0u); /* Should never get there */
 301              		.loc 1 266 0 discriminator 1
 302 016e 0020     		mov	r0, #0
 303 0170 FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 11


 304              	.LVL17:
 305              	.L15:
 267:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             break;
 268:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 269:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 270:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearRxInterruptSource(EZI2C_INTR_RX_NOT_EMPTY);
 306              		.loc 1 270 0
 307 0174 0422     		mov	r2, #4
 308 0176 694B     		ldr	r3, .L39+80
 309 0178 1A60     		str	r2, [r3]
 310 017a 35E0     		b	.L8
 311              	.L9:
 271:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 272:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 273:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_RX.FULL, INTR_SLAVE.I2C_STOP */
 274:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Receive FIFO chunks: auto data ACK is enabled */
 275:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 else if (0u != (EZI2C_I2C_CTRL_REG & EZI2C_I2C_CTRL_S_READY_DATA_ACK))
 312              		.loc 1 275 0
 313 017c 5B4B     		ldr	r3, .L39+32
 314 017e 1B68     		ldr	r3, [r3]
 315 0180 9B04     		lsl	r3, r3, #18
 316 0182 31D5     		bpl	.L8
 276:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 277:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Slave interrupt (I2C_STOP or I2C_ADDR_MATCH) leads to completion of read.
 278:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * A completion event has a higher priority than the FIFO full.
 279:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * Read remaining data from RX FIFO.
 280:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     */
 281:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(0u != (locIntrCause & EZI2C_INTR_CAUSE_SLAVE))
 317              		.loc 1 281 0
 318 0184 B307     		lsl	r3, r6, #30
 319 0186 0DD5     		bpl	.L21
 282:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 283:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Read remaining bytes from RX FIFO */
 284:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         fifoIndex = EZI2C_GET_RX_FIFO_ENTRIES;
 320              		.loc 1 284 0
 321 0188 654B     		ldr	r3, .L39+84
 322 018a 1B68     		ldr	r3, [r3]
 323 018c 1F21     		mov	r1, #31
 324 018e 1940     		and	r1, r3
 325              	.LVL18:
 285:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 286:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         #if(EZI2C_SECONDARY_ADDRESS_ENABLE)
 287:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 288:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Update with current address match */
 289:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             if(EZI2C_CHECK_INTR_SLAVE_MASKED(EZI2C_INTR_SLAVE_I2C_ADDR_MATCH))
 290:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             {
 291:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* Update RX FIFO entries as address byte is there now */
 292:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 fifoIndex = EZI2C_GET_RX_FIFO_ENTRIES;
 293:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 294:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 /* If SR is valid, RX FIFO is full and address is in SHIFTER:
 295:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 * read 8 entries and leave address in RX FIFO for further processin
 296:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 * If SR is invalid, address is already in RX FIFO: read (entries-1)
 297:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 */
 298:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                 fifoIndex -= ((0u != EZI2C_GET_RX_FIFO_SR_VALID) ? (0u) : (1u));
 299:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             }
 300:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 301:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         #endif
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 12


 302:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 303:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_DISABLE_SLAVE_AUTO_DATA;
 326              		.loc 1 303 0
 327 0190 564A     		ldr	r2, .L39+32
 328 0192 1068     		ldr	r0, [r2]
 329 0194 564B     		ldr	r3, .L39+36
 330 0196 0340     		and	r3, r0
 331 0198 1360     		str	r3, [r2]
 332              	.LVL19:
 304:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         endTransfer = EZI2C_EZI2C_CONTINUE_TRANSFER;
 333              		.loc 1 304 0
 334 019a 0120     		mov	r0, #1
 335 019c 14E0     		b	.L22
 336              	.LVL20:
 337              	.L36:
 305:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 306:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     else
 307:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* INTR_RX_FULL */
 308:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Continue transfer or disable INTR_RX_FULL to catch completion event. */
 309:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 310:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Calculate buffer size available to write data into */
 311:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locBufSize -= (uint16) EZI2C_EZI2C_FIFO_SIZE;
 312:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 313:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(locBufSize <= EZI2C_EZI2C_FIFO_SIZE)
 314:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 315:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Send NACK when RX FIFO overflow */
 316:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             fifoIndex   = locBufSize;
 317:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             endTransfer = EZI2C_EZI2C_COMPLETE_TRANSFER;
 318:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 319:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         else
 320:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 321:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Continue  transaction */
 322:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             fifoIndex   = EZI2C_EZI2C_FIFO_SIZE;
 338              		.loc 1 322 0
 339 019e 0821     		mov	r1, #8
 323:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             endTransfer = EZI2C_EZI2C_CONTINUE_TRANSFER;
 340              		.loc 1 323 0
 341 01a0 0120     		mov	r0, #1
 342 01a2 11E0     		b	.L22
 343              	.L21:
 311:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 344              		.loc 1 311 0
 345 01a4 584B     		ldr	r3, .L39+60
 346 01a6 1988     		ldrh	r1, [r3]
 347 01a8 0839     		sub	r1, r1, #8
 348 01aa 89B2     		uxth	r1, r1
 349 01ac 1980     		strh	r1, [r3]
 313:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 350              		.loc 1 313 0
 351 01ae 0829     		cmp	r1, #8
 352 01b0 F5D8     		bhi	.L36
 353              	.LVL21:
 317:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 354              		.loc 1 317 0
 355 01b2 0020     		mov	r0, #0
 356 01b4 08E0     		b	.L22
 357              	.LVL22:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 13


 358              	.L24:
 324:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 325:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 326:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 327:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     for(; (0u != fifoIndex); fifoIndex--)
 328:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 329:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Store data in buffer */
 330:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_dataBuffer1[locIndex] = (uint8) EZI2C_RX_FIFO_RD_REG;
 359              		.loc 1 330 0 discriminator 2
 360 01b6 564B     		ldr	r3, .L39+68
 361 01b8 1B68     		ldr	r3, [r3]
 362 01ba 1B19     		add	r3, r3, r4
 363 01bc 514A     		ldr	r2, .L39+56
 364 01be 1268     		ldr	r2, [r2]
 365 01c0 D2B2     		uxtb	r2, r2
 366 01c2 1A70     		strb	r2, [r3]
 331:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locIndex++;
 367              		.loc 1 331 0 discriminator 2
 368 01c4 0134     		add	r4, r4, #1
 369              	.LVL23:
 327:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 370              		.loc 1 327 0 discriminator 2
 371 01c6 0139     		sub	r1, r1, #1
 372              	.LVL24:
 373              	.L22:
 327:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 374              		.loc 1 327 0 is_stmt 0 discriminator 1
 375 01c8 0029     		cmp	r1, #0
 376 01ca F4D1     		bne	.L24
 332:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 333:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 334:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Complete transfer sending NACK when RX FIFO overflow */
 335:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(EZI2C_EZI2C_COMPLETE_TRANSFER == endTransfer)
 377              		.loc 1 335 0 is_stmt 1
 378 01cc 0028     		cmp	r0, #0
 379 01ce 08D1     		bne	.L25
 336:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 337:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ENABLE_SLAVE_AUTO_DATA_NACK;
 380              		.loc 1 337 0
 381 01d0 464A     		ldr	r2, .L39+32
 382 01d2 1368     		ldr	r3, [r2]
 383 01d4 8021     		mov	r1, #128
 384              	.LVL25:
 385 01d6 0902     		lsl	r1, r1, #8
 386 01d8 0B43     		orr	r3, r1
 387 01da 1360     		str	r3, [r2]
 338:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 339:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Disable INTR_RX_FULL during last RX FIFO chunk reception */
 340:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 388              		.loc 1 340 0
 389 01dc 0022     		mov	r2, #0
 390 01de 454B     		ldr	r3, .L39+40
 391 01e0 1A60     		str	r2, [r3]
 392              	.L25:
 341:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 342:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 343:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_ClearRxInterruptSource(EZI2C_INTR_RX_FULL |
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 14


 393              		.loc 1 343 0
 394 01e2 0C22     		mov	r2, #12
 395 01e4 4D4B     		ldr	r3, .L39+80
 396 01e6 1A60     		str	r2, [r3]
 397              	.LVL26:
 398              	.L8:
 344:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                                                             EZI2C_INTR_RX_NOT_EMPTY);
 345:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 346:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 else
 347:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 348:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Exit for slave interrupts which are not active for RX direction:
 349:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     * INTR_SLAVE.I2C_ADDR_MATCH and INTR_SLAVE.I2C_STOP while byte-by-byte receptio
 350:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     */
 351:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 352:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 353:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 354:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != (locIntrCause & EZI2C_INTR_CAUSE_SLAVE))
 399              		.loc 1 354 0
 400 01e8 B307     		lsl	r3, r6, #30
 401 01ea 4AD5     		bpl	.L26
 355:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
 356:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_STOP */
 357:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Catch Stop condition: completion of write or read transfer */
 358:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             #if(!EZI2C_SECONDARY_ADDRESS_ENABLE_CONST)
 359:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if(0u != (locIntrSlave & EZI2C_INTR_SLAVE_I2C_STOP))
 402              		.loc 1 359 0
 403 01ec EB06     		lsl	r3, r5, #27
 404 01ee 15D5     		bpl	.L27
 360:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             #else
 361:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Prevent triggering when matched address was NACKed */
 362:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if((0u != (locIntrSlave & EZI2C_INTR_SLAVE_I2C_STOP)) &&
 363:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                    (0u != ((uint8) EZI2C_EZI2C_STATUS_BUSY & EZI2C_curStatus)))
 364:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             #endif
 365:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 366:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Disable TX and RX interrupt sources */
 367:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_SetRxInterruptMode(EZI2C_NO_INTR_SOURCES);
 405              		.loc 1 367 0
 406 01f0 0023     		mov	r3, #0
 407 01f2 404A     		ldr	r2, .L39+40
 408 01f4 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_SetTxInterruptMode(EZI2C_NO_INTR_SOURCES);
 409              		.loc 1 368 0
 410 01f6 3B4A     		ldr	r2, .L39+24
 411 01f8 1360     		str	r3, [r2]
 412              	.LVL27:
 369:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 370:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Set read completion mask */
 371:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus = EZI2C_INTR_SLAVE_I2C_NACK;
 372:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 373:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Check if buffer content was modified: the address phase resets the locIndex 
 374:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(locIndex != EZI2C_EZI2C_GET_OFFSET(activeAddress))
 413              		.loc 1 374 0
 414 01fa 3B4B     		ldr	r3, .L39+28
 415 01fc 1B88     		ldrh	r3, [r3]
 416 01fe A342     		cmp	r3, r4
 417 0200 01D1     		bne	.L37
 371:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 15


 418              		.loc 1 371 0
 419 0202 0223     		mov	r3, #2
 420 0204 00E0     		b	.L28
 421              	.L37:
 375:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 376:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locStatus |= EZI2C_INTR_SLAVE_I2C_WRITE_STOP;
 422              		.loc 1 376 0
 423 0206 0A23     		mov	r3, #10
 424              	.L28:
 425              	.LVL28:
 377:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 378:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 379:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Complete read or write transaction */
 380:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus &= locIntrSlave;
 426              		.loc 1 380 0
 427 0208 2B40     		and	r3, r5
 428              	.LVL29:
 381:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_EZI2C_UPDATE_LOC_STATUS(activeAddress, locStatus);
 382:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus |= (uint32)  EZI2C_curStatus;
 429              		.loc 1 382 0
 430 020a 354A     		ldr	r2, .L39+20
 431 020c 1178     		ldrb	r1, [r2]
 432 020e 0B43     		orr	r3, r1
 433              	.LVL30:
 383:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     locStatus &= (uint32) ~EZI2C_EZI2C_STATUS_BUSY;
 384:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_curStatus = (uint8) locStatus;
 434              		.loc 1 384 0
 435 0210 2021     		mov	r1, #32
 436 0212 8B43     		bic	r3, r1
 437              	.LVL31:
 438 0214 1370     		strb	r3, [r2]
 385:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 386:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     EZI2C_fsmState = EZI2C_EZI2C_FSM_IDLE;
 439              		.loc 1 386 0
 440 0216 0222     		mov	r2, #2
 441 0218 374B     		ldr	r3, .L39+44
 442 021a 1A70     		strb	r2, [r3]
 443              	.L27:
 387:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 388:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(EZI2C_SECONDARY_ADDRESS_ENABLE)
 389:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 390:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Store local index into global variable, before address phase */
 391:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_EZI2C_SET_INDEX(activeAddress, locIndex);
 392:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 393:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif
 394:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 395:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 396:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_ADDR_MATCH */
 397:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* The matched address is received: the slave starts its operation.
 398:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 * INTR_SLAVE_I2C_STOP updates the buffer index before the address phase for two add
 399:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 * This is done to update buffer index correctly before the address phase changes it
 400:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 */
 401:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 if(0u != (locIntrSlave & EZI2C_INTR_SLAVE_I2C_ADDR_MATCH))
 444              		.loc 1 401 0
 445 021c 6B06     		lsl	r3, r5, #25
 446 021e 2ED5     		bpl	.L29
 402:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 16


 403:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(EZI2C_SECONDARY_ADDRESS_ENABLE)
 404:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 405:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Read address byte from RX FIFO */
 406:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locByte = EZI2C_GET_I2C_7BIT_ADDRESS(EZI2C_RX_FIFO_RD_REG);
 407:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 408:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearRxInterruptSource(EZI2C_INTR_RX_NOT_EMPTY);
 409:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 410:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Check received address against device addresses */
 411:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(EZI2C_addrBuf1 == locByte)
 412:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 413:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 414:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_dataBuffer = EZI2C_dataBuffer1;
 415:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_bufSizeBuf = EZI2C_bufSizeBuf1;
 416:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_protectBuf = EZI2C_protectBuf1;
 417:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 418:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             activeAddress = EZI2C_EZI2C_ACTIVE_ADDRESS1;
 419:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 420:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         else if(EZI2C_addrBuf2 == locByte)
 421:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 422:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Set buffer exposed to secondary slave address */
 423:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_dataBuffer = EZI2C_dataBuffer2;
 424:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_bufSizeBuf = EZI2C_bufSizeBuf2;
 425:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_protectBuf = EZI2C_protectBuf2;
 426:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 427:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             activeAddress = EZI2C_EZI2C_ACTIVE_ADDRESS2;
 428:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 429:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         else
 430:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 431:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Address does not match */
 432:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             ackResponse = EZI2C_EZI2C_NACK_RECEIVED_ADDRESS;
 433:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 434:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 435:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif
 436:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 437:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 #if(EZI2C_SECONDARY_ADDRESS_ENABLE_CONST)
 438:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(EZI2C_EZI2C_NACK_RECEIVED_ADDRESS == ackResponse)
 439:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 440:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Clear interrupt sources before NACK address */
 441:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearI2CExtClkInterruptSource(EZI2C_INTR_I2C_EC_WAKE_UP);
 442:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearSlaveInterruptSource(EZI2C_INTR_SLAVE_ALL);
 443:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 444:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(!EZI2C_CY_SCBIP_V0)
 445:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Disable INTR_I2C_STOP to not trigger after matched address is NACKed. Ti
 446:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_DISABLE_INTR_SLAVE(EZI2C_INTR_SLAVE_I2C_STOP);
 447:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif /* (!EZI2C_CY_SCBIP_V0) */
 448:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 449:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* NACK address byte: it does not match neither primary nor secondary */
 450:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_I2C_SLAVE_GENERATE_NACK;
 451:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 452:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     else
 453:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 #endif /* (EZI2C_SECONDARY_ADDRESS_ENABLE_CONST) */
 454:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 455:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 456:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if(EZI2C_SCB_MODE_UNCONFIG_CONST_CFG)
 457:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(!EZI2C_SECONDARY_ADDRESS_ENABLE)
 458:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 459:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 17


 460:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_dataBuffer = EZI2C_dataBuffer1;
 461:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_bufSizeBuf = EZI2C_bufSizeBuf1;
 462:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_protectBuf = EZI2C_protectBuf1;
 463:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 464:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             activeAddress = EZI2C_EZI2C_ACTIVE_ADDRESS1;
 465:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 466:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif /* (EZI2C_SCB_MODE_UNCONFIG_CONST_CFG) */
 467:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 468:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Bus becomes busy after address is received */
 469:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_curStatus |= (uint8) EZI2C_EZI2C_STATUS_BUSY;
 447              		.loc 1 469 0
 448 0220 2F4A     		ldr	r2, .L39+20
 449 0222 1178     		ldrb	r1, [r2]
 450 0224 2023     		mov	r3, #32
 451 0226 0B43     		orr	r3, r1
 452 0228 1370     		strb	r3, [r2]
 470:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 471:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Slave is read or written: set current offset */
 472:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locIndex = EZI2C_EZI2C_GET_OFFSET(activeAddress);
 453              		.loc 1 472 0
 454 022a 2F4B     		ldr	r3, .L39+28
 455 022c 1B88     		ldrh	r3, [r3]
 456 022e 1C1C     		mov	r4, r3
 457              	.LVL32:
 473:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 474:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Check transaction direction */
 475:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         if(EZI2C_CHECK_I2C_STATUS(EZI2C_I2C_STATUS_S_READ))
 458              		.loc 1 475 0
 459 0230 3C4A     		ldr	r2, .L39+88
 460 0232 1268     		ldr	r2, [r2]
 461 0234 D206     		lsl	r2, r2, #27
 462 0236 12D5     		bpl	.L30
 476:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 477:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Calculate slave buffer size */
 478:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             locBufSize = EZI2C_bufSizeBuf1 - (uint16) locIndex;
 463              		.loc 1 478 0
 464 0238 364A     		ldr	r2, .L39+72
 465 023a 1288     		ldrh	r2, [r2]
 466 023c D31A     		sub	r3, r2, r3
 467              	.LVL33:
 468 023e 324A     		ldr	r2, .L39+60
 469 0240 1380     		strh	r3, [r2]
 479:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 480:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Clear TX FIFO to start fill from offset */
 481:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_CLEAR_TX_FIFO;
 470              		.loc 1 481 0
 471 0242 394B     		ldr	r3, .L39+92
 472 0244 1A68     		ldr	r2, [r3]
 473 0246 8021     		mov	r1, #128
 474 0248 4902     		lsl	r1, r1, #9
 475 024a 0A43     		orr	r2, r1
 476 024c 1A60     		str	r2, [r3]
 477 024e 1968     		ldr	r1, [r3]
 478 0250 364A     		ldr	r2, .L39+96
 479 0252 0A40     		and	r2, r1
 480 0254 1A60     		str	r2, [r3]
 482:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_SetTxInterruptMode(EZI2C_INTR_TX_EMPTY);
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 18


 481              		.loc 1 482 0
 482 0256 1022     		mov	r2, #16
 483 0258 224B     		ldr	r3, .L39+24
 484 025a 1A60     		str	r2, [r3]
 485 025c 02E0     		b	.L31
 486              	.LVL34:
 487              	.L30:
 483:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 484:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         else
 485:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         {
 486:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             /* Master writes: enable reception interrupt. The FSM state was set in 
 487:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                             EZI2C_SetRxInterruptMode(EZI2C_INTR_RX_NOT_EMPTY);
 488              		.loc 1 487 0
 489 025e 0422     		mov	r2, #4
 490 0260 244B     		ldr	r3, .L39+40
 491              	.LVL35:
 492 0262 1A60     		str	r2, [r3]
 493              	.L31:
 488:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         }
 489:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 490:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Clear interrupt sources before ACK address */
 491:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearI2CExtClkInterruptSource(EZI2C_INTR_I2C_EC_WAKE_UP);
 494              		.loc 1 491 0
 495 0264 0122     		mov	r2, #1
 496 0266 324B     		ldr	r3, .L39+100
 497 0268 1A60     		str	r2, [r3]
 492:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ClearSlaveInterruptSource(EZI2C_INTR_SLAVE_ALL);
 498              		.loc 1 492 0
 499 026a 3249     		ldr	r1, .L39+104
 500 026c 194B     		ldr	r3, .L39+8
 501 026e 1960     		str	r1, [r3]
 493:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 494:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #if (!EZI2C_CY_SCBIP_V0)
 495:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* Enable STOP to trigger after address match is ACKed. Ticket ID#156094 */
 496:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_ENABLE_INTR_SLAVE(EZI2C_INTR_SLAVE_I2C_STOP);
 502              		.loc 1 496 0
 503 0270 3149     		ldr	r1, .L39+108
 504 0272 0868     		ldr	r0, [r1]
 505 0274 1023     		mov	r3, #16
 506 0276 0343     		orr	r3, r0
 507 0278 0B60     		str	r3, [r1]
 497:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     #endif /* (!EZI2C_CY_SCBIP_V0) */
 498:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 499:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         /* ACK the address byte */
 500:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_I2C_SLAVE_GENERATE_ACK;
 508              		.loc 1 500 0
 509 027a 244B     		ldr	r3, .L39+64
 510 027c 1A60     		str	r2, [r3]
 511              	.L29:
 501:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 502:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 503:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 504:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Clear slave interrupt sources */
 505:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_ClearSlaveInterruptSource(locIntrSlave);
 512              		.loc 1 505 0
 513 027e 154B     		ldr	r3, .L39+8
 514 0280 1D60     		str	r5, [r3]
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 19


 515              	.L26:
 506:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 507:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 508:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* INTR_TX.EMPTY */
 509:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             /* Transmits data to the master: loads data into the TX FIFO. The 0xFF sends out if the
 510:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             * out the buffer. The address reception with a read flag clears the TX FIFO to be loade
 511:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             */
 512:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             if(0u != (EZI2C_GetInterruptCause() & EZI2C_INTR_CAUSE_TX))
 516              		.loc 1 512 0
 517 0282 154B     		ldr	r3, .L39+12
 518 0284 1B68     		ldr	r3, [r3]
 519 0286 5B07     		lsl	r3, r3, #29
 520 0288 1CD5     		bpl	.L6
 521              	.L34:
 513:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             {
 514:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 /* Put data into TX FIFO until there is a room */
 515:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 do
 516:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 {
 517:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     /* Check transmit buffer range: locBufSize calculates after address reception *
 518:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     if(0u != locBufSize)
 522              		.loc 1 518 0
 523 028a 1F4B     		ldr	r3, .L39+60
 524 028c 1B88     		ldrh	r3, [r3]
 525 028e 002B     		cmp	r3, #0
 526 0290 0CD0     		beq	.L32
 519:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 520:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_TX_FIFO_WR_REG = (uint32) EZI2C_dataBuffer1[locIndex];
 527              		.loc 1 520 0
 528 0292 1F4B     		ldr	r3, .L39+68
 529 0294 1B68     		ldr	r3, [r3]
 530 0296 1B19     		add	r3, r3, r4
 531 0298 1B78     		ldrb	r3, [r3]
 532 029a DBB2     		uxtb	r3, r3
 533 029c 274A     		ldr	r2, .L39+112
 534 029e 1360     		str	r3, [r2]
 521:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locIndex++;
 535              		.loc 1 521 0
 536 02a0 0134     		add	r4, r4, #1
 537              	.LVL36:
 522:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         locBufSize--;
 538              		.loc 1 522 0
 539 02a2 194A     		ldr	r2, .L39+60
 540 02a4 1388     		ldrh	r3, [r2]
 541 02a6 013B     		sub	r3, r3, #1
 542 02a8 1380     		strh	r3, [r2]
 543 02aa 02E0     		b	.L33
 544              	.L32:
 523:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
 524:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     else
 525:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     {
 526:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                         EZI2C_TX_FIFO_WR_REG = EZI2C_EZI2C_OVFL_RETURN;
 545              		.loc 1 526 0
 546 02ac FF22     		mov	r2, #255
 547 02ae 234B     		ldr	r3, .L39+112
 548 02b0 1A60     		str	r2, [r3]
 549              	.L33:
 527:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                     }
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 20


 528:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 }
 529:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 while(EZI2C_EZI2C_FIFO_SIZE != EZI2C_GET_TX_FIFO_ENTRIES);
 550              		.loc 1 529 0
 551 02b2 234B     		ldr	r3, .L39+116
 552 02b4 1B68     		ldr	r3, [r3]
 553 02b6 1F22     		mov	r2, #31
 554 02b8 1340     		and	r3, r2
 555 02ba 082B     		cmp	r3, #8
 556 02bc E5D1     		bne	.L34
 530:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 531:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****                 EZI2C_ClearTxInterruptSource(EZI2C_INTR_TX_EMPTY);
 557              		.loc 1 531 0
 558 02be 0F3A     		sub	r2, r2, #15
 559 02c0 204B     		ldr	r3, .L39+120
 560 02c2 1A60     		str	r2, [r3]
 561              	.L6:
 532:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****             }
 533:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         }
 534:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 535:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         /* Store local index copy into global variable */
 536:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         EZI2C_EZI2C_SET_INDEX(activeAddress, locIndex);
 562              		.loc 1 536 0
 563 02c4 024B     		ldr	r3, .L39+4
 564 02c6 1C80     		strh	r4, [r3]
 537:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 538:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #ifdef EZI2C_EZI2C_STRETCH_ISR_EXIT_CALLBACK
 539:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****         EZI2C_EZI2C_STRETCH_ISR_ExitCallback();
 540:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     #endif /* EZI2C_EZI2C_STRETCH_ISR_EXIT_CALLBACK */
 541:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c **** 
 542:Generated_Source\PSoC4/EZI2C_EZI2C_INT.c ****     }
 565              		.loc 1 542 0
 566              		@ sp needed
 567              	.LVL37:
 568              	.LVL38:
 569              	.LVL39:
 570 02c8 70BD     		pop	{r4, r5, r6, pc}
 571              	.L40:
 572 02ca C046     		.align	2
 573              	.L39:
 574 02cc 00000000 		.word	EZI2C_customIntrHandler
 575 02d0 00000000 		.word	EZI2C_indexBuf1
 576 02d4 400F0840 		.word	1074270016
 577 02d8 000E0840 		.word	1074269696
 578 02dc 00000840 		.word	1074266112
 579 02e0 00000000 		.word	EZI2C_curStatus
 580 02e4 880F0840 		.word	1074270088
 581 02e8 00000000 		.word	EZI2C_offsetBuf1
 582 02ec 60000840 		.word	1074266208
 583 02f0 FF5FFFFF 		.word	-40961
 584 02f4 C80F0840 		.word	1074270152
 585 02f8 00000000 		.word	EZI2C_fsmState
 586 02fc 880E0840 		.word	1074269832
 587 0300 CC0F0840 		.word	1074270156
 588 0304 40030840 		.word	1074266944
 589 0308 00000000 		.word	.LANCHOR0
 590 030c 6C000840 		.word	1074266220
 591 0310 00000000 		.word	EZI2C_dataBuffer1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 21


 592 0314 00000000 		.word	EZI2C_bufSizeBuf1
 593 0318 00000000 		.word	EZI2C_protectBuf1
 594 031c C00F0840 		.word	1074270144
 595 0320 08030840 		.word	1074266888
 596 0324 64000840 		.word	1074266212
 597 0328 04020840 		.word	1074266628
 598 032c FFFFFEFF 		.word	-65537
 599 0330 800E0840 		.word	1074269824
 600 0334 FF0F0000 		.word	4095
 601 0338 480F0840 		.word	1074270024
 602 033c 40020840 		.word	1074266688
 603 0340 08020840 		.word	1074266632
 604 0344 800F0840 		.word	1074270080
 605              		.cfi_endproc
 606              	.LFE1:
 607              		.size	EZI2C_EZI2C_STRETCH_ISR, .-EZI2C_EZI2C_STRETCH_ISR
 608              		.bss
 609              		.align	1
 610              		.set	.LANCHOR0,. + 0
 611              		.type	locBufSize.4781, %object
 612              		.size	locBufSize.4781, 2
 613              	locBufSize.4781:
 614 0000 0000     		.space	2
 615              		.text
 616              	.Letext0:
 617              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 618              		.file 3 "Generated_Source\\PSoC4\\EZI2C_PVT.h"
 619              		.file 4 "Generated_Source\\PSoC4\\EZI2C_EZI2C_PVT.h"
 620              		.file 5 "Generated_Source\\PSoC4/CyLib.h"
 621              		.section	.debug_info,"",%progbits
 622              	.Ldebug_info0:
 623 0000 DB010000 		.4byte	0x1db
 624 0004 0400     		.2byte	0x4
 625 0006 00000000 		.4byte	.Ldebug_abbrev0
 626 000a 04       		.byte	0x4
 627 000b 01       		.uleb128 0x1
 628 000c 88000000 		.4byte	.LASF34
 629 0010 01       		.byte	0x1
 630 0011 79010000 		.4byte	.LASF35
 631 0015 ED010000 		.4byte	.LASF36
 632 0019 00000000 		.4byte	.Ldebug_ranges0+0
 633 001d 00000000 		.4byte	0
 634 0021 00000000 		.4byte	.Ldebug_line0
 635 0025 02       		.uleb128 0x2
 636 0026 01       		.byte	0x1
 637 0027 06       		.byte	0x6
 638 0028 9E020000 		.4byte	.LASF0
 639 002c 02       		.uleb128 0x2
 640 002d 01       		.byte	0x1
 641 002e 08       		.byte	0x8
 642 002f 7A000000 		.4byte	.LASF1
 643 0033 02       		.uleb128 0x2
 644 0034 02       		.byte	0x2
 645 0035 05       		.byte	0x5
 646 0036 6D020000 		.4byte	.LASF2
 647 003a 02       		.uleb128 0x2
 648 003b 02       		.byte	0x2
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 22


 649 003c 07       		.byte	0x7
 650 003d 37000000 		.4byte	.LASF3
 651 0041 02       		.uleb128 0x2
 652 0042 04       		.byte	0x4
 653 0043 05       		.byte	0x5
 654 0044 95020000 		.4byte	.LASF4
 655 0048 02       		.uleb128 0x2
 656 0049 04       		.byte	0x4
 657 004a 07       		.byte	0x7
 658 004b 24010000 		.4byte	.LASF5
 659 004f 02       		.uleb128 0x2
 660 0050 08       		.byte	0x8
 661 0051 05       		.byte	0x5
 662 0052 48020000 		.4byte	.LASF6
 663 0056 02       		.uleb128 0x2
 664 0057 08       		.byte	0x8
 665 0058 07       		.byte	0x7
 666 0059 D6010000 		.4byte	.LASF7
 667 005d 03       		.uleb128 0x3
 668 005e 04       		.byte	0x4
 669 005f 05       		.byte	0x5
 670 0060 696E7400 		.ascii	"int\000"
 671 0064 02       		.uleb128 0x2
 672 0065 04       		.byte	0x4
 673 0066 07       		.byte	0x7
 674 0067 B4010000 		.4byte	.LASF8
 675 006b 04       		.uleb128 0x4
 676 006c 36010000 		.4byte	.LASF9
 677 0070 02       		.byte	0x2
 678 0071 B901     		.2byte	0x1b9
 679 0073 2C000000 		.4byte	0x2c
 680 0077 04       		.uleb128 0x4
 681 0078 6B010000 		.4byte	.LASF10
 682 007c 02       		.byte	0x2
 683 007d BA01     		.2byte	0x1ba
 684 007f 3A000000 		.4byte	0x3a
 685 0083 04       		.uleb128 0x4
 686 0084 72010000 		.4byte	.LASF11
 687 0088 02       		.byte	0x2
 688 0089 BB01     		.2byte	0x1bb
 689 008b 48000000 		.4byte	0x48
 690 008f 02       		.uleb128 0x2
 691 0090 04       		.byte	0x4
 692 0091 04       		.byte	0x4
 693 0092 6B000000 		.4byte	.LASF12
 694 0096 02       		.uleb128 0x2
 695 0097 08       		.byte	0x8
 696 0098 04       		.byte	0x4
 697 0099 64010000 		.4byte	.LASF13
 698 009d 02       		.uleb128 0x2
 699 009e 01       		.byte	0x1
 700 009f 08       		.byte	0x8
 701 00a0 56020000 		.4byte	.LASF14
 702 00a4 05       		.uleb128 0x5
 703 00a5 6B000000 		.4byte	0x6b
 704 00a9 04       		.uleb128 0x4
 705 00aa 00000000 		.4byte	.LASF15
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 23


 706 00ae 02       		.byte	0x2
 707 00af 6502     		.2byte	0x265
 708 00b1 B5000000 		.4byte	0xb5
 709 00b5 05       		.uleb128 0x5
 710 00b6 83000000 		.4byte	0x83
 711 00ba 04       		.uleb128 0x4
 712 00bb 2B020000 		.4byte	.LASF16
 713 00bf 02       		.byte	0x2
 714 00c0 7502     		.2byte	0x275
 715 00c2 C6000000 		.4byte	0xc6
 716 00c6 06       		.uleb128 0x6
 717 00c7 04       		.byte	0x4
 718 00c8 CC000000 		.4byte	0xcc
 719 00cc 07       		.uleb128 0x7
 720 00cd 02       		.uleb128 0x2
 721 00ce 04       		.byte	0x4
 722 00cf 07       		.byte	0x7
 723 00d0 3F020000 		.4byte	.LASF17
 724 00d4 08       		.uleb128 0x8
 725 00d5 AA020000 		.4byte	.LASF37
 726 00d9 01       		.byte	0x1
 727 00da 20       		.byte	0x20
 728 00db 00000000 		.4byte	.LFB1
 729 00df 48030000 		.4byte	.LFE1-.LFB1
 730 00e3 01       		.uleb128 0x1
 731 00e4 9C       		.byte	0x9c
 732 00e5 73010000 		.4byte	0x173
 733 00e9 09       		.uleb128 0x9
 734 00ea C1010000 		.4byte	.LASF18
 735 00ee 01       		.byte	0x1
 736 00ef 22       		.byte	0x22
 737 00f0 77000000 		.4byte	0x77
 738 00f4 05       		.uleb128 0x5
 739 00f5 03       		.byte	0x3
 740 00f6 00000000 		.4byte	locBufSize.4781
 741 00fa 0A       		.uleb128 0xa
 742 00fb 71000000 		.4byte	.LASF19
 743 00ff 01       		.byte	0x1
 744 0100 23       		.byte	0x23
 745 0101 83000000 		.4byte	0x83
 746 0105 00000000 		.4byte	.LLST0
 747 0109 0A       		.uleb128 0xa
 748 010a 1A010000 		.4byte	.LASF20
 749 010e 01       		.byte	0x1
 750 010f 24       		.byte	0x24
 751 0110 83000000 		.4byte	0x83
 752 0114 55000000 		.4byte	.LLST1
 753 0118 0A       		.uleb128 0xa
 754 0119 57000000 		.4byte	.LASF21
 755 011d 01       		.byte	0x1
 756 011e 26       		.byte	0x26
 757 011f 83000000 		.4byte	0x83
 758 0123 84000000 		.4byte	.LLST2
 759 0127 0A       		.uleb128 0xa
 760 0128 CC010000 		.4byte	.LASF22
 761 012c 01       		.byte	0x1
 762 012d 27       		.byte	0x27
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 24


 763 012e 83000000 		.4byte	0x83
 764 0132 AF000000 		.4byte	.LLST3
 765 0136 0A       		.uleb128 0xa
 766 0137 63000000 		.4byte	.LASF23
 767 013b 01       		.byte	0x1
 768 013c 28       		.byte	0x28
 769 013d 83000000 		.4byte	0x83
 770 0141 CD000000 		.4byte	.LLST4
 771 0145 0A       		.uleb128 0xa
 772 0146 88020000 		.4byte	.LASF24
 773 014a 01       		.byte	0x1
 774 014b 2A       		.byte	0x2a
 775 014c 83000000 		.4byte	0x83
 776 0150 0C010000 		.4byte	.LLST5
 777 0154 0A       		.uleb128 0xa
 778 0155 4A000000 		.4byte	.LASF25
 779 0159 01       		.byte	0x1
 780 015a 2B       		.byte	0x2b
 781 015b 83000000 		.4byte	0x83
 782 015f 1F010000 		.4byte	.LLST6
 783 0163 0B       		.uleb128 0xb
 784 0164 74010000 		.4byte	.LVL17
 785 0168 D1010000 		.4byte	0x1d1
 786 016c 0C       		.uleb128 0xc
 787 016d 01       		.uleb128 0x1
 788 016e 50       		.byte	0x50
 789 016f 01       		.uleb128 0x1
 790 0170 30       		.byte	0x30
 791 0171 00       		.byte	0
 792 0172 00       		.byte	0
 793 0173 0D       		.uleb128 0xd
 794 0174 3C010000 		.4byte	.LASF26
 795 0178 03       		.byte	0x3
 796 0179 3B       		.byte	0x3b
 797 017a BA000000 		.4byte	0xba
 798 017e 0D       		.uleb128 0xd
 799 017f 06000000 		.4byte	.LASF27
 800 0183 04       		.byte	0x4
 801 0184 1E       		.byte	0x1e
 802 0185 A4000000 		.4byte	0xa4
 803 0189 0D       		.uleb128 0xd
 804 018a 28000000 		.4byte	.LASF28
 805 018e 04       		.byte	0x4
 806 018f 1F       		.byte	0x1f
 807 0190 6B000000 		.4byte	0x6b
 808 0194 0D       		.uleb128 0xd
 809 0195 5B020000 		.4byte	.LASF29
 810 0199 04       		.byte	0x4
 811 019a 22       		.byte	0x22
 812 019b 9F010000 		.4byte	0x19f
 813 019f 06       		.uleb128 0x6
 814 01a0 04       		.byte	0x4
 815 01a1 A4000000 		.4byte	0xa4
 816 01a5 0D       		.uleb128 0xd
 817 01a6 16000000 		.4byte	.LASF30
 818 01aa 04       		.byte	0x4
 819 01ab 23       		.byte	0x23
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 25


 820 01ac 77000000 		.4byte	0x77
 821 01b0 0D       		.uleb128 0xd
 822 01b1 A2010000 		.4byte	.LASF31
 823 01b5 04       		.byte	0x4
 824 01b6 24       		.byte	0x24
 825 01b7 77000000 		.4byte	0x77
 826 01bb 0D       		.uleb128 0xd
 827 01bc 77020000 		.4byte	.LASF32
 828 01c0 04       		.byte	0x4
 829 01c1 25       		.byte	0x25
 830 01c2 77000000 		.4byte	0x77
 831 01c6 0D       		.uleb128 0xd
 832 01c7 54010000 		.4byte	.LASF33
 833 01cb 04       		.byte	0x4
 834 01cc 26       		.byte	0x26
 835 01cd 77000000 		.4byte	0x77
 836 01d1 0E       		.uleb128 0xe
 837 01d2 38020000 		.4byte	.LASF38
 838 01d6 05       		.byte	0x5
 839 01d7 E7       		.byte	0xe7
 840 01d8 0F       		.uleb128 0xf
 841 01d9 6B000000 		.4byte	0x6b
 842 01dd 00       		.byte	0
 843 01de 00       		.byte	0
 844              		.section	.debug_abbrev,"",%progbits
 845              	.Ldebug_abbrev0:
 846 0000 01       		.uleb128 0x1
 847 0001 11       		.uleb128 0x11
 848 0002 01       		.byte	0x1
 849 0003 25       		.uleb128 0x25
 850 0004 0E       		.uleb128 0xe
 851 0005 13       		.uleb128 0x13
 852 0006 0B       		.uleb128 0xb
 853 0007 03       		.uleb128 0x3
 854 0008 0E       		.uleb128 0xe
 855 0009 1B       		.uleb128 0x1b
 856 000a 0E       		.uleb128 0xe
 857 000b 55       		.uleb128 0x55
 858 000c 17       		.uleb128 0x17
 859 000d 11       		.uleb128 0x11
 860 000e 01       		.uleb128 0x1
 861 000f 10       		.uleb128 0x10
 862 0010 17       		.uleb128 0x17
 863 0011 00       		.byte	0
 864 0012 00       		.byte	0
 865 0013 02       		.uleb128 0x2
 866 0014 24       		.uleb128 0x24
 867 0015 00       		.byte	0
 868 0016 0B       		.uleb128 0xb
 869 0017 0B       		.uleb128 0xb
 870 0018 3E       		.uleb128 0x3e
 871 0019 0B       		.uleb128 0xb
 872 001a 03       		.uleb128 0x3
 873 001b 0E       		.uleb128 0xe
 874 001c 00       		.byte	0
 875 001d 00       		.byte	0
 876 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 26


 877 001f 24       		.uleb128 0x24
 878 0020 00       		.byte	0
 879 0021 0B       		.uleb128 0xb
 880 0022 0B       		.uleb128 0xb
 881 0023 3E       		.uleb128 0x3e
 882 0024 0B       		.uleb128 0xb
 883 0025 03       		.uleb128 0x3
 884 0026 08       		.uleb128 0x8
 885 0027 00       		.byte	0
 886 0028 00       		.byte	0
 887 0029 04       		.uleb128 0x4
 888 002a 16       		.uleb128 0x16
 889 002b 00       		.byte	0
 890 002c 03       		.uleb128 0x3
 891 002d 0E       		.uleb128 0xe
 892 002e 3A       		.uleb128 0x3a
 893 002f 0B       		.uleb128 0xb
 894 0030 3B       		.uleb128 0x3b
 895 0031 05       		.uleb128 0x5
 896 0032 49       		.uleb128 0x49
 897 0033 13       		.uleb128 0x13
 898 0034 00       		.byte	0
 899 0035 00       		.byte	0
 900 0036 05       		.uleb128 0x5
 901 0037 35       		.uleb128 0x35
 902 0038 00       		.byte	0
 903 0039 49       		.uleb128 0x49
 904 003a 13       		.uleb128 0x13
 905 003b 00       		.byte	0
 906 003c 00       		.byte	0
 907 003d 06       		.uleb128 0x6
 908 003e 0F       		.uleb128 0xf
 909 003f 00       		.byte	0
 910 0040 0B       		.uleb128 0xb
 911 0041 0B       		.uleb128 0xb
 912 0042 49       		.uleb128 0x49
 913 0043 13       		.uleb128 0x13
 914 0044 00       		.byte	0
 915 0045 00       		.byte	0
 916 0046 07       		.uleb128 0x7
 917 0047 15       		.uleb128 0x15
 918 0048 00       		.byte	0
 919 0049 27       		.uleb128 0x27
 920 004a 19       		.uleb128 0x19
 921 004b 00       		.byte	0
 922 004c 00       		.byte	0
 923 004d 08       		.uleb128 0x8
 924 004e 2E       		.uleb128 0x2e
 925 004f 01       		.byte	0x1
 926 0050 3F       		.uleb128 0x3f
 927 0051 19       		.uleb128 0x19
 928 0052 03       		.uleb128 0x3
 929 0053 0E       		.uleb128 0xe
 930 0054 3A       		.uleb128 0x3a
 931 0055 0B       		.uleb128 0xb
 932 0056 3B       		.uleb128 0x3b
 933 0057 0B       		.uleb128 0xb
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 27


 934 0058 27       		.uleb128 0x27
 935 0059 19       		.uleb128 0x19
 936 005a 11       		.uleb128 0x11
 937 005b 01       		.uleb128 0x1
 938 005c 12       		.uleb128 0x12
 939 005d 06       		.uleb128 0x6
 940 005e 40       		.uleb128 0x40
 941 005f 18       		.uleb128 0x18
 942 0060 9642     		.uleb128 0x2116
 943 0062 19       		.uleb128 0x19
 944 0063 01       		.uleb128 0x1
 945 0064 13       		.uleb128 0x13
 946 0065 00       		.byte	0
 947 0066 00       		.byte	0
 948 0067 09       		.uleb128 0x9
 949 0068 34       		.uleb128 0x34
 950 0069 00       		.byte	0
 951 006a 03       		.uleb128 0x3
 952 006b 0E       		.uleb128 0xe
 953 006c 3A       		.uleb128 0x3a
 954 006d 0B       		.uleb128 0xb
 955 006e 3B       		.uleb128 0x3b
 956 006f 0B       		.uleb128 0xb
 957 0070 49       		.uleb128 0x49
 958 0071 13       		.uleb128 0x13
 959 0072 02       		.uleb128 0x2
 960 0073 18       		.uleb128 0x18
 961 0074 00       		.byte	0
 962 0075 00       		.byte	0
 963 0076 0A       		.uleb128 0xa
 964 0077 34       		.uleb128 0x34
 965 0078 00       		.byte	0
 966 0079 03       		.uleb128 0x3
 967 007a 0E       		.uleb128 0xe
 968 007b 3A       		.uleb128 0x3a
 969 007c 0B       		.uleb128 0xb
 970 007d 3B       		.uleb128 0x3b
 971 007e 0B       		.uleb128 0xb
 972 007f 49       		.uleb128 0x49
 973 0080 13       		.uleb128 0x13
 974 0081 02       		.uleb128 0x2
 975 0082 17       		.uleb128 0x17
 976 0083 00       		.byte	0
 977 0084 00       		.byte	0
 978 0085 0B       		.uleb128 0xb
 979 0086 898201   		.uleb128 0x4109
 980 0089 01       		.byte	0x1
 981 008a 11       		.uleb128 0x11
 982 008b 01       		.uleb128 0x1
 983 008c 31       		.uleb128 0x31
 984 008d 13       		.uleb128 0x13
 985 008e 00       		.byte	0
 986 008f 00       		.byte	0
 987 0090 0C       		.uleb128 0xc
 988 0091 8A8201   		.uleb128 0x410a
 989 0094 00       		.byte	0
 990 0095 02       		.uleb128 0x2
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 28


 991 0096 18       		.uleb128 0x18
 992 0097 9142     		.uleb128 0x2111
 993 0099 18       		.uleb128 0x18
 994 009a 00       		.byte	0
 995 009b 00       		.byte	0
 996 009c 0D       		.uleb128 0xd
 997 009d 34       		.uleb128 0x34
 998 009e 00       		.byte	0
 999 009f 03       		.uleb128 0x3
 1000 00a0 0E       		.uleb128 0xe
 1001 00a1 3A       		.uleb128 0x3a
 1002 00a2 0B       		.uleb128 0xb
 1003 00a3 3B       		.uleb128 0x3b
 1004 00a4 0B       		.uleb128 0xb
 1005 00a5 49       		.uleb128 0x49
 1006 00a6 13       		.uleb128 0x13
 1007 00a7 3F       		.uleb128 0x3f
 1008 00a8 19       		.uleb128 0x19
 1009 00a9 3C       		.uleb128 0x3c
 1010 00aa 19       		.uleb128 0x19
 1011 00ab 00       		.byte	0
 1012 00ac 00       		.byte	0
 1013 00ad 0E       		.uleb128 0xe
 1014 00ae 2E       		.uleb128 0x2e
 1015 00af 01       		.byte	0x1
 1016 00b0 3F       		.uleb128 0x3f
 1017 00b1 19       		.uleb128 0x19
 1018 00b2 03       		.uleb128 0x3
 1019 00b3 0E       		.uleb128 0xe
 1020 00b4 3A       		.uleb128 0x3a
 1021 00b5 0B       		.uleb128 0xb
 1022 00b6 3B       		.uleb128 0x3b
 1023 00b7 0B       		.uleb128 0xb
 1024 00b8 27       		.uleb128 0x27
 1025 00b9 19       		.uleb128 0x19
 1026 00ba 3C       		.uleb128 0x3c
 1027 00bb 19       		.uleb128 0x19
 1028 00bc 00       		.byte	0
 1029 00bd 00       		.byte	0
 1030 00be 0F       		.uleb128 0xf
 1031 00bf 05       		.uleb128 0x5
 1032 00c0 00       		.byte	0
 1033 00c1 49       		.uleb128 0x49
 1034 00c2 13       		.uleb128 0x13
 1035 00c3 00       		.byte	0
 1036 00c4 00       		.byte	0
 1037 00c5 00       		.byte	0
 1038              		.section	.debug_loc,"",%progbits
 1039              	.Ldebug_loc0:
 1040              	.LLST0:
 1041 0000 10000000 		.4byte	.LVL1
 1042 0004 14010000 		.4byte	.LVL13
 1043 0008 0100     		.2byte	0x1
 1044 000a 54       		.byte	0x54
 1045 000b 14010000 		.4byte	.LVL13
 1046 000f 66010000 		.4byte	.LVL14
 1047 0013 0100     		.2byte	0x1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 29


 1048 0015 52       		.byte	0x52
 1049 0016 66010000 		.4byte	.LVL14
 1050 001a 30020000 		.4byte	.LVL32
 1051 001e 0100     		.2byte	0x1
 1052 0020 54       		.byte	0x54
 1053 0021 30020000 		.4byte	.LVL32
 1054 0025 3E020000 		.4byte	.LVL33
 1055 0029 0100     		.2byte	0x1
 1056 002b 53       		.byte	0x53
 1057 002c 3E020000 		.4byte	.LVL33
 1058 0030 5E020000 		.4byte	.LVL34
 1059 0034 0100     		.2byte	0x1
 1060 0036 54       		.byte	0x54
 1061 0037 5E020000 		.4byte	.LVL34
 1062 003b 62020000 		.4byte	.LVL35
 1063 003f 0100     		.2byte	0x1
 1064 0041 53       		.byte	0x53
 1065 0042 62020000 		.4byte	.LVL35
 1066 0046 C8020000 		.4byte	.LVL37
 1067 004a 0100     		.2byte	0x1
 1068 004c 54       		.byte	0x54
 1069 004d 00000000 		.4byte	0
 1070 0051 00000000 		.4byte	0
 1071              	.LLST1:
 1072 0055 FA010000 		.4byte	.LVL27
 1073 0059 08020000 		.4byte	.LVL28
 1074 005d 0200     		.2byte	0x2
 1075 005f 32       		.byte	0x32
 1076 0060 9F       		.byte	0x9f
 1077 0061 08020000 		.4byte	.LVL28
 1078 0065 10020000 		.4byte	.LVL30
 1079 0069 0100     		.2byte	0x1
 1080 006b 53       		.byte	0x53
 1081 006c 10020000 		.4byte	.LVL30
 1082 0070 14020000 		.4byte	.LVL31
 1083 0074 0600     		.2byte	0x6
 1084 0076 73       		.byte	0x73
 1085 0077 00       		.sleb128 0
 1086 0078 09       		.byte	0x9
 1087 0079 DF       		.byte	0xdf
 1088 007a 1A       		.byte	0x1a
 1089 007b 9F       		.byte	0x9f
 1090 007c 00000000 		.4byte	0
 1091 0080 00000000 		.4byte	0
 1092              	.LLST2:
 1093 0084 9A010000 		.4byte	.LVL19
 1094 0088 9E010000 		.4byte	.LVL20
 1095 008c 0200     		.2byte	0x2
 1096 008e 31       		.byte	0x31
 1097 008f 9F       		.byte	0x9f
 1098 0090 B2010000 		.4byte	.LVL21
 1099 0094 B6010000 		.4byte	.LVL22
 1100 0098 0200     		.2byte	0x2
 1101 009a 30       		.byte	0x30
 1102 009b 9F       		.byte	0x9f
 1103 009c B6010000 		.4byte	.LVL22
 1104 00a0 E8010000 		.4byte	.LVL26
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 30


 1105 00a4 0100     		.2byte	0x1
 1106 00a6 50       		.byte	0x50
 1107 00a7 00000000 		.4byte	0
 1108 00ab 00000000 		.4byte	0
 1109              	.LLST3:
 1110 00af 90010000 		.4byte	.LVL18
 1111 00b3 9E010000 		.4byte	.LVL20
 1112 00b7 0100     		.2byte	0x1
 1113 00b9 51       		.byte	0x51
 1114 00ba B2010000 		.4byte	.LVL21
 1115 00be D6010000 		.4byte	.LVL25
 1116 00c2 0100     		.2byte	0x1
 1117 00c4 51       		.byte	0x51
 1118 00c5 00000000 		.4byte	0
 1119 00c9 00000000 		.4byte	0
 1120              	.LLST4:
 1121 00cd AC000000 		.4byte	.LVL4
 1122 00d1 D4000000 		.4byte	.LVL5
 1123 00d5 0100     		.2byte	0x1
 1124 00d7 52       		.byte	0x52
 1125 00d8 E2000000 		.4byte	.LVL7
 1126 00dc E4000000 		.4byte	.LVL8
 1127 00e0 0100     		.2byte	0x1
 1128 00e2 52       		.byte	0x52
 1129 00e3 EA000000 		.4byte	.LVL9
 1130 00e7 F2000000 		.4byte	.LVL10
 1131 00eb 0100     		.2byte	0x1
 1132 00ed 52       		.byte	0x52
 1133 00ee FE000000 		.4byte	.LVL11
 1134 00f2 68010000 		.4byte	.LVL15
 1135 00f6 0100     		.2byte	0x1
 1136 00f8 52       		.byte	0x52
 1137 00f9 6E010000 		.4byte	.LVL16
 1138 00fd 73010000 		.4byte	.LVL17-1
 1139 0101 0100     		.2byte	0x1
 1140 0103 52       		.byte	0x52
 1141 0104 00000000 		.4byte	0
 1142 0108 00000000 		.4byte	0
 1143              	.LLST5:
 1144 010c 18000000 		.4byte	.LVL3
 1145 0110 C8020000 		.4byte	.LVL39
 1146 0114 0100     		.2byte	0x1
 1147 0116 56       		.byte	0x56
 1148 0117 00000000 		.4byte	0
 1149 011b 00000000 		.4byte	0
 1150              	.LLST6:
 1151 011f 14000000 		.4byte	.LVL2
 1152 0123 C8020000 		.4byte	.LVL38
 1153 0127 0100     		.2byte	0x1
 1154 0129 55       		.byte	0x55
 1155 012a 00000000 		.4byte	0
 1156 012e 00000000 		.4byte	0
 1157              		.section	.debug_aranges,"",%progbits
 1158 0000 1C000000 		.4byte	0x1c
 1159 0004 0200     		.2byte	0x2
 1160 0006 00000000 		.4byte	.Ldebug_info0
 1161 000a 04       		.byte	0x4
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 31


 1162 000b 00       		.byte	0
 1163 000c 0000     		.2byte	0
 1164 000e 0000     		.2byte	0
 1165 0010 00000000 		.4byte	.LFB1
 1166 0014 48030000 		.4byte	.LFE1-.LFB1
 1167 0018 00000000 		.4byte	0
 1168 001c 00000000 		.4byte	0
 1169              		.section	.debug_ranges,"",%progbits
 1170              	.Ldebug_ranges0:
 1171 0000 00000000 		.4byte	.LFB1
 1172 0004 48030000 		.4byte	.LFE1
 1173 0008 00000000 		.4byte	0
 1174 000c 00000000 		.4byte	0
 1175              		.section	.debug_line,"",%progbits
 1176              	.Ldebug_line0:
 1177 0000 36010000 		.section	.debug_str,"MS",%progbits,1
 1177      02007B00 
 1177      00000201 
 1177      FB0E0D00 
 1177      01010101 
 1178              	.LASF15:
 1179 0000 72656733 		.ascii	"reg32\000"
 1179      3200
 1180              	.LASF27:
 1181 0006 455A4932 		.ascii	"EZI2C_curStatus\000"
 1181      435F6375 
 1181      72537461 
 1181      74757300 
 1182              	.LASF30:
 1183 0016 455A4932 		.ascii	"EZI2C_bufSizeBuf1\000"
 1183      435F6275 
 1183      6653697A 
 1183      65427566 
 1183      3100
 1184              	.LASF28:
 1185 0028 455A4932 		.ascii	"EZI2C_fsmState\000"
 1185      435F6673 
 1185      6D537461 
 1185      746500
 1186              	.LASF3:
 1187 0037 73686F72 		.ascii	"short unsigned int\000"
 1187      7420756E 
 1187      7369676E 
 1187      65642069 
 1187      6E7400
 1188              	.LASF25:
 1189 004a 6C6F6349 		.ascii	"locIntrSlave\000"
 1189      6E747253 
 1189      6C617665 
 1189      00
 1190              	.LASF21:
 1191 0057 656E6454 		.ascii	"endTransfer\000"
 1191      72616E73 
 1191      66657200 
 1192              	.LASF23:
 1193 0063 6C6F6342 		.ascii	"locByte\000"
 1193      79746500 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 32


 1194              	.LASF12:
 1195 006b 666C6F61 		.ascii	"float\000"
 1195      7400
 1196              	.LASF19:
 1197 0071 6C6F6349 		.ascii	"locIndex\000"
 1197      6E646578 
 1197      00
 1198              	.LASF1:
 1199 007a 756E7369 		.ascii	"unsigned char\000"
 1199      676E6564 
 1199      20636861 
 1199      7200
 1200              	.LASF34:
 1201 0088 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1201      4320342E 
 1201      392E3320 
 1201      32303135 
 1201      30333033 
 1202 00bb 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 1202      20726576 
 1202      6973696F 
 1202      6E203232 
 1202      31323230 
 1203 00ee 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 1203      67202D66 
 1203      66756E63 
 1203      74696F6E 
 1203      2D736563 
 1204              	.LASF20:
 1205 011a 6C6F6353 		.ascii	"locStatus\000"
 1205      74617475 
 1205      7300
 1206              	.LASF5:
 1207 0124 6C6F6E67 		.ascii	"long unsigned int\000"
 1207      20756E73 
 1207      69676E65 
 1207      6420696E 
 1207      7400
 1208              	.LASF9:
 1209 0136 75696E74 		.ascii	"uint8\000"
 1209      3800
 1210              	.LASF26:
 1211 013c 455A4932 		.ascii	"EZI2C_customIntrHandler\000"
 1211      435F6375 
 1211      73746F6D 
 1211      496E7472 
 1211      48616E64 
 1212              	.LASF33:
 1213 0154 455A4932 		.ascii	"EZI2C_indexBuf1\000"
 1213      435F696E 
 1213      64657842 
 1213      75663100 
 1214              	.LASF13:
 1215 0164 646F7562 		.ascii	"double\000"
 1215      6C6500
 1216              	.LASF10:
 1217 016b 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 33


 1217      313600
 1218              	.LASF11:
 1219 0172 75696E74 		.ascii	"uint32\000"
 1219      333200
 1220              	.LASF35:
 1221 0179 47656E65 		.ascii	"Generated_Source\\PSoC4\\EZI2C_EZI2C_INT.c\000"
 1221      72617465 
 1221      645F536F 
 1221      75726365 
 1221      5C50536F 
 1222              	.LASF31:
 1223 01a2 455A4932 		.ascii	"EZI2C_protectBuf1\000"
 1223      435F7072 
 1223      6F746563 
 1223      74427566 
 1223      3100
 1224              	.LASF8:
 1225 01b4 756E7369 		.ascii	"unsigned int\000"
 1225      676E6564 
 1225      20696E74 
 1225      00
 1226              	.LASF18:
 1227 01c1 6C6F6342 		.ascii	"locBufSize\000"
 1227      75665369 
 1227      7A6500
 1228              	.LASF22:
 1229 01cc 6669666F 		.ascii	"fifoIndex\000"
 1229      496E6465 
 1229      7800
 1230              	.LASF7:
 1231 01d6 6C6F6E67 		.ascii	"long long unsigned int\000"
 1231      206C6F6E 
 1231      6720756E 
 1231      7369676E 
 1231      65642069 
 1232              	.LASF36:
 1233 01ed 443A5C6C 		.ascii	"D:\\local_svn\\AYBR3000\\AYBR3000_V1.0\\TOUCH_TEST\\"
 1233      6F63616C 
 1233      5F73766E 
 1233      5C415942 
 1233      52333030 
 1234 021c 41594252 		.ascii	"AYBR3000.cydsn\000"
 1234      33303030 
 1234      2E637964 
 1234      736E00
 1235              	.LASF16:
 1236 022b 63796973 		.ascii	"cyisraddress\000"
 1236      72616464 
 1236      72657373 
 1236      00
 1237              	.LASF38:
 1238 0238 43794861 		.ascii	"CyHalt\000"
 1238      6C7400
 1239              	.LASF17:
 1240 023f 73697A65 		.ascii	"sizetype\000"
 1240      74797065 
 1240      00
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccijwwP1.s 			page 34


 1241              	.LASF6:
 1242 0248 6C6F6E67 		.ascii	"long long int\000"
 1242      206C6F6E 
 1242      6720696E 
 1242      7400
 1243              	.LASF14:
 1244 0256 63686172 		.ascii	"char\000"
 1244      00
 1245              	.LASF29:
 1246 025b 455A4932 		.ascii	"EZI2C_dataBuffer1\000"
 1246      435F6461 
 1246      74614275 
 1246      66666572 
 1246      3100
 1247              	.LASF2:
 1248 026d 73686F72 		.ascii	"short int\000"
 1248      7420696E 
 1248      7400
 1249              	.LASF32:
 1250 0277 455A4932 		.ascii	"EZI2C_offsetBuf1\000"
 1250      435F6F66 
 1250      66736574 
 1250      42756631 
 1250      00
 1251              	.LASF24:
 1252 0288 6C6F6349 		.ascii	"locIntrCause\000"
 1252      6E747243 
 1252      61757365 
 1252      00
 1253              	.LASF4:
 1254 0295 6C6F6E67 		.ascii	"long int\000"
 1254      20696E74 
 1254      00
 1255              	.LASF0:
 1256 029e 7369676E 		.ascii	"signed char\000"
 1256      65642063 
 1256      68617200 
 1257              	.LASF37:
 1258 02aa 455A4932 		.ascii	"EZI2C_EZI2C_STRETCH_ISR\000"
 1258      435F455A 
 1258      4932435F 
 1258      53545245 
 1258      5443485F 
 1259              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
