ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	2
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB1:
  25              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.50
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 2


  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 3


  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 108 0
  27              		.cfi_startproc
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 109 0
  29 0000 034A     		ldr	r2, .L2
  30 0002 1368     		ldr	r3, [r2]
  31 0004 8021     		mov	r1, #128
  32 0006 0906     		lsl	r1, r1, #24
  33 0008 0B43     		orr	r3, r1
  34 000a 1360     		str	r3, [r2]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
  35              		.loc 1 124 0
  36              		@ sp needed
  37 000c 7047     		bx	lr
  38              	.L3:
  39 000e C046     		.align	2
  40              	.L2:
  41 0010 30000340 		.word	1073938480
  42              		.cfi_endproc
  43              	.LFE1:
  44              		.size	CySysClkImoStart, .-CySysClkImoStart
  45              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  46              		.align	2
  47              		.global	CySysClkImoDisableWcoLock
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 4


  48              		.code	16
  49              		.thumb_func
  50              		.type	CySysClkImoDisableWcoLock, %function
  51              	CySysClkImoDisableWcoLock:
  52              	.LFB4:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 150:Generated_Source\PSoC4/CyLib.c **** }
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 5


 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 6


 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
  53              		.loc 1 286 0
  54              		.cfi_startproc
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  55              		.loc 1 287 0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 7


  56 0000 024A     		ldr	r2, .L5
  57 0002 1168     		ldr	r1, [r2]
  58 0004 024B     		ldr	r3, .L5+4
  59 0006 0B40     		and	r3, r1
  60 0008 1360     		str	r3, [r2]
 288:Generated_Source\PSoC4/CyLib.c ****     }
  61              		.loc 1 288 0
  62              		@ sp needed
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 00000740 		.word	1074200576
  68 0010 FFFFFFBF 		.word	-1073741825
  69              		.cfi_endproc
  70              	.LFE4:
  71              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
  72              		.section	.text.CySysClkImoStop,"ax",%progbits
  73              		.align	2
  74              		.global	CySysClkImoStop
  75              		.code	16
  76              		.thumb_func
  77              		.type	CySysClkImoStop, %function
  78              	CySysClkImoStop:
  79              	.LFB2:
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  80              		.loc 1 140 0
  81              		.cfi_startproc
  82 0000 08B5     		push	{r3, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 3, -8
  85              		.cfi_offset 14, -4
 142:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  86              		.loc 1 142 0
  87 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
  88              	.LVL0:
 149:Generated_Source\PSoC4/CyLib.c **** }
  89              		.loc 1 149 0
  90 0006 034A     		ldr	r2, .L8
  91 0008 1368     		ldr	r3, [r2]
  92 000a 5B00     		lsl	r3, r3, #1
  93 000c 5B08     		lsr	r3, r3, #1
  94 000e 1360     		str	r3, [r2]
 150:Generated_Source\PSoC4/CyLib.c **** 
  95              		.loc 1 150 0
  96              		@ sp needed
  97 0010 08BD     		pop	{r3, pc}
  98              	.L9:
  99 0012 C046     		.align	2
 100              	.L8:
 101 0014 30000340 		.word	1073938480
 102              		.cfi_endproc
 103              	.LFE2:
 104              		.size	CySysClkImoStop, .-CySysClkImoStop
 105              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 106              		.align	2
 107              		.global	CySysClkImoGetWcoLock
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 8


 108              		.code	16
 109              		.thumb_func
 110              		.type	CySysClkImoGetWcoLock, %function
 111              	CySysClkImoGetWcoLock:
 112              	.LFB5:
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 113              		.loc 1 305 0
 114              		.cfi_startproc
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 115              		.loc 1 306 0
 116 0000 034B     		ldr	r3, .L12
 117 0002 1868     		ldr	r0, [r3]
 118 0004 8023     		mov	r3, #128
 119 0006 DB05     		lsl	r3, r3, #23
 120 0008 1840     		and	r0, r3
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 121              		.loc 1 307 0
 122 000a 00D0     		beq	.L11
 123 000c 0120     		mov	r0, #1
 124              	.L11:
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 125              		.loc 1 309 0
 126              		@ sp needed
 127 000e 7047     		bx	lr
 128              	.L13:
 129              		.align	2
 130              	.L12:
 131 0010 00000740 		.word	1074200576
 132              		.cfi_endproc
 133              	.LFE5:
 134              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 135              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 136              		.align	2
 137              		.global	CySysClkWriteHfclkDirect
 138              		.code	16
 139              		.thumb_func
 140              		.type	CySysClkWriteHfclkDirect, %function
 141              	CySysClkWriteHfclkDirect:
 142              	.LFB6:
 310:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 9


 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 10


 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 11


 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
 143              		.loc 1 430 0
 144              		.cfi_startproc
 145              	.LVL1:
 146 0000 10B5     		push	{r4, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 4, -8
 149              		.cfi_offset 14, -4
 150 0002 041C     		mov	r4, r0
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 151              		.loc 1 434 0
 152 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 153              	.LVL2:
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 154              		.loc 1 437 0
 155 0008 0449     		ldr	r1, .L15
 156 000a 0A68     		ldr	r2, [r1]
 157 000c 0323     		mov	r3, #3
 158 000e 9A43     		bic	r2, r3
 159              	.LVL3:
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 160              		.loc 1 448 0
 161 0010 2340     		and	r3, r4
 162 0012 1343     		orr	r3, r2
 163              	.LVL4:
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 164              		.loc 1 451 0
 165 0014 0B60     		str	r3, [r1]
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 166              		.loc 1 453 0
 167 0016 FFF7FEFF 		bl	CyExitCriticalSection
 168              	.LVL5:
 454:Generated_Source\PSoC4/CyLib.c **** }
 169              		.loc 1 454 0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 12


 170              		@ sp needed
 171              	.LVL6:
 172 001a 10BD     		pop	{r4, pc}
 173              	.L16:
 174              		.align	2
 175              	.L15:
 176 001c 28000340 		.word	1073938472
 177              		.cfi_endproc
 178              	.LFE6:
 179              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 180              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 181              		.align	2
 182              		.global	CySysEnablePumpClock
 183              		.code	16
 184              		.thumb_func
 185              		.type	CySysEnablePumpClock, %function
 186              	CySysEnablePumpClock:
 187              	.LFB7:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 188              		.loc 1 474 0
 189              		.cfi_startproc
 190              	.LVL7:
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 191              		.loc 1 487 0
 192 0000 C307     		lsl	r3, r0, #31
 193 0002 07D5     		bpl	.L18
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 13


 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 194              		.loc 1 489 0
 195 0004 094A     		ldr	r2, .L20
 196 0006 1168     		ldr	r1, [r2]
 197 0008 094B     		ldr	r3, .L20+4
 198 000a 1B68     		ldr	r3, [r3]
 199 000c 1B01     		lsl	r3, r3, #4
 200 000e 0B43     		orr	r3, r1
 201 0010 1360     		str	r3, [r2]
 202 0012 09E0     		b	.L17
 203              	.L18:
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 204              		.loc 1 493 0
 205 0014 054A     		ldr	r2, .L20
 206 0016 1368     		ldr	r3, [r2]
 207 0018 9B06     		lsl	r3, r3, #26
 208 001a 9B0F     		lsr	r3, r3, #30
 209 001c 0449     		ldr	r1, .L20+4
 210 001e 0B60     		str	r3, [r1]
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 211              		.loc 1 495 0
 212 0020 1368     		ldr	r3, [r2]
 213 0022 3021     		mov	r1, #48
 214 0024 8B43     		bic	r3, r1
 215 0026 1360     		str	r3, [r2]
 216              	.L17:
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 217              		.loc 1 498 0
 218              		@ sp needed
 219 0028 7047     		bx	lr
 220              	.L21:
 221 002a C046     		.align	2
 222              	.L20:
 223 002c 28000340 		.word	1073938472
 224 0030 00000000 		.word	.LANCHOR0
 225              		.cfi_endproc
 226              	.LFE7:
 227              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 228              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 229              		.align	2
 230              		.global	CySysClkGetSysclkSource
 231              		.code	16
 232              		.thumb_func
 233              		.type	CySysClkGetSysclkSource, %function
 234              	CySysClkGetSysclkSource:
 235              	.LFB8:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 14


 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 236              		.loc 1 511 0
 237              		.cfi_startproc
 238 0000 10B5     		push	{r4, lr}
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 4, -8
 241              		.cfi_offset 14, -4
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 242              		.loc 1 515 0
 243 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 244              	.LVL8:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 245              		.loc 1 525 0
 246 0006 044B     		ldr	r3, .L23
 247 0008 1B68     		ldr	r3, [r3]
 248 000a 0324     		mov	r4, #3
 249 000c 1C40     		and	r4, r3
 250              	.LVL9:
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 251              		.loc 1 528 0
 252 000e FFF7FEFF 		bl	CyExitCriticalSection
 253              	.LVL10:
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 254              		.loc 1 531 0
 255 0012 201C     		mov	r0, r4
 256              		@ sp needed
 257              	.LVL11:
 258 0014 10BD     		pop	{r4, pc}
 259              	.L24:
 260 0016 C046     		.align	2
 261              	.L23:
 262 0018 28000340 		.word	1073938472
 263              		.cfi_endproc
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 15


 264              	.LFE8:
 265              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 266              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 267              		.align	2
 268              		.global	CySysClkWriteSysclkDiv
 269              		.code	16
 270              		.thumb_func
 271              		.type	CySysClkWriteSysclkDiv, %function
 272              	CySysClkWriteSysclkDiv:
 273              	.LFB9:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 274              		.loc 1 566 0
 275              		.cfi_startproc
 276              	.LVL12:
 277 0000 10B5     		push	{r4, lr}
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 4, -8
 280              		.cfi_offset 14, -4
 281 0002 041C     		mov	r4, r0
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 282              		.loc 1 569 0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 16


 283 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 284              	.LVL13:
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 285              		.loc 1 571 0
 286 0008 A401     		lsl	r4, r4, #6
 287              	.LVL14:
 288 000a FF23     		mov	r3, #255
 289 000c 2340     		and	r3, r4
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 290              		.loc 1 573 0
 291 000e 0449     		ldr	r1, .L26
 292 0010 0A68     		ldr	r2, [r1]
 293 0012 C024     		mov	r4, #192
 294 0014 A243     		bic	r2, r4
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 295              		.loc 1 572 0
 296 0016 1343     		orr	r3, r2
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 297              		.loc 1 571 0
 298 0018 0B60     		str	r3, [r1]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 299              		.loc 1 576 0
 300 001a FFF7FEFF 		bl	CyExitCriticalSection
 301              	.LVL15:
 577:Generated_Source\PSoC4/CyLib.c **** }
 302              		.loc 1 577 0
 303              		@ sp needed
 304 001e 10BD     		pop	{r4, pc}
 305              	.L27:
 306              		.align	2
 307              	.L26:
 308 0020 28000340 		.word	1073938472
 309              		.cfi_endproc
 310              	.LFE9:
 311              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 312              		.section	.text.CySysClkWriteHfclkDiv,"ax",%progbits
 313              		.align	2
 314              		.global	CySysClkWriteHfclkDiv
 315              		.code	16
 316              		.thumb_func
 317              		.type	CySysClkWriteHfclkDiv, %function
 318              	CySysClkWriteHfclkDiv:
 319              	.LFB11:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 17


 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 18


 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 19


 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 20


 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 21


 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 22


 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 23


 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 320              		.loc 1 982 0
 321              		.cfi_startproc
 322              	.LVL16:
 323 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 24


 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 4, -8
 326              		.cfi_offset 14, -4
 327 0002 041C     		mov	r4, r0
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 328              		.loc 1 985 0
 329 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 330              	.LVL17:
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 331              		.loc 1 987 0
 332 0008 054A     		ldr	r2, .L29
 333 000a 1368     		ldr	r3, [r2]
 334 000c 0C21     		mov	r1, #12
 335 000e 8B43     		bic	r3, r1
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 336              		.loc 1 989 0
 337 0010 0939     		sub	r1, r1, #9
 338 0012 0C40     		and	r4, r1
 339              	.LVL18:
 340 0014 A400     		lsl	r4, r4, #2
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 341              		.loc 1 988 0
 342 0016 1C43     		orr	r4, r3
 987:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 343              		.loc 1 987 0
 344 0018 1460     		str	r4, [r2]
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 345              		.loc 1 991 0
 346 001a FFF7FEFF 		bl	CyExitCriticalSection
 347              	.LVL19:
 992:Generated_Source\PSoC4/CyLib.c ****     }
 348              		.loc 1 992 0
 349              		@ sp needed
 350 001e 10BD     		pop	{r4, pc}
 351              	.L30:
 352              		.align	2
 353              	.L29:
 354 0020 28000340 		.word	1073938472
 355              		.cfi_endproc
 356              	.LFE11:
 357              		.size	CySysClkWriteHfclkDiv, .-CySysClkWriteHfclkDiv
 358              		.section	.text.CySysGetResetReason,"ax",%progbits
 359              		.align	2
 360              		.global	CySysGetResetReason
 361              		.code	16
 362              		.thumb_func
 363              		.type	CySysGetResetReason, %function
 364              	CySysGetResetReason:
 365              	.LFB12:
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 25


 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 26


1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 27


1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 28


1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 29


1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 30


1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 31


1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 32


1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 33


1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 34


1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 35


1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 36


1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 37


1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 38


1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 39


1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 40


1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 41


1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 42


1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 43


2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 44


2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 45


2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2152:Generated_Source\PSoC4/CyLib.c ****     }
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2169:Generated_Source\PSoC4/CyLib.c ****     }
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2185:Generated_Source\PSoC4/CyLib.c ****     }
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 46


2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 366              		.loc 1 2209 0
 367              		.cfi_startproc
 368              	.LVL20:
 369 0000 021C     		mov	r2, r0
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 370              		.loc 1 2212 0
 371 0002 1920     		mov	r0, #25
 372              	.LVL21:
 373 0004 0240     		and	r2, r0
 374              	.LVL22:
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 375              		.loc 1 2213 0
 376 0006 0249     		ldr	r1, .L32
 377 0008 0B68     		ldr	r3, [r1]
 378 000a 1840     		and	r0, r3
 379              	.LVL23:
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 380              		.loc 1 2215 0
 381 000c 0A60     		str	r2, [r1]
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
 382              		.loc 1 2218 0
 383              		@ sp needed
 384 000e 7047     		bx	lr
 385              	.L33:
 386              		.align	2
 387              	.L32:
 388 0010 54000340 		.word	1073938516
 389              		.cfi_endproc
 390              	.LFE12:
 391              		.size	CySysGetResetReason, .-CySysGetResetReason
 392              		.section	.text.CyDisableInts,"ax",%progbits
 393              		.align	2
 394              		.global	CyDisableInts
 395              		.code	16
 396              		.thumb_func
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 47


 397              		.type	CyDisableInts, %function
 398              	CyDisableInts:
 399              	.LFB13:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 400              		.loc 1 2232 0
 401              		.cfi_startproc
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 402              		.loc 1 2236 0
 403 0000 024B     		ldr	r3, .L35
 404 0002 1868     		ldr	r0, [r3]
 405              	.LVL24:
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 406              		.loc 1 2239 0
 407 0004 0122     		mov	r2, #1
 408 0006 5242     		neg	r2, r2
 409 0008 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
 410              		.loc 1 2242 0
 411              		@ sp needed
 412 000a 7047     		bx	lr
 413              	.L36:
 414              		.align	2
 415              	.L35:
 416 000c 80E100E0 		.word	-536813184
 417              		.cfi_endproc
 418              	.LFE13:
 419              		.size	CyDisableInts, .-CyDisableInts
 420              		.section	.text.CyEnableInts,"ax",%progbits
 421              		.align	2
 422              		.global	CyEnableInts
 423              		.code	16
 424              		.thumb_func
 425              		.type	CyEnableInts, %function
 426              	CyEnableInts:
 427              	.LFB14:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 48


2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 428              		.loc 1 2255 0
 429              		.cfi_startproc
 430              	.LVL25:
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 431              		.loc 1 2256 0
 432 0000 014B     		ldr	r3, .L38
 433 0002 1860     		str	r0, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** }
 434              		.loc 1 2257 0
 435              		@ sp needed
 436 0004 7047     		bx	lr
 437              	.L39:
 438 0006 C046     		.align	2
 439              	.L38:
 440 0008 00E100E0 		.word	-536813312
 441              		.cfi_endproc
 442              	.LFE14:
 443              		.size	CyEnableInts, .-CyEnableInts
 444              		.section	.text.CyIntEnable,"ax",%progbits
 445              		.align	2
 446              		.global	CyIntEnable
 447              		.code	16
 448              		.thumb_func
 449              		.type	CyIntEnable, %function
 450              	CyIntEnable:
 451              	.LFB21:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 49


2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2320:Generated_Source\PSoC4/CyLib.c **** }
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 50


2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2370:Generated_Source\PSoC4/CyLib.c **** }
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 51


2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2425:Generated_Source\PSoC4/CyLib.c **** }
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 452              		.loc 1 2438 0
 453              		.cfi_startproc
 454              	.LVL26:
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 455              		.loc 1 2439 0
 456 0000 1F23     		mov	r3, #31
 457 0002 1840     		and	r0, r3
 458              	.LVL27:
 459 0004 1E3B     		sub	r3, r3, #30
 460 0006 8340     		lsl	r3, r3, r0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 52


 461 0008 181C     		mov	r0, r3
 462 000a 014B     		ldr	r3, .L41
 463 000c 1860     		str	r0, [r3]
2440:Generated_Source\PSoC4/CyLib.c **** }
 464              		.loc 1 2440 0
 465              		@ sp needed
 466 000e 7047     		bx	lr
 467              	.L42:
 468              		.align	2
 469              	.L41:
 470 0010 00E100E0 		.word	-536813312
 471              		.cfi_endproc
 472              	.LFE21:
 473              		.size	CyIntEnable, .-CyIntEnable
 474              		.section	.text.CyIntGetState,"ax",%progbits
 475              		.align	2
 476              		.global	CyIntGetState
 477              		.code	16
 478              		.thumb_func
 479              		.type	CyIntGetState, %function
 480              	CyIntGetState:
 481              	.LFB22:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 482              		.loc 1 2456 0
 483              		.cfi_startproc
 484              	.LVL28:
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 485              		.loc 1 2458 0
 486 0000 044B     		ldr	r3, .L44
 487 0002 1B68     		ldr	r3, [r3]
 488 0004 1F22     		mov	r2, #31
 489 0006 1040     		and	r0, r2
 490              	.LVL29:
 491 0008 C340     		lsr	r3, r3, r0
 492 000a 181C     		mov	r0, r3
 493 000c 0123     		mov	r3, #1
 494 000e 1840     		and	r0, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 495              		.loc 1 2459 0
 496              		@ sp needed
 497 0010 7047     		bx	lr
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 53


 498              	.L45:
 499 0012 C046     		.align	2
 500              	.L44:
 501 0014 00E100E0 		.word	-536813312
 502              		.cfi_endproc
 503              	.LFE22:
 504              		.size	CyIntGetState, .-CyIntGetState
 505              		.section	.text.CyIntDisable,"ax",%progbits
 506              		.align	2
 507              		.global	CyIntDisable
 508              		.code	16
 509              		.thumb_func
 510              		.type	CyIntDisable, %function
 511              	CyIntDisable:
 512              	.LFB23:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 513              		.loc 1 2472 0
 514              		.cfi_startproc
 515              	.LVL30:
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 516              		.loc 1 2473 0
 517 0000 1F23     		mov	r3, #31
 518 0002 1840     		and	r0, r3
 519              	.LVL31:
 520 0004 1E3B     		sub	r3, r3, #30
 521 0006 8340     		lsl	r3, r3, r0
 522 0008 181C     		mov	r0, r3
 523 000a 014B     		ldr	r3, .L47
 524 000c 1860     		str	r0, [r3]
2474:Generated_Source\PSoC4/CyLib.c **** }
 525              		.loc 1 2474 0
 526              		@ sp needed
 527 000e 7047     		bx	lr
 528              	.L48:
 529              		.align	2
 530              	.L47:
 531 0010 80E100E0 		.word	-536813184
 532              		.cfi_endproc
 533              	.LFE23:
 534              		.size	CyIntDisable, .-CyIntDisable
 535              		.section	.text.CyIntSetPending,"ax",%progbits
 536              		.align	2
 537              		.global	CyIntSetPending
 538              		.code	16
 539              		.thumb_func
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 54


 540              		.type	CyIntSetPending, %function
 541              	CyIntSetPending:
 542              	.LFB24:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 543              		.loc 1 2486 0
 544              		.cfi_startproc
 545              	.LVL32:
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 546              		.loc 1 2487 0
 547 0000 1F23     		mov	r3, #31
 548 0002 1840     		and	r0, r3
 549              	.LVL33:
 550 0004 1E3B     		sub	r3, r3, #30
 551 0006 8340     		lsl	r3, r3, r0
 552 0008 181C     		mov	r0, r3
 553 000a 014B     		ldr	r3, .L50
 554 000c 1860     		str	r0, [r3]
2488:Generated_Source\PSoC4/CyLib.c **** }
 555              		.loc 1 2488 0
 556              		@ sp needed
 557 000e 7047     		bx	lr
 558              	.L51:
 559              		.align	2
 560              	.L50:
 561 0010 00E200E0 		.word	-536813056
 562              		.cfi_endproc
 563              	.LFE24:
 564              		.size	CyIntSetPending, .-CyIntSetPending
 565              		.section	.text.CyIntClearPending,"ax",%progbits
 566              		.align	2
 567              		.global	CyIntClearPending
 568              		.code	16
 569              		.thumb_func
 570              		.type	CyIntClearPending, %function
 571              	CyIntClearPending:
 572              	.LFB25:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 55


2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 573              		.loc 1 2501 0
 574              		.cfi_startproc
 575              	.LVL34:
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 576              		.loc 1 2502 0
 577 0000 1F23     		mov	r3, #31
 578 0002 1840     		and	r0, r3
 579              	.LVL35:
 580 0004 1E3B     		sub	r3, r3, #30
 581 0006 8340     		lsl	r3, r3, r0
 582 0008 181C     		mov	r0, r3
 583 000a 014B     		ldr	r3, .L53
 584 000c 1860     		str	r0, [r3]
2503:Generated_Source\PSoC4/CyLib.c **** }
 585              		.loc 1 2503 0
 586              		@ sp needed
 587 000e 7047     		bx	lr
 588              	.L54:
 589              		.align	2
 590              	.L53:
 591 0010 80E200E0 		.word	-536812928
 592              		.cfi_endproc
 593              	.LFE25:
 594              		.size	CyIntClearPending, .-CyIntClearPending
 595              		.section	.text.CyHalt,"ax",%progbits
 596              		.align	2
 597              		.global	CyHalt
 598              		.code	16
 599              		.thumb_func
 600              		.type	CyHalt, %function
 601              	CyHalt:
 602              	.LFB26:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 603              		.loc 1 2516 0
 604              		.cfi_startproc
 605              	.LVL36:
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 56


2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 606              		.loc 1 2525 0
 607              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 608 0000 01BE     		    bkpt    1
 609              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 610              		.loc 1 2529 0
 611              		.code	16
 612              		@ sp needed
 613 0002 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE26:
 616              		.size	CyHalt, .-CyHalt
 617              		.section	.text.CyIntSetSysVector,"ax",%progbits
 618              		.align	2
 619              		.global	CyIntSetSysVector
 620              		.code	16
 621              		.thumb_func
 622              		.type	CyIntSetSysVector, %function
 623              	CyIntSetSysVector:
 624              	.LFB15:
2280:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 625              		.loc 1 2280 0
 626              		.cfi_startproc
 627              	.LVL37:
 628 0000 38B5     		push	{r3, r4, r5, lr}
 629              		.cfi_def_cfa_offset 16
 630              		.cfi_offset 3, -16
 631              		.cfi_offset 4, -12
 632              		.cfi_offset 5, -8
 633              		.cfi_offset 14, -4
 634 0002 041C     		mov	r4, r0
 635 0004 0D1C     		mov	r5, r1
 636              	.LVL38:
2284:Generated_Source\PSoC4/CyLib.c **** 
 637              		.loc 1 2284 0
 638 0006 0F28     		cmp	r0, #15
 639 0008 02D9     		bls	.L57
2284:Generated_Source\PSoC4/CyLib.c **** 
 640              		.loc 1 2284 0 is_stmt 0 discriminator 1
 641 000a 0020     		mov	r0, #0
 642              	.LVL39:
 643 000c FFF7FEFF 		bl	CyHalt
 644              	.LVL40:
 645              	.L57:
2287:Generated_Source\PSoC4/CyLib.c **** 
 646              		.loc 1 2287 0 is_stmt 1
 647 0010 A400     		lsl	r4, r4, #2
 648 0012 8023     		mov	r3, #128
 649 0014 9B05     		lsl	r3, r3, #22
 650 0016 9C46     		mov	ip, r3
 651 0018 6444     		add	r4, r4, ip
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 57


 652 001a 2068     		ldr	r0, [r4]
 653              	.LVL41:
2290:Generated_Source\PSoC4/CyLib.c **** 
 654              		.loc 1 2290 0
 655 001c 2560     		str	r5, [r4]
2293:Generated_Source\PSoC4/CyLib.c **** 
 656              		.loc 1 2293 0
 657              		@ sp needed
 658              	.LVL42:
 659 001e 38BD     		pop	{r3, r4, r5, pc}
 660              		.cfi_endproc
 661              	.LFE15:
 662              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 663              		.section	.text.CyIntGetSysVector,"ax",%progbits
 664              		.align	2
 665              		.global	CyIntGetSysVector
 666              		.code	16
 667              		.thumb_func
 668              		.type	CyIntGetSysVector, %function
 669              	CyIntGetSysVector:
 670              	.LFB16:
2314:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 671              		.loc 1 2314 0
 672              		.cfi_startproc
 673              	.LVL43:
 674 0000 10B5     		push	{r4, lr}
 675              		.cfi_def_cfa_offset 8
 676              		.cfi_offset 4, -8
 677              		.cfi_offset 14, -4
 678 0002 041E     		sub	r4, r0, #0
 679              	.LVL44:
2317:Generated_Source\PSoC4/CyLib.c **** 
 680              		.loc 1 2317 0
 681 0004 0F2C     		cmp	r4, #15
 682 0006 02D9     		bls	.L59
2317:Generated_Source\PSoC4/CyLib.c **** 
 683              		.loc 1 2317 0 is_stmt 0 discriminator 1
 684 0008 0020     		mov	r0, #0
 685              	.LVL45:
 686 000a FFF7FEFF 		bl	CyHalt
 687              	.LVL46:
 688              	.L59:
2319:Generated_Source\PSoC4/CyLib.c **** }
 689              		.loc 1 2319 0 is_stmt 1
 690 000e A400     		lsl	r4, r4, #2
 691 0010 8023     		mov	r3, #128
 692 0012 9B05     		lsl	r3, r3, #22
 693 0014 9C46     		mov	ip, r3
 694 0016 6444     		add	r4, r4, ip
 695 0018 2068     		ldr	r0, [r4]
2320:Generated_Source\PSoC4/CyLib.c **** 
 696              		.loc 1 2320 0
 697              		@ sp needed
 698 001a 10BD     		pop	{r4, pc}
 699              		.cfi_endproc
 700              	.LFE16:
 701              		.size	CyIntGetSysVector, .-CyIntGetSysVector
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 58


 702              		.section	.text.CyIntSetVector,"ax",%progbits
 703              		.align	2
 704              		.global	CyIntSetVector
 705              		.code	16
 706              		.thumb_func
 707              		.type	CyIntSetVector, %function
 708              	CyIntSetVector:
 709              	.LFB17:
2336:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 710              		.loc 1 2336 0
 711              		.cfi_startproc
 712              	.LVL47:
 713 0000 38B5     		push	{r3, r4, r5, lr}
 714              		.cfi_def_cfa_offset 16
 715              		.cfi_offset 3, -16
 716              		.cfi_offset 4, -12
 717              		.cfi_offset 5, -8
 718              		.cfi_offset 14, -4
 719 0002 041C     		mov	r4, r0
 720 0004 0D1C     		mov	r5, r1
 721              	.LVL48:
2340:Generated_Source\PSoC4/CyLib.c **** 
 722              		.loc 1 2340 0
 723 0006 0F28     		cmp	r0, #15
 724 0008 02D9     		bls	.L61
2340:Generated_Source\PSoC4/CyLib.c **** 
 725              		.loc 1 2340 0 is_stmt 0 discriminator 1
 726 000a 0020     		mov	r0, #0
 727              	.LVL49:
 728 000c FFF7FEFF 		bl	CyHalt
 729              	.LVL50:
 730              	.L61:
2343:Generated_Source\PSoC4/CyLib.c **** 
 731              		.loc 1 2343 0 is_stmt 1
 732 0010 A400     		lsl	r4, r4, #2
 733 0012 034B     		ldr	r3, .L62
 734 0014 9C46     		mov	ip, r3
 735 0016 6444     		add	r4, r4, ip
 736 0018 2068     		ldr	r0, [r4]
 737              	.LVL51:
2346:Generated_Source\PSoC4/CyLib.c **** 
 738              		.loc 1 2346 0
 739 001a 2560     		str	r5, [r4]
2349:Generated_Source\PSoC4/CyLib.c **** 
 740              		.loc 1 2349 0
 741              		@ sp needed
 742              	.LVL52:
 743 001c 38BD     		pop	{r3, r4, r5, pc}
 744              	.L63:
 745 001e C046     		.align	2
 746              	.L62:
 747 0020 40000020 		.word	536870976
 748              		.cfi_endproc
 749              	.LFE17:
 750              		.size	CyIntSetVector, .-CyIntSetVector
 751              		.section	.text.CyIntGetVector,"ax",%progbits
 752              		.align	2
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 59


 753              		.global	CyIntGetVector
 754              		.code	16
 755              		.thumb_func
 756              		.type	CyIntGetVector, %function
 757              	CyIntGetVector:
 758              	.LFB18:
2364:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 759              		.loc 1 2364 0
 760              		.cfi_startproc
 761              	.LVL53:
 762 0000 10B5     		push	{r4, lr}
 763              		.cfi_def_cfa_offset 8
 764              		.cfi_offset 4, -8
 765              		.cfi_offset 14, -4
 766 0002 041E     		sub	r4, r0, #0
 767              	.LVL54:
2367:Generated_Source\PSoC4/CyLib.c **** 
 768              		.loc 1 2367 0
 769 0004 0F2C     		cmp	r4, #15
 770 0006 02D9     		bls	.L65
2367:Generated_Source\PSoC4/CyLib.c **** 
 771              		.loc 1 2367 0 is_stmt 0 discriminator 1
 772 0008 0020     		mov	r0, #0
 773              	.LVL55:
 774 000a FFF7FEFF 		bl	CyHalt
 775              	.LVL56:
 776              	.L65:
2369:Generated_Source\PSoC4/CyLib.c **** }
 777              		.loc 1 2369 0 is_stmt 1
 778 000e A400     		lsl	r4, r4, #2
 779 0010 024B     		ldr	r3, .L66
 780 0012 9C46     		mov	ip, r3
 781 0014 6444     		add	r4, r4, ip
 782 0016 2068     		ldr	r0, [r4]
2370:Generated_Source\PSoC4/CyLib.c **** 
 783              		.loc 1 2370 0
 784              		@ sp needed
 785 0018 10BD     		pop	{r4, pc}
 786              	.L67:
 787 001a C046     		.align	2
 788              	.L66:
 789 001c 40000020 		.word	536870976
 790              		.cfi_endproc
 791              	.LFE18:
 792              		.size	CyIntGetVector, .-CyIntGetVector
 793              		.section	.text.CyIntSetPriority,"ax",%progbits
 794              		.align	2
 795              		.global	CyIntSetPriority
 796              		.code	16
 797              		.thumb_func
 798              		.type	CyIntSetPriority, %function
 799              	CyIntSetPriority:
 800              	.LFB19:
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 801              		.loc 1 2383 0
 802              		.cfi_startproc
 803              	.LVL57:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 60


 804 0000 70B5     		push	{r4, r5, r6, lr}
 805              		.cfi_def_cfa_offset 16
 806              		.cfi_offset 4, -16
 807              		.cfi_offset 5, -12
 808              		.cfi_offset 6, -8
 809              		.cfi_offset 14, -4
 810 0002 041C     		mov	r4, r0
 811 0004 0E1E     		sub	r6, r1, #0
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 812              		.loc 1 2388 0
 813 0006 032E     		cmp	r6, #3
 814 0008 02D9     		bls	.L69
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 815              		.loc 1 2388 0 is_stmt 0 discriminator 1
 816 000a 0020     		mov	r0, #0
 817              	.LVL58:
 818 000c FFF7FEFF 		bl	CyHalt
 819              	.LVL59:
 820              	.L69:
2389:Generated_Source\PSoC4/CyLib.c **** 
 821              		.loc 1 2389 0 is_stmt 1
 822 0010 0F2C     		cmp	r4, #15
 823 0012 02D9     		bls	.L70
2389:Generated_Source\PSoC4/CyLib.c **** 
 824              		.loc 1 2389 0 is_stmt 0 discriminator 1
 825 0014 0020     		mov	r0, #0
 826 0016 FFF7FEFF 		bl	CyHalt
 827              	.LVL60:
 828              	.L70:
2391:Generated_Source\PSoC4/CyLib.c **** 
 829              		.loc 1 2391 0 is_stmt 1
 830 001a 0325     		mov	r5, #3
 831 001c 2540     		and	r5, r4
 832 001e ED00     		lsl	r5, r5, #3
 833 0020 0635     		add	r5, r5, #6
 834              	.LVL61:
2393:Generated_Source\PSoC4/CyLib.c **** 
 835              		.loc 1 2393 0
 836 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 837              	.LVL62:
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 838              		.loc 1 2395 0
 839 0026 A408     		lsr	r4, r4, #2
 840 0028 A400     		lsl	r4, r4, #2
 841 002a 074B     		ldr	r3, .L71
 842 002c 9C46     		mov	ip, r3
 843 002e 6444     		add	r4, r4, ip
 844 0030 2368     		ldr	r3, [r4]
 845              	.LVL63:
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 846              		.loc 1 2396 0
 847 0032 0322     		mov	r2, #3
 848 0034 AA40     		lsl	r2, r2, r5
 849 0036 9343     		bic	r3, r2
 850              	.LVL64:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 851              		.loc 1 2397 0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 61


 852 0038 AE40     		lsl	r6, r6, r5
 853 003a 351C     		mov	r5, r6
 854              	.LVL65:
 855 003c 1D43     		orr	r5, r3
 856              	.LVL66:
2398:Generated_Source\PSoC4/CyLib.c **** 
 857              		.loc 1 2398 0
 858 003e 2560     		str	r5, [r4]
2400:Generated_Source\PSoC4/CyLib.c **** }
 859              		.loc 1 2400 0
 860 0040 FFF7FEFF 		bl	CyExitCriticalSection
 861              	.LVL67:
2401:Generated_Source\PSoC4/CyLib.c **** 
 862              		.loc 1 2401 0
 863              		@ sp needed
 864              	.LVL68:
 865 0044 70BD     		pop	{r4, r5, r6, pc}
 866              	.L72:
 867 0046 C046     		.align	2
 868              	.L71:
 869 0048 00E400E0 		.word	-536812544
 870              		.cfi_endproc
 871              	.LFE19:
 872              		.size	CyIntSetPriority, .-CyIntSetPriority
 873              		.section	.text.CyIntGetPriority,"ax",%progbits
 874              		.align	2
 875              		.global	CyIntGetPriority
 876              		.code	16
 877              		.thumb_func
 878              		.type	CyIntGetPriority, %function
 879              	CyIntGetPriority:
 880              	.LFB20:
2417:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 881              		.loc 1 2417 0
 882              		.cfi_startproc
 883              	.LVL69:
 884 0000 10B5     		push	{r4, lr}
 885              		.cfi_def_cfa_offset 8
 886              		.cfi_offset 4, -8
 887              		.cfi_offset 14, -4
 888 0002 041E     		sub	r4, r0, #0
2420:Generated_Source\PSoC4/CyLib.c **** 
 889              		.loc 1 2420 0
 890 0004 0F2C     		cmp	r4, #15
 891 0006 02D9     		bls	.L74
2420:Generated_Source\PSoC4/CyLib.c **** 
 892              		.loc 1 2420 0 is_stmt 0 discriminator 1
 893 0008 0020     		mov	r0, #0
 894              	.LVL70:
 895 000a FFF7FEFF 		bl	CyHalt
 896              	.LVL71:
 897              	.L74:
2422:Generated_Source\PSoC4/CyLib.c **** 
 898              		.loc 1 2422 0 is_stmt 1
 899 000e A308     		lsr	r3, r4, #2
 900 0010 9B00     		lsl	r3, r3, #2
 901 0012 054A     		ldr	r2, .L75
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 62


 902 0014 9446     		mov	ip, r2
 903 0016 6344     		add	r3, r3, ip
 904 0018 1868     		ldr	r0, [r3]
 905 001a 0323     		mov	r3, #3
 906 001c 1C40     		and	r4, r3
 907 001e E400     		lsl	r4, r4, #3
 908 0020 0634     		add	r4, r4, #6
 909 0022 E040     		lsr	r0, r0, r4
 910              	.LVL72:
2424:Generated_Source\PSoC4/CyLib.c **** }
 911              		.loc 1 2424 0
 912 0024 1840     		and	r0, r3
 913              	.LVL73:
2425:Generated_Source\PSoC4/CyLib.c **** 
 914              		.loc 1 2425 0
 915              		@ sp needed
 916 0026 10BD     		pop	{r4, pc}
 917              	.L76:
 918              		.align	2
 919              	.L75:
 920 0028 00E400E0 		.word	-536812544
 921              		.cfi_endproc
 922              	.LFE20:
 923              		.size	CyIntGetPriority, .-CyIntGetPriority
 924              		.section	.text.CySoftwareReset,"ax",%progbits
 925              		.align	2
 926              		.global	CySoftwareReset
 927              		.code	16
 928              		.thumb_func
 929              		.type	CySoftwareReset, %function
 930              	CySoftwareReset:
 931              	.LFB27:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 932              		.loc 1 2540 0
 933              		.cfi_startproc
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 934              		.loc 1 2545 0
 935 0000 034A     		ldr	r2, .L78
 936 0002 1368     		ldr	r3, [r2]
 937 0004 1B04     		lsl	r3, r3, #16
 938 0006 1B0C     		lsr	r3, r3, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 939              		.loc 1 2546 0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 63


 940 0008 0249     		ldr	r1, .L78+4
 941 000a 0B43     		orr	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 942              		.loc 1 2545 0
 943 000c 1360     		str	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** }
 944              		.loc 1 2547 0
 945              		@ sp needed
 946 000e 7047     		bx	lr
 947              	.L79:
 948              		.align	2
 949              	.L78:
 950 0010 0CED00E0 		.word	-536810228
 951 0014 0400FA05 		.word	100270084
 952              		.cfi_endproc
 953              	.LFE27:
 954              		.size	CySoftwareReset, .-CySoftwareReset
 955              		.section	.text.CyDelay,"ax",%progbits
 956              		.align	2
 957              		.global	CyDelay
 958              		.code	16
 959              		.thumb_func
 960              		.type	CyDelay, %function
 961              	CyDelay:
 962              	.LFB28:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 963              		.loc 1 2560 0
 964              		.cfi_startproc
 965              	.LVL74:
 966 0000 10B5     		push	{r4, lr}
 967              		.cfi_def_cfa_offset 8
 968              		.cfi_offset 4, -8
 969              		.cfi_offset 14, -4
 970 0002 041C     		mov	r4, r0
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 971              		.loc 1 2561 0
 972 0004 06E0     		b	.L81
 973              	.LVL75:
 974              	.L82:
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 975              		.loc 1 2566 0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 64


 976 0006 084B     		ldr	r3, .L83
 977 0008 5868     		ldr	r0, [r3, #4]
 978 000a FFF7FEFF 		bl	CyDelayCycles
 979              	.LVL76:
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 980              		.loc 1 2567 0
 981 000e 074B     		ldr	r3, .L83+4
 982 0010 9C46     		mov	ip, r3
 983 0012 6444     		add	r4, r4, ip
 984              	.LVL77:
 985              	.L81:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 986              		.loc 1 2561 0
 987 0014 8023     		mov	r3, #128
 988 0016 1B02     		lsl	r3, r3, #8
 989 0018 9C42     		cmp	r4, r3
 990 001a F4D8     		bhi	.L82
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 991              		.loc 1 2570 0
 992 001c 024B     		ldr	r3, .L83
 993 001e 9868     		ldr	r0, [r3, #8]
 994 0020 6043     		mul	r0, r4
 995 0022 FFF7FEFF 		bl	CyDelayCycles
 996              	.LVL78:
2571:Generated_Source\PSoC4/CyLib.c **** }
 997              		.loc 1 2571 0
 998              		@ sp needed
 999              	.LVL79:
 1000 0026 10BD     		pop	{r4, pc}
 1001              	.L84:
 1002              		.align	2
 1003              	.L83:
 1004 0028 00000000 		.word	.LANCHOR0
 1005 002c 0080FFFF 		.word	-32768
 1006              		.cfi_endproc
 1007              	.LFE28:
 1008              		.size	CyDelay, .-CyDelay
 1009              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 1010              		.align	2
 1011              		.global	CySysClkImoEnableWcoLock
 1012              		.code	16
 1013              		.thumb_func
 1014              		.type	CySysClkImoEnableWcoLock, %function
 1015              	CySysClkImoEnableWcoLock:
 1016              	.LFB3:
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 1017              		.loc 1 176 0
 1018              		.cfi_startproc
 1019 0000 30B5     		push	{r4, r5, lr}
 1020              		.cfi_def_cfa_offset 12
 1021              		.cfi_offset 4, -12
 1022              		.cfi_offset 5, -8
 1023              		.cfi_offset 14, -4
 1024 0002 83B0     		sub	sp, sp, #12
 1025              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 65


 1026              	.LVL80:
 187:Generated_Source\PSoC4/CyLib.c ****         {
 1027              		.loc 1 187 0
 1028 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 1029              	.LVL81:
 1030 0008 0028     		cmp	r0, #0
 1031 000a 48D0     		beq	.L85
 189:Generated_Source\PSoC4/CyLib.c **** 
 1032              		.loc 1 189 0
 1033 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1034              	.LVL82:
 1035 0010 041C     		mov	r4, r0
 1036              	.LVL83:
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1037              		.loc 1 212 0
 1038 0012 244B     		ldr	r3, .L90
 1039 0014 1B68     		ldr	r3, [r3]
 1040 0016 0722     		mov	r2, #7
 1041 0018 1A40     		and	r2, r3
 1042 001a 9200     		lsl	r2, r2, #2
 213:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 1043              		.loc 1 213 0
 1044 001c 131C     		mov	r3, r2
 1045 001e 1833     		add	r3, r3, #24
 214:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 1046              		.loc 1 214 0
 1047 0020 214A     		ldr	r2, .L90+4
 1048 0022 1268     		ldr	r2, [r2]
 213:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 1049              		.loc 1 213 0
 1050 0024 1207     		lsl	r2, r2, #28
 1051 0026 920F     		lsr	r2, r2, #30
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1052              		.loc 1 212 0
 1053 0028 D340     		lsr	r3, r3, r2
 1054 002a 1A1C     		mov	r2, r3
 1055              	.LVL84:
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1056              		.loc 1 232 0
 1057 002c 1F4B     		ldr	r3, .L90+8
 1058 002e 1968     		ldr	r1, [r3]
 1059 0030 1F4B     		ldr	r3, .L90+12
 1060 0032 1940     		and	r1, r3
 1061              	.LVL85:
 238:Generated_Source\PSoC4/CyLib.c **** 
 1062              		.loc 1 238 0
 1063 0034 1F4B     		ldr	r3, .L90+16
 1064 0036 5343     		mul	r3, r2
 1065 0038 8020     		mov	r0, #128
 1066 003a C001     		lsl	r0, r0, #7
 1067 003c 8446     		mov	ip, r0
 1068 003e 6344     		add	r3, r3, ip
 1069 0040 DB0B     		lsr	r3, r3, #15
 1070 0042 013B     		sub	r3, r3, #1
 1071 0044 5B05     		lsl	r3, r3, #21
 1072 0046 5B0D     		lsr	r3, r3, #21
 1073 0048 0B43     		orr	r3, r1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 66


 1074              	.LVL86:
 241:Generated_Source\PSoC4/CyLib.c **** 
 1075              		.loc 1 241 0
 1076 004a A021     		mov	r1, #160
 1077 004c 4903     		lsl	r1, r1, #13
 1078 004e 1943     		orr	r1, r3
 1079              	.LVL87:
 244:Generated_Source\PSoC4/CyLib.c ****             {
 1080              		.loc 1 244 0
 1081 0050 192A     		cmp	r2, #25
 1082 0052 02D8     		bhi	.L87
 246:Generated_Source\PSoC4/CyLib.c ****             }
 1083              		.loc 1 246 0
 1084 0054 184A     		ldr	r2, .L90+20
 1085              	.LVL88:
 1086 0056 1343     		orr	r3, r2
 1087              	.LVL89:
 1088 0058 0BE0     		b	.L88
 1089              	.LVL90:
 1090              	.L87:
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1091              		.loc 1 250 0
 1092 005a 184B     		ldr	r3, .L90+24
 1093 005c D318     		add	r3, r2, r3
 1094 005e 1878     		ldrb	r0, [r3]
 251:Generated_Source\PSoC4/CyLib.c **** 
 1095              		.loc 1 251 0
 1096 0060 1A3A     		sub	r2, r2, #26
 1097              	.LVL91:
 1098 0062 174B     		ldr	r3, .L90+28
 1099 0064 9B5C     		ldrb	r3, [r3, r2]
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1100              		.loc 1 250 0
 1101 0066 C318     		add	r3, r0, r3
 1102              	.LVL92:
 253:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 1103              		.loc 1 253 0
 1104 0068 FF2B     		cmp	r3, #255
 1105 006a 00D9     		bls	.L89
 1106 006c FF23     		mov	r3, #255
 1107              	.L89:
 1108              	.LVL93:
 256:Generated_Source\PSoC4/CyLib.c ****             }
 1109              		.loc 1 256 0
 1110 006e 9B05     		lsl	r3, r3, #22
 1111              	.LVL94:
 1112 0070 0B43     		orr	r3, r1
 1113              	.LVL95:
 1114              	.L88:
 259:Generated_Source\PSoC4/CyLib.c **** 
 1115              		.loc 1 259 0
 1116 0072 0E4A     		ldr	r2, .L90+8
 1117 0074 1360     		str	r3, [r2]
 261:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1118              		.loc 1 261 0
 1119 0076 134D     		ldr	r5, .L90+32
 1120 0078 2B68     		ldr	r3, [r5]
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 67


 1121              	.LVL96:
 1122 007a 0193     		str	r3, [sp, #4]
 1123              	.LVL97:
 262:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1124              		.loc 1 262 0
 1125 007c 3020     		mov	r0, #48
 1126 007e FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1127              	.LVL98:
 263:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 1128              		.loc 1 263 0
 1129 0082 114A     		ldr	r2, .L90+36
 1130 0084 1368     		ldr	r3, [r2]
 1131 0086 8021     		mov	r1, #128
 1132 0088 C905     		lsl	r1, r1, #23
 1133 008a 0B43     		orr	r3, r1
 1134 008c 1360     		str	r3, [r2]
 264:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 1135              		.loc 1 264 0
 1136 008e 1420     		mov	r0, #20
 1137 0090 FFF7FEFF 		bl	CyDelay
 1138              	.LVL99:
 265:Generated_Source\PSoC4/CyLib.c **** 
 1139              		.loc 1 265 0
 1140 0094 019B     		ldr	r3, [sp, #4]
 1141 0096 2B60     		str	r3, [r5]
 267:Generated_Source\PSoC4/CyLib.c ****         }
 1142              		.loc 1 267 0
 1143 0098 201C     		mov	r0, r4
 1144 009a FFF7FEFF 		bl	CyExitCriticalSection
 1145              	.LVL100:
 1146              	.L85:
 269:Generated_Source\PSoC4/CyLib.c **** 
 1147              		.loc 1 269 0
 1148 009e 03B0     		add	sp, sp, #12
 1149              		@ sp needed
 1150 00a0 30BD     		pop	{r4, r5, pc}
 1151              	.L91:
 1152 00a2 C046     		.align	2
 1153              	.L90:
 1154 00a4 080F0340 		.word	1073942280
 1155 00a8 28000340 		.word	1073938472
 1156 00ac 08000740 		.word	1074200584
 1157 00b0 00F800C0 		.word	-1073678336
 1158 00b4 40420F00 		.word	1000000
 1159 00b8 0000D43F 		.word	1070858240
 1160 00bc CDF1FF0F 		.word	268431821
 1161 00c0 00000000 		.word	.LANCHOR1
 1162 00c4 30001040 		.word	1074790448
 1163 00c8 00000740 		.word	1074200576
 1164              		.cfi_endproc
 1165              	.LFE3:
 1166              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1167              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1168              		.align	2
 1169              		.global	CySysClkWriteImoFreq
 1170              		.code	16
 1171              		.thumb_func
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 68


 1172              		.type	CySysClkWriteImoFreq, %function
 1173              	CySysClkWriteImoFreq:
 1174              	.LFB10:
 829:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 1175              		.loc 1 829 0
 1176              		.cfi_startproc
 1177              	.LVL101:
 1178 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1179              		.cfi_def_cfa_offset 20
 1180              		.cfi_offset 4, -20
 1181              		.cfi_offset 5, -16
 1182              		.cfi_offset 6, -12
 1183              		.cfi_offset 7, -8
 1184              		.cfi_offset 14, -4
 1185 0002 83B0     		sub	sp, sp, #12
 1186              		.cfi_def_cfa_offset 32
 1187 0004 041E     		sub	r4, r0, #0
 1188              	.LVL102:
 846:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1189              		.loc 1 846 0
 1190 0006 182C     		cmp	r4, #24
 1191 0008 0BD0     		beq	.L93
 846:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1192              		.loc 1 846 0 is_stmt 0 discriminator 1
 1193 000a 1C28     		cmp	r0, #28
 1194 000c 09D0     		beq	.L93
 846:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1195              		.loc 1 846 0 discriminator 2
 1196 000e 2028     		cmp	r0, #32
 1197 0010 07D0     		beq	.L93
 846:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1198              		.loc 1 846 0 discriminator 3
 1199 0012 2428     		cmp	r0, #36
 1200 0014 05D0     		beq	.L93
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1201              		.loc 1 847 0 is_stmt 1
 1202 0016 2828     		cmp	r0, #40
 1203 0018 03D0     		beq	.L93
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1204              		.loc 1 847 0 is_stmt 0 discriminator 1
 1205 001a 2C28     		cmp	r0, #44
 1206 001c 01D0     		beq	.L93
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1207              		.loc 1 847 0 discriminator 2
 1208 001e 3028     		cmp	r0, #48
 1209 0020 49D1     		bne	.L94
 1210              	.L93:
 851:Generated_Source\PSoC4/CyLib.c **** 
 1211              		.loc 1 851 0 is_stmt 1
 1212 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 1213              	.LVL103:
 1214 0026 0190     		str	r0, [sp, #4]
 1215              	.LVL104:
 854:Generated_Source\PSoC4/CyLib.c ****                 {
 1216              		.loc 1 854 0
 1217 0028 FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1218              	.LVL105:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 69


 1219 002c 0028     		cmp	r0, #0
 1220 002e 03D0     		beq	.L99
 1221              	.LVL106:
 857:Generated_Source\PSoC4/CyLib.c ****                 }
 1222              		.loc 1 857 0
 1223 0030 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1224              	.LVL107:
 856:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 1225              		.loc 1 856 0
 1226 0034 0126     		mov	r6, #1
 1227 0036 00E0     		b	.L95
 1228              	.LVL108:
 1229              	.L99:
 834:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 1230              		.loc 1 834 0
 1231 0038 0026     		mov	r6, #0
 1232              	.LVL109:
 1233              	.L95:
 882:Generated_Source\PSoC4/CyLib.c **** 
 1234              		.loc 1 882 0
 1235 003a 214A     		ldr	r2, .L100
 1236 003c 1368     		ldr	r3, [r2]
 1237 003e 0721     		mov	r1, #7
 1238 0040 8B43     		bic	r3, r1
 1239 0042 1360     		str	r3, [r2]
 1240              	.LVL110:
 900:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1241              		.loc 1 900 0
 1242 0044 1F4B     		ldr	r3, .L100+4
 1243 0046 E318     		add	r3, r4, r3
 1244 0048 1B78     		ldrb	r3, [r3]
 1245 004a DBB2     		uxtb	r3, r3
 1246              	.LVL111:
 902:Generated_Source\PSoC4/CyLib.c **** 
 1247              		.loc 1 902 0
 1248 004c 1E4A     		ldr	r2, .L100+8
 1249 004e 1360     		str	r3, [r2]
 905:Generated_Source\PSoC4/CyLib.c **** 
 1250              		.loc 1 905 0
 1251 0050 1E4A     		ldr	r2, .L100+12
 1252 0052 1368     		ldr	r3, [r2]
 1253              	.LVL112:
 1254 0054 8B43     		bic	r3, r1
 1255 0056 1360     		str	r3, [r2]
 1256              	.LVL113:
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1257              		.loc 1 908 0
 1258 0058 1D48     		ldr	r0, .L100+16
 1259 005a 0368     		ldr	r3, [r0]
 1260 005c 7F22     		mov	r2, #127
 1261 005e 9343     		bic	r3, r2
 1262 0060 191C     		mov	r1, r3
 909:Generated_Source\PSoC4/CyLib.c **** 
 1263              		.loc 1 909 0
 1264 0062 1C4B     		ldr	r3, .L100+20
 1265 0064 E318     		add	r3, r4, r3
 1266 0066 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 70


 1267 0068 1340     		and	r3, r2
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1268              		.loc 1 908 0
 1269 006a 0B43     		orr	r3, r1
 1270 006c 0360     		str	r3, [r0]
 911:Generated_Source\PSoC4/CyLib.c **** 
 1271              		.loc 1 911 0
 1272 006e 3220     		mov	r0, #50
 1273 0070 FFF7FEFF 		bl	CyDelayCycles
 1274              	.LVL114:
 913:Generated_Source\PSoC4/CyLib.c ****             {
 1275              		.loc 1 913 0
 1276 0074 182C     		cmp	r4, #24
 1277 0076 16D9     		bls	.L96
 916:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1278              		.loc 1 916 0
 1279 0078 114F     		ldr	r7, .L100
 1280 007a 3B68     		ldr	r3, [r7]
 1281 007c 0725     		mov	r5, #7
 1282 007e AB43     		bic	r3, r5
 1283 0080 1A1C     		mov	r2, r3
 917:Generated_Source\PSoC4/CyLib.c **** 
 1284              		.loc 1 917 0
 1285 0082 231C     		mov	r3, r4
 1286 0084 1C3B     		sub	r3, r3, #28
 1287 0086 9B08     		lsr	r3, r3, #2
 1288 0088 2B40     		and	r3, r5
 916:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1289              		.loc 1 916 0
 1290 008a 1343     		orr	r3, r2
 1291 008c 3B60     		str	r3, [r7]
 919:Generated_Source\PSoC4/CyLib.c **** 
 1292              		.loc 1 919 0
 1293 008e 3220     		mov	r0, #50
 1294 0090 FFF7FEFF 		bl	CyDelayCycles
 1295              	.LVL115:
 923:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1296              		.loc 1 923 0
 1297 0094 3A68     		ldr	r2, [r7]
 1298 0096 AA43     		bic	r2, r5
 924:Generated_Source\PSoC4/CyLib.c ****             }
 1299              		.loc 1 924 0
 1300 0098 231C     		mov	r3, r4
 1301 009a 183B     		sub	r3, r3, #24
 1302 009c 9B08     		lsr	r3, r3, #2
 1303 009e 2C1C     		mov	r4, r5
 1304              	.LVL116:
 1305 00a0 1C40     		and	r4, r3
 923:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1306              		.loc 1 923 0
 1307 00a2 1443     		orr	r4, r2
 1308 00a4 3C60     		str	r4, [r7]
 1309              	.L96:
 928:Generated_Source\PSoC4/CyLib.c ****                 {
 1310              		.loc 1 928 0
 1311 00a6 012E     		cmp	r6, #1
 1312 00a8 01D1     		bne	.L97
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 71


 930:Generated_Source\PSoC4/CyLib.c ****                 }
 1313              		.loc 1 930 0
 1314 00aa FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1315              	.LVL117:
 1316              	.L97:
 942:Generated_Source\PSoC4/CyLib.c ****         }
 1317              		.loc 1 942 0
 1318 00ae 0198     		ldr	r0, [sp, #4]
 1319 00b0 FFF7FEFF 		bl	CyExitCriticalSection
 1320              	.LVL118:
 1321 00b4 02E0     		b	.L92
 1322              	.LVL119:
 1323              	.L94:
 947:Generated_Source\PSoC4/CyLib.c ****         }
 1324              		.loc 1 947 0 discriminator 1
 1325 00b6 0020     		mov	r0, #0
 1326              	.LVL120:
 1327 00b8 FFF7FEFF 		bl	CyHalt
 1328              	.LVL121:
 1329              	.L92:
 949:Generated_Source\PSoC4/CyLib.c **** 
 1330              		.loc 1 949 0
 1331 00bc 03B0     		add	sp, sp, #12
 1332              		@ sp needed
 1333 00be F0BD     		pop	{r4, r5, r6, r7, pc}
 1334              	.L101:
 1335              		.align	2
 1336              	.L100:
 1337 00c0 080F0340 		.word	1073942280
 1338 00c4 CDF1FF0F 		.word	268431821
 1339 00c8 0C0F0340 		.word	1073942284
 1340 00cc 100F0340 		.word	1073942288
 1341 00d0 180F0340 		.word	1073942296
 1342 00d4 B4F1FF0F 		.word	268431796
 1343              		.cfi_endproc
 1344              	.LFE10:
 1345              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1346              		.section	.text.CyDelayUs,"ax",%progbits
 1347              		.align	2
 1348              		.global	CyDelayUs
 1349              		.code	16
 1350              		.thumb_func
 1351              		.type	CyDelayUs, %function
 1352              	CyDelayUs:
 1353              	.LFB29:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 72


 1354              		.loc 1 2583 0
 1355              		.cfi_startproc
 1356              	.LVL122:
 1357 0000 08B5     		push	{r3, lr}
 1358              		.cfi_def_cfa_offset 8
 1359              		.cfi_offset 3, -8
 1360              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1361              		.loc 1 2584 0
 1362 0002 034B     		ldr	r3, .L103
 1363 0004 1B7B     		ldrb	r3, [r3, #12]
 1364 0006 5843     		mul	r0, r3
 1365              	.LVL123:
 1366 0008 FFF7FEFF 		bl	CyDelayCycles
 1367              	.LVL124:
2585:Generated_Source\PSoC4/CyLib.c **** }
 1368              		.loc 1 2585 0
 1369              		@ sp needed
 1370 000c 08BD     		pop	{r3, pc}
 1371              	.L104:
 1372 000e C046     		.align	2
 1373              	.L103:
 1374 0010 00000000 		.word	.LANCHOR0
 1375              		.cfi_endproc
 1376              	.LFE29:
 1377              		.size	CyDelayUs, .-CyDelayUs
 1378              		.global	__aeabi_uidiv
 1379              		.section	.text.CyDelayFreq,"ax",%progbits
 1380              		.align	2
 1381              		.global	CyDelayFreq
 1382              		.code	16
 1383              		.thumb_func
 1384              		.type	CyDelayFreq, %function
 1385              	CyDelayFreq:
 1386              	.LFB30:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1387              		.loc 1 2597 0
 1388              		.cfi_startproc
 1389              	.LVL125:
 1390 0000 38B5     		push	{r3, r4, r5, lr}
 1391              		.cfi_def_cfa_offset 16
 1392              		.cfi_offset 3, -16
 1393              		.cfi_offset 4, -12
 1394              		.cfi_offset 5, -8
 1395              		.cfi_offset 14, -4
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 73


 1396              		.loc 1 2598 0
 1397 0002 0028     		cmp	r0, #0
 1398 0004 02D0     		beq	.L106
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1399              		.loc 1 2600 0
 1400 0006 0C4B     		ldr	r3, .L108
 1401 0008 1861     		str	r0, [r3, #16]
 1402 000a 02E0     		b	.L107
 1403              	.L106:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1404              		.loc 1 2604 0
 1405 000c 0B4A     		ldr	r2, .L108+4
 1406 000e 0A4B     		ldr	r3, .L108
 1407 0010 1A61     		str	r2, [r3, #16]
 1408              	.L107:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1409              		.loc 1 2607 0
 1410 0012 094C     		ldr	r4, .L108
 1411 0014 2569     		ldr	r5, [r4, #16]
 1412 0016 0A4B     		ldr	r3, .L108+8
 1413 0018 E818     		add	r0, r5, r3
 1414              	.LVL126:
 1415 001a 0A49     		ldr	r1, .L108+12
 1416 001c FFF7FEFF 		bl	__aeabi_uidiv
 1417              	.LVL127:
 1418 0020 2073     		strb	r0, [r4, #12]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1419              		.loc 1 2608 0
 1420 0022 094B     		ldr	r3, .L108+16
 1421 0024 E818     		add	r0, r5, r3
 1422 0026 FA21     		mov	r1, #250
 1423 0028 8900     		lsl	r1, r1, #2
 1424 002a FFF7FEFF 		bl	__aeabi_uidiv
 1425              	.LVL128:
 1426 002e A060     		str	r0, [r4, #8]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1427              		.loc 1 2609 0
 1428 0030 C003     		lsl	r0, r0, #15
 1429 0032 6060     		str	r0, [r4, #4]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1430              		.loc 1 2610 0
 1431              		@ sp needed
 1432 0034 38BD     		pop	{r3, r4, r5, pc}
 1433              	.L109:
 1434 0036 C046     		.align	2
 1435              	.L108:
 1436 0038 00000000 		.word	.LANCHOR0
 1437 003c 001BB700 		.word	12000000
 1438 0040 3F420F00 		.word	999999
 1439 0044 40420F00 		.word	1000000
 1440 0048 E7030000 		.word	999
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 74


 1441              		.cfi_endproc
 1442              	.LFE30:
 1443              		.size	CyDelayFreq, .-CyDelayFreq
 1444              		.section	.text.CySysTickStop,"ax",%progbits
 1445              		.align	2
 1446              		.global	CySysTickStop
 1447              		.code	16
 1448              		.thumb_func
 1449              		.type	CySysTickStop, %function
 1450              	CySysTickStop:
 1451              	.LFB34:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 75


2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2675:Generated_Source\PSoC4/CyLib.c **** }
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CyLib.c **** *
2682:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2685:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2688:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2689:Generated_Source\PSoC4/CyLib.c **** {
2690:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2691:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2692:Generated_Source\PSoC4/CyLib.c **** }
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2696:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2697:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2698:Generated_Source\PSoC4/CyLib.c **** *
2699:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2702:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2705:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2706:Generated_Source\PSoC4/CyLib.c **** {
 1452              		.loc 1 2706 0
 1453              		.cfi_startproc
2707:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1454              		.loc 1 2707 0
 1455 0000 024A     		ldr	r2, .L111
 1456 0002 1368     		ldr	r3, [r2]
 1457 0004 0121     		mov	r1, #1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 76


 1458 0006 8B43     		bic	r3, r1
 1459 0008 1360     		str	r3, [r2]
2708:Generated_Source\PSoC4/CyLib.c **** }
 1460              		.loc 1 2708 0
 1461              		@ sp needed
 1462 000a 7047     		bx	lr
 1463              	.L112:
 1464              		.align	2
 1465              	.L111:
 1466 000c 10E000E0 		.word	-536813552
 1467              		.cfi_endproc
 1468              	.LFE34:
 1469              		.size	CySysTickStop, .-CySysTickStop
 1470              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1471              		.align	2
 1472              		.global	CySysTickEnableInterrupt
 1473              		.code	16
 1474              		.thumb_func
 1475              		.type	CySysTickEnableInterrupt, %function
 1476              	CySysTickEnableInterrupt:
 1477              	.LFB35:
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2718:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
 1478              		.loc 1 2722 0
 1479              		.cfi_startproc
2723:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1480              		.loc 1 2723 0
 1481 0000 024A     		ldr	r2, .L114
 1482 0002 1168     		ldr	r1, [r2]
 1483 0004 0223     		mov	r3, #2
 1484 0006 0B43     		orr	r3, r1
 1485 0008 1360     		str	r3, [r2]
2724:Generated_Source\PSoC4/CyLib.c **** }
 1486              		.loc 1 2724 0
 1487              		@ sp needed
 1488 000a 7047     		bx	lr
 1489              	.L115:
 1490              		.align	2
 1491              	.L114:
 1492 000c 10E000E0 		.word	-536813552
 1493              		.cfi_endproc
 1494              	.LFE35:
 1495              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1496              		.section	.text.CySysTickEnable,"ax",%progbits
 1497              		.align	2
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 77


 1498              		.global	CySysTickEnable
 1499              		.code	16
 1500              		.thumb_func
 1501              		.type	CySysTickEnable, %function
 1502              	CySysTickEnable:
 1503              	.LFB33:
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1504              		.loc 1 2689 0
 1505              		.cfi_startproc
 1506 0000 08B5     		push	{r3, lr}
 1507              		.cfi_def_cfa_offset 8
 1508              		.cfi_offset 3, -8
 1509              		.cfi_offset 14, -4
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1510              		.loc 1 2690 0
 1511 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1512              	.LVL129:
2691:Generated_Source\PSoC4/CyLib.c **** }
 1513              		.loc 1 2691 0
 1514 0006 034A     		ldr	r2, .L117
 1515 0008 1168     		ldr	r1, [r2]
 1516 000a 0123     		mov	r3, #1
 1517 000c 0B43     		orr	r3, r1
 1518 000e 1360     		str	r3, [r2]
2692:Generated_Source\PSoC4/CyLib.c **** 
 1519              		.loc 1 2692 0
 1520              		@ sp needed
 1521 0010 08BD     		pop	{r3, pc}
 1522              	.L118:
 1523 0012 C046     		.align	2
 1524              	.L117:
 1525 0014 10E000E0 		.word	-536813552
 1526              		.cfi_endproc
 1527              	.LFE33:
 1528              		.size	CySysTickEnable, .-CySysTickEnable
 1529              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1530              		.align	2
 1531              		.global	CySysTickDisableInterrupt
 1532              		.code	16
 1533              		.thumb_func
 1534              		.type	CySysTickDisableInterrupt, %function
 1535              	CySysTickDisableInterrupt:
 1536              	.LFB36:
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** 
2727:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2728:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2729:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2732:Generated_Source\PSoC4/CyLib.c **** *
2733:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2734:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2737:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2738:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 78


 1537              		.loc 1 2738 0
 1538              		.cfi_startproc
2739:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1539              		.loc 1 2739 0
 1540 0000 024A     		ldr	r2, .L120
 1541 0002 1368     		ldr	r3, [r2]
 1542 0004 0221     		mov	r1, #2
 1543 0006 8B43     		bic	r3, r1
 1544 0008 1360     		str	r3, [r2]
2740:Generated_Source\PSoC4/CyLib.c **** }
 1545              		.loc 1 2740 0
 1546              		@ sp needed
 1547 000a 7047     		bx	lr
 1548              	.L121:
 1549              		.align	2
 1550              	.L120:
 1551 000c 10E000E0 		.word	-536813552
 1552              		.cfi_endproc
 1553              	.LFE36:
 1554              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1555              		.section	.text.CySysTickSetReload,"ax",%progbits
 1556              		.align	2
 1557              		.global	CySysTickSetReload
 1558              		.code	16
 1559              		.thumb_func
 1560              		.type	CySysTickSetReload, %function
 1561              	CySysTickSetReload:
 1562              	.LFB37:
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** 
2743:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2744:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2745:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2748:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2749:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2755:Generated_Source\PSoC4/CyLib.c **** {
 1563              		.loc 1 2755 0
 1564              		.cfi_startproc
 1565              	.LVL130:
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1566              		.loc 1 2756 0
 1567 0000 0002     		lsl	r0, r0, #8
 1568              	.LVL131:
 1569 0002 000A     		lsr	r0, r0, #8
 1570 0004 014B     		ldr	r3, .L123
 1571 0006 1860     		str	r0, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** }
 1572              		.loc 1 2757 0
 1573              		@ sp needed
 1574 0008 7047     		bx	lr
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 79


 1575              	.L124:
 1576 000a C046     		.align	2
 1577              	.L123:
 1578 000c 14E000E0 		.word	-536813548
 1579              		.cfi_endproc
 1580              	.LFE37:
 1581              		.size	CySysTickSetReload, .-CySysTickSetReload
 1582              		.section	.text.CySysTickGetReload,"ax",%progbits
 1583              		.align	2
 1584              		.global	CySysTickGetReload
 1585              		.code	16
 1586              		.thumb_func
 1587              		.type	CySysTickGetReload, %function
 1588              	CySysTickGetReload:
 1589              	.LFB38:
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2762:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return
2767:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2771:Generated_Source\PSoC4/CyLib.c **** {
 1590              		.loc 1 2771 0
 1591              		.cfi_startproc
2772:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1592              		.loc 1 2772 0
 1593 0000 024B     		ldr	r3, .L126
 1594 0002 1868     		ldr	r0, [r3]
 1595 0004 0002     		lsl	r0, r0, #8
 1596 0006 000A     		lsr	r0, r0, #8
2773:Generated_Source\PSoC4/CyLib.c **** }
 1597              		.loc 1 2773 0
 1598              		@ sp needed
 1599 0008 7047     		bx	lr
 1600              	.L127:
 1601 000a C046     		.align	2
 1602              	.L126:
 1603 000c 14E000E0 		.word	-536813548
 1604              		.cfi_endproc
 1605              	.LFE38:
 1606              		.size	CySysTickGetReload, .-CySysTickGetReload
 1607              		.section	.text.CySysTickGetValue,"ax",%progbits
 1608              		.align	2
 1609              		.global	CySysTickGetValue
 1610              		.code	16
 1611              		.thumb_func
 1612              		.type	CySysTickGetValue, %function
 1613              	CySysTickGetValue:
 1614              	.LFB39:
2774:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 80


2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** * \return
2783:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2784:Generated_Source\PSoC4/CyLib.c **** *
2785:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2786:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2787:Generated_Source\PSoC4/CyLib.c **** {
 1615              		.loc 1 2787 0
 1616              		.cfi_startproc
2788:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1617              		.loc 1 2788 0
 1618 0000 024B     		ldr	r3, .L129
 1619 0002 1868     		ldr	r0, [r3]
 1620 0004 0002     		lsl	r0, r0, #8
 1621 0006 000A     		lsr	r0, r0, #8
2789:Generated_Source\PSoC4/CyLib.c **** }
 1622              		.loc 1 2789 0
 1623              		@ sp needed
 1624 0008 7047     		bx	lr
 1625              	.L130:
 1626 000a C046     		.align	2
 1627              	.L129:
 1628 000c 18E000E0 		.word	-536813544
 1629              		.cfi_endproc
 1630              	.LFE39:
 1631              		.size	CySysTickGetValue, .-CySysTickGetValue
 1632              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1633              		.align	2
 1634              		.global	CySysTickSetClockSource
 1635              		.code	16
 1636              		.thumb_func
 1637              		.type	CySysTickSetClockSource, %function
 1638              	CySysTickSetClockSource:
 1639              	.LFB40:
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2793:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2794:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2795:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2796:Generated_Source\PSoC4/CyLib.c ****     *
2797:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2798:Generated_Source\PSoC4/CyLib.c ****     *
2799:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2800:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2801:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2802:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2803:Generated_Source\PSoC4/CyLib.c ****     *
2804:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2805:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2806:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 81


2807:Generated_Source\PSoC4/CyLib.c ****     *
2808:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2809:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2810:Generated_Source\PSoC4/CyLib.c ****     *
2811:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2812:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2814:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2816:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2817:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2818:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2819:Generated_Source\PSoC4/CyLib.c ****     {
 1640              		.loc 1 2819 0
 1641              		.cfi_startproc
 1642              	.LVL132:
2820:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1643              		.loc 1 2820 0
 1644 0000 0128     		cmp	r0, #1
 1645 0002 05D1     		bne	.L132
2821:Generated_Source\PSoC4/CyLib.c ****         {
2822:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1646              		.loc 1 2822 0
 1647 0004 054A     		ldr	r2, .L134
 1648 0006 1168     		ldr	r1, [r2]
 1649 0008 0423     		mov	r3, #4
 1650 000a 0B43     		orr	r3, r1
 1651 000c 1360     		str	r3, [r2]
 1652 000e 04E0     		b	.L131
 1653              	.L132:
2823:Generated_Source\PSoC4/CyLib.c ****         }
2824:Generated_Source\PSoC4/CyLib.c ****         else
2825:Generated_Source\PSoC4/CyLib.c ****         {
2826:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1654              		.loc 1 2826 0
 1655 0010 024A     		ldr	r2, .L134
 1656 0012 1368     		ldr	r3, [r2]
 1657 0014 0421     		mov	r1, #4
 1658 0016 8B43     		bic	r3, r1
 1659 0018 1360     		str	r3, [r2]
 1660              	.L131:
2827:Generated_Source\PSoC4/CyLib.c ****         }
2828:Generated_Source\PSoC4/CyLib.c ****     }
 1661              		.loc 1 2828 0
 1662              		@ sp needed
 1663 001a 7047     		bx	lr
 1664              	.L135:
 1665              		.align	2
 1666              	.L134:
 1667 001c 10E000E0 		.word	-536813552
 1668              		.cfi_endproc
 1669              	.LFE40:
 1670              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1671              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1672              		.align	2
 1673              		.global	CySysTickGetClockSource
 1674              		.code	16
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 82


 1675              		.thumb_func
 1676              		.type	CySysTickGetClockSource, %function
 1677              	CySysTickGetClockSource:
 1678              	.LFB41:
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     
2831:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2832:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2833:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2834:Generated_Source\PSoC4/CyLib.c ****     *
2835:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2836:Generated_Source\PSoC4/CyLib.c ****     *
2837:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2839:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2841:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2842:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2843:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2844:Generated_Source\PSoC4/CyLib.c ****     {
 1679              		.loc 1 2844 0
 1680              		.cfi_startproc
2845:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1681              		.loc 1 2845 0
 1682 0000 024B     		ldr	r3, .L137
 1683 0002 1868     		ldr	r0, [r3]
 1684 0004 4007     		lsl	r0, r0, #29
 1685 0006 C00F     		lsr	r0, r0, #31
2846:Generated_Source\PSoC4/CyLib.c ****     }
 1686              		.loc 1 2846 0
 1687              		@ sp needed
 1688 0008 7047     		bx	lr
 1689              	.L138:
 1690 000a C046     		.align	2
 1691              	.L137:
 1692 000c 10E000E0 		.word	-536813552
 1693              		.cfi_endproc
 1694              	.LFE41:
 1695              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1696              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1697              		.align	2
 1698              		.global	CySysTickGetCountFlag
 1699              		.code	16
 1700              		.thumb_func
 1701              		.type	CySysTickGetCountFlag, %function
 1702              	CySysTickGetCountFlag:
 1703              	.LFB42:
2847:Generated_Source\PSoC4/CyLib.c ****     
2848:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** 
2851:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2852:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2853:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2854:Generated_Source\PSoC4/CyLib.c **** *
2855:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2856:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 83


2857:Generated_Source\PSoC4/CyLib.c **** *
2858:Generated_Source\PSoC4/CyLib.c **** * \return
2859:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2863:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2864:Generated_Source\PSoC4/CyLib.c **** *
2865:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2866:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2867:Generated_Source\PSoC4/CyLib.c **** {
 1704              		.loc 1 2867 0
 1705              		.cfi_startproc
2868:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1706              		.loc 1 2868 0
 1707 0000 024B     		ldr	r3, .L140
 1708 0002 1868     		ldr	r0, [r3]
 1709 0004 C003     		lsl	r0, r0, #15
 1710 0006 C00F     		lsr	r0, r0, #31
2869:Generated_Source\PSoC4/CyLib.c **** }
 1711              		.loc 1 2869 0
 1712              		@ sp needed
 1713 0008 7047     		bx	lr
 1714              	.L141:
 1715 000a C046     		.align	2
 1716              	.L140:
 1717 000c 10E000E0 		.word	-536813552
 1718              		.cfi_endproc
 1719              	.LFE42:
 1720              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1721              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1722              		.align	2
 1723              		.code	16
 1724              		.thumb_func
 1725              		.type	CySysTickServiceCallbacks, %function
 1726              	CySysTickServiceCallbacks:
 1727              	.LFB46:
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** 
2872:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2873:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2874:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2882:Generated_Source\PSoC4/CyLib.c **** }
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2886:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2887:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2888:Generated_Source\PSoC4/CyLib.c **** *
2889:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 84


2890:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2891:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2892:Generated_Source\PSoC4/CyLib.c **** *
2893:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2894:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2895:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2896:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2897:Generated_Source\PSoC4/CyLib.c **** *  functions.
2898:Generated_Source\PSoC4/CyLib.c **** *
2899:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2900:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2903:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2904:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** * \return
2907:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2908:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2911:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2914:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2915:Generated_Source\PSoC4/CyLib.c **** {
2916:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2919:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2920:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2921:Generated_Source\PSoC4/CyLib.c **** }
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** 
2924:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2925:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2926:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2927:Generated_Source\PSoC4/CyLib.c **** *
2928:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2929:Generated_Source\PSoC4/CyLib.c **** *
2930:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2931:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2932:Generated_Source\PSoC4/CyLib.c **** *
2933:Generated_Source\PSoC4/CyLib.c **** * \return
2934:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2935:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2938:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2939:Generated_Source\PSoC4/CyLib.c **** {
2940:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2941:Generated_Source\PSoC4/CyLib.c **** }
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2945:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2946:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 85


2947:Generated_Source\PSoC4/CyLib.c **** *
2948:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2949:Generated_Source\PSoC4/CyLib.c **** *
2950:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2951:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2952:Generated_Source\PSoC4/CyLib.c **** {
 1728              		.loc 1 2952 0
 1729              		.cfi_startproc
 1730 0000 10B5     		push	{r4, lr}
 1731              		.cfi_def_cfa_offset 8
 1732              		.cfi_offset 4, -8
 1733              		.cfi_offset 14, -4
2953:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2954:Generated_Source\PSoC4/CyLib.c **** 
2955:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2956:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1734              		.loc 1 2956 0
 1735 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1736              	.LVL133:
 1737 0006 0128     		cmp	r0, #1
 1738 0008 0BD1     		bne	.L142
 1739 000a 07E0     		b	.L147
 1740              	.LVL134:
 1741              	.L146:
2957:Generated_Source\PSoC4/CyLib.c ****     {
2958:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2959:Generated_Source\PSoC4/CyLib.c ****         {
2960:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1742              		.loc 1 2960 0
 1743 000c A300     		lsl	r3, r4, #2
 1744 000e 054A     		ldr	r2, .L148
 1745 0010 9B58     		ldr	r3, [r3, r2]
 1746 0012 002B     		cmp	r3, #0
 1747 0014 00D0     		beq	.L145
2961:Generated_Source\PSoC4/CyLib.c ****             {
2962:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1748              		.loc 1 2962 0
 1749 0016 9847     		blx	r3
 1750              	.LVL135:
 1751              	.L145:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 1752              		.loc 1 2958 0 discriminator 2
 1753 0018 0134     		add	r4, r4, #1
 1754              	.LVL136:
 1755 001a 00E0     		b	.L143
 1756              	.LVL137:
 1757              	.L147:
 1758 001c 0024     		mov	r4, #0
 1759              	.L143:
 1760              	.LVL138:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 1761              		.loc 1 2958 0 is_stmt 0 discriminator 1
 1762 001e 042C     		cmp	r4, #4
 1763 0020 F4D9     		bls	.L146
 1764              	.LVL139:
 1765              	.L142:
2963:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 86


2964:Generated_Source\PSoC4/CyLib.c ****         }
2965:Generated_Source\PSoC4/CyLib.c ****     }
2966:Generated_Source\PSoC4/CyLib.c **** }
 1766              		.loc 1 2966 0 is_stmt 1
 1767              		@ sp needed
 1768 0022 10BD     		pop	{r4, pc}
 1769              	.L149:
 1770              		.align	2
 1771              	.L148:
 1772 0024 00000000 		.word	.LANCHOR2
 1773              		.cfi_endproc
 1774              	.LFE46:
 1775              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1776              		.section	.text.CySysTickClear,"ax",%progbits
 1777              		.align	2
 1778              		.global	CySysTickClear
 1779              		.code	16
 1780              		.thumb_func
 1781              		.type	CySysTickClear, %function
 1782              	CySysTickClear:
 1783              	.LFB43:
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1784              		.loc 1 2880 0
 1785              		.cfi_startproc
2881:Generated_Source\PSoC4/CyLib.c **** }
 1786              		.loc 1 2881 0
 1787 0000 0022     		mov	r2, #0
 1788 0002 014B     		ldr	r3, .L151
 1789 0004 1A60     		str	r2, [r3]
2882:Generated_Source\PSoC4/CyLib.c **** 
 1790              		.loc 1 2882 0
 1791              		@ sp needed
 1792 0006 7047     		bx	lr
 1793              	.L152:
 1794              		.align	2
 1795              	.L151:
 1796 0008 18E000E0 		.word	-536813544
 1797              		.cfi_endproc
 1798              	.LFE43:
 1799              		.size	CySysTickClear, .-CySysTickClear
 1800              		.section	.text.CySysTickInit,"ax",%progbits
 1801              		.align	2
 1802              		.global	CySysTickInit
 1803              		.code	16
 1804              		.thumb_func
 1805              		.type	CySysTickInit, %function
 1806              	CySysTickInit:
 1807              	.LFB32:
2658:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1808              		.loc 1 2658 0
 1809              		.cfi_startproc
 1810 0000 08B5     		push	{r3, lr}
 1811              		.cfi_def_cfa_offset 8
 1812              		.cfi_offset 3, -8
 1813              		.cfi_offset 14, -4
 1814              	.LVL140:
2661:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 87


 1815              		.loc 1 2661 0
 1816 0002 0023     		mov	r3, #0
 1817 0004 04E0     		b	.L154
 1818              	.LVL141:
 1819              	.L155:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1820              		.loc 1 2663 0 discriminator 3
 1821 0006 9900     		lsl	r1, r3, #2
 1822 0008 0020     		mov	r0, #0
 1823 000a 0D4A     		ldr	r2, .L156
 1824 000c 8850     		str	r0, [r1, r2]
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1825              		.loc 1 2661 0 discriminator 3
 1826 000e 0133     		add	r3, r3, #1
 1827              	.LVL142:
 1828              	.L154:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1829              		.loc 1 2661 0 is_stmt 0 discriminator 1
 1830 0010 042B     		cmp	r3, #4
 1831 0012 F8D9     		bls	.L155
2666:Generated_Source\PSoC4/CyLib.c **** 
 1832              		.loc 1 2666 0 is_stmt 1
 1833 0014 0F20     		mov	r0, #15
 1834 0016 0B49     		ldr	r1, .L156+4
 1835 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1836              	.LVL143:
2669:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 1837              		.loc 1 2669 0
 1838 001c 0120     		mov	r0, #1
 1839 001e FFF7FEFF 		bl	CySysTickSetClockSource
 1840              	.LVL144:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1841              		.loc 1 2672 0
 1842 0022 094B     		ldr	r3, .L156+8
 1843 0024 1869     		ldr	r0, [r3, #16]
 1844 0026 FA21     		mov	r1, #250
 1845 0028 8900     		lsl	r1, r1, #2
 1846 002a FFF7FEFF 		bl	__aeabi_uidiv
 1847              	.LVL145:
 1848 002e FFF7FEFF 		bl	CySysTickSetReload
 1849              	.LVL146:
2673:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 1850              		.loc 1 2673 0
 1851 0032 FFF7FEFF 		bl	CySysTickClear
 1852              	.LVL147:
2674:Generated_Source\PSoC4/CyLib.c **** }
 1853              		.loc 1 2674 0
 1854 0036 0F20     		mov	r0, #15
 1855 0038 FFF7FEFF 		bl	CyIntEnable
 1856              	.LVL148:
2675:Generated_Source\PSoC4/CyLib.c **** 
 1857              		.loc 1 2675 0
 1858              		@ sp needed
 1859 003c 08BD     		pop	{r3, pc}
 1860              	.L157:
 1861 003e C046     		.align	2
 1862              	.L156:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 88


 1863 0040 00000000 		.word	.LANCHOR2
 1864 0044 00000000 		.word	CySysTickServiceCallbacks
 1865 0048 00000000 		.word	.LANCHOR0
 1866              		.cfi_endproc
 1867              	.LFE32:
 1868              		.size	CySysTickInit, .-CySysTickInit
 1869              		.section	.text.CySysTickStart,"ax",%progbits
 1870              		.align	2
 1871              		.global	CySysTickStart
 1872              		.code	16
 1873              		.thumb_func
 1874              		.type	CySysTickStart, %function
 1875              	CySysTickStart:
 1876              	.LFB31:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1877              		.loc 1 2629 0
 1878              		.cfi_startproc
 1879 0000 08B5     		push	{r3, lr}
 1880              		.cfi_def_cfa_offset 8
 1881              		.cfi_offset 3, -8
 1882              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 1883              		.loc 1 2630 0
 1884 0002 064B     		ldr	r3, .L160
 1885 0004 5B69     		ldr	r3, [r3, #20]
 1886 0006 002B     		cmp	r3, #0
 1887 0008 04D1     		bne	.L159
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1888              		.loc 1 2632 0
 1889 000a FFF7FEFF 		bl	CySysTickInit
 1890              	.LVL149:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 1891              		.loc 1 2633 0
 1892 000e 0122     		mov	r2, #1
 1893 0010 024B     		ldr	r3, .L160
 1894 0012 5A61     		str	r2, [r3, #20]
 1895              	.L159:
2636:Generated_Source\PSoC4/CyLib.c **** }
 1896              		.loc 1 2636 0
 1897 0014 FFF7FEFF 		bl	CySysTickEnable
 1898              	.LVL150:
2637:Generated_Source\PSoC4/CyLib.c **** 
 1899              		.loc 1 2637 0
 1900              		@ sp needed
 1901 0018 08BD     		pop	{r3, pc}
 1902              	.L161:
 1903 001a C046     		.align	2
 1904              	.L160:
 1905 001c 00000000 		.word	.LANCHOR2
 1906              		.cfi_endproc
 1907              	.LFE31:
 1908              		.size	CySysTickStart, .-CySysTickStart
 1909              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1910              		.align	2
 1911              		.global	CySysTickSetCallback
 1912              		.code	16
 1913              		.thumb_func
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 89


 1914              		.type	CySysTickSetCallback, %function
 1915              	CySysTickSetCallback:
 1916              	.LFB44:
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1917              		.loc 1 2915 0
 1918              		.cfi_startproc
 1919              	.LVL151:
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1920              		.loc 1 2918 0
 1921 0000 024A     		ldr	r2, .L163
 1922 0002 8300     		lsl	r3, r0, #2
 1923 0004 9858     		ldr	r0, [r3, r2]
 1924              	.LVL152:
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1925              		.loc 1 2919 0
 1926 0006 9950     		str	r1, [r3, r2]
2921:Generated_Source\PSoC4/CyLib.c **** 
 1927              		.loc 1 2921 0
 1928              		@ sp needed
 1929 0008 7047     		bx	lr
 1930              	.L164:
 1931 000a C046     		.align	2
 1932              	.L163:
 1933 000c 00000000 		.word	.LANCHOR2
 1934              		.cfi_endproc
 1935              	.LFE44:
 1936              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1937              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1938              		.align	2
 1939              		.global	CySysTickGetCallback
 1940              		.code	16
 1941              		.thumb_func
 1942              		.type	CySysTickGetCallback, %function
 1943              	CySysTickGetCallback:
 1944              	.LFB45:
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1945              		.loc 1 2939 0
 1946              		.cfi_startproc
 1947              	.LVL153:
2940:Generated_Source\PSoC4/CyLib.c **** }
 1948              		.loc 1 2940 0
 1949 0000 8000     		lsl	r0, r0, #2
 1950              	.LVL154:
 1951 0002 014B     		ldr	r3, .L166
 1952 0004 C058     		ldr	r0, [r0, r3]
2941:Generated_Source\PSoC4/CyLib.c **** 
 1953              		.loc 1 2941 0
 1954              		@ sp needed
 1955 0006 7047     		bx	lr
 1956              	.L167:
 1957              		.align	2
 1958              	.L166:
 1959 0008 00000000 		.word	.LANCHOR2
 1960              		.cfi_endproc
 1961              	.LFE45:
 1962              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1963              		.section	.text.CyGetUniqueId,"ax",%progbits
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 90


 1964              		.align	2
 1965              		.global	CyGetUniqueId
 1966              		.code	16
 1967              		.thumb_func
 1968              		.type	CyGetUniqueId, %function
 1969              	CyGetUniqueId:
 1970              	.LFB47:
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** 
2969:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2970:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2971:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2972:Generated_Source\PSoC4/CyLib.c **** *
2973:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2974:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2975:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2976:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2979:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2980:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2983:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2984:Generated_Source\PSoC4/CyLib.c **** {
 1971              		.loc 1 2984 0
 1972              		.cfi_startproc
 1973              	.LVL155:
2985:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1974              		.loc 1 2986 0
 1975 0000 134B     		ldr	r3, .L169
 1976 0002 1B78     		ldrb	r3, [r3]
 1977 0004 DAB2     		uxtb	r2, r3
 1978 0006 0260     		str	r2, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1979              		.loc 1 2987 0
 1980 0008 124B     		ldr	r3, .L169+4
 1981 000a 1B78     		ldrb	r3, [r3]
 1982 000c 1B02     		lsl	r3, r3, #8
 1983 000e 1343     		orr	r3, r2
 1984 0010 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1985              		.loc 1 2988 0
 1986 0012 114A     		ldr	r2, .L169+8
 1987 0014 1278     		ldrb	r2, [r2]
 1988 0016 1204     		lsl	r2, r2, #16
 1989 0018 1343     		orr	r3, r2
 1990 001a 0360     		str	r3, [r0]
2989:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1991              		.loc 1 2989 0
 1992 001c 0F4A     		ldr	r2, .L169+12
 1993 001e 1278     		ldrb	r2, [r2]
 1994 0020 1206     		lsl	r2, r2, #24
 1995 0022 1343     		orr	r3, r2
 1996 0024 0360     		str	r3, [r0]
2990:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 91


2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 1997              		.loc 1 2991 0
 1998 0026 0E4B     		ldr	r3, .L169+16
 1999 0028 1B78     		ldrb	r3, [r3]
 2000 002a DAB2     		uxtb	r2, r3
 2001 002c 4260     		str	r2, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2002              		.loc 1 2992 0
 2003 002e 0D4B     		ldr	r3, .L169+20
 2004 0030 1B78     		ldrb	r3, [r3]
 2005 0032 1B02     		lsl	r3, r3, #8
 2006 0034 1343     		orr	r3, r2
 2007 0036 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2008              		.loc 1 2993 0
 2009 0038 0B4A     		ldr	r2, .L169+24
 2010 003a 1278     		ldrb	r2, [r2]
 2011 003c 1204     		lsl	r2, r2, #16
 2012 003e 1343     		orr	r3, r2
 2013 0040 4360     		str	r3, [r0, #4]
2994:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2014              		.loc 1 2994 0
 2015 0042 0A4A     		ldr	r2, .L169+28
 2016 0044 1278     		ldrb	r2, [r2]
 2017 0046 1206     		lsl	r2, r2, #24
 2018 0048 1343     		orr	r3, r2
 2019 004a 4360     		str	r3, [r0, #4]
2995:Generated_Source\PSoC4/CyLib.c **** #else
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2999:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3000:Generated_Source\PSoC4/CyLib.c **** 
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3004:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3005:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3006:Generated_Source\PSoC4/CyLib.c **** }
 2020              		.loc 1 3006 0
 2021              		@ sp needed
 2022 004c 7047     		bx	lr
 2023              	.L170:
 2024 004e C046     		.align	2
 2025              	.L169:
 2026 0050 78F1FF0F 		.word	268431736
 2027 0054 79F1FF0F 		.word	268431737
 2028 0058 7AF1FF0F 		.word	268431738
 2029 005c 7BF1FF0F 		.word	268431739
 2030 0060 7CF1FF0F 		.word	268431740
 2031 0064 7DF1FF0F 		.word	268431741
 2032 0068 7EF1FF0F 		.word	268431742
 2033 006c 7FF1FF0F 		.word	268431743
 2034              		.cfi_endproc
 2035              	.LFE47:
 2036              		.size	CyGetUniqueId, .-CyGetUniqueId
 2037              		.global	CySysClkPumpConfig
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 92


 2038              		.global	cyImoFreqMhz2DpllOffset
 2039              		.global	CySysTickInitVar
 2040              		.global	cydelay32kMs
 2041              		.global	cydelayFreqMhz
 2042              		.global	cydelayFreqKhz
 2043              		.global	cydelayFreqHz
 2044              		.section	.rodata
 2045              		.align	2
 2046              		.set	.LANCHOR1,. + 0
 2047              		.type	cyImoFreqMhz2DpllOffset, %object
 2048              		.size	cyImoFreqMhz2DpllOffset, 23
 2049              	cyImoFreqMhz2DpllOffset:
 2050 0000 EE       		.byte	-18
 2051 0001 DB       		.byte	-37
 2052 0002 C9       		.byte	-55
 2053 0003 B9       		.byte	-71
 2054 0004 AA       		.byte	-86
 2055 0005 9B       		.byte	-101
 2056 0006 8E       		.byte	-114
 2057 0007 82       		.byte	-126
 2058 0008 76       		.byte	118
 2059 0009 6B       		.byte	107
 2060 000a 60       		.byte	96
 2061 000b 56       		.byte	86
 2062 000c 4D       		.byte	77
 2063 000d 44       		.byte	68
 2064 000e 3B       		.byte	59
 2065 000f 33       		.byte	51
 2066 0010 2C       		.byte	44
 2067 0011 24       		.byte	36
 2068 0012 1D       		.byte	29
 2069 0013 17       		.byte	23
 2070 0014 10       		.byte	16
 2071 0015 0A       		.byte	10
 2072 0016 04       		.byte	4
 2073 0017 00       		.data
 2074              		.align	2
 2075              		.set	.LANCHOR0,. + 0
 2076              		.type	CySysClkPumpConfig, %object
 2077              		.size	CySysClkPumpConfig, 4
 2078              	CySysClkPumpConfig:
 2079 0000 01000000 		.word	1
 2080              		.type	cydelay32kMs, %object
 2081              		.size	cydelay32kMs, 4
 2082              	cydelay32kMs:
 2083 0004 00007017 		.word	393216000
 2084              		.type	cydelayFreqKhz, %object
 2085              		.size	cydelayFreqKhz, 4
 2086              	cydelayFreqKhz:
 2087 0008 E02E0000 		.word	12000
 2088              		.type	cydelayFreqMhz, %object
 2089              		.size	cydelayFreqMhz, 1
 2090              	cydelayFreqMhz:
 2091 000c 0C       		.byte	12
 2092 000d 000000   		.space	3
 2093              		.type	cydelayFreqHz, %object
 2094              		.size	cydelayFreqHz, 4
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 93


 2095              	cydelayFreqHz:
 2096 0010 001BB700 		.word	12000000
 2097              		.bss
 2098              		.align	2
 2099              		.set	.LANCHOR2,. + 0
 2100              		.type	CySysTickCallbacks, %object
 2101              		.size	CySysTickCallbacks, 20
 2102              	CySysTickCallbacks:
 2103 0000 00000000 		.space	20
 2103      00000000 
 2103      00000000 
 2103      00000000 
 2103      00000000 
 2104              		.type	CySysTickInitVar, %object
 2105              		.size	CySysTickInitVar, 4
 2106              	CySysTickInitVar:
 2107 0014 00000000 		.space	4
 2108              		.text
 2109              	.Letext0:
 2110              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2111              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2112              		.file 4 "Generated_Source\\PSoC4\\CyLFClk.h"
 2113              		.file 5 "Generated_Source\\PSoC4\\CyFlash.h"
 2114              		.section	.debug_info,"",%progbits
 2115              	.Ldebug_info0:
 2116 0000 DD0B0000 		.4byte	0xbdd
 2117 0004 0400     		.2byte	0x4
 2118 0006 00000000 		.4byte	.Ldebug_abbrev0
 2119 000a 04       		.byte	0x4
 2120 000b 01       		.uleb128 0x1
 2121 000c 83060000 		.4byte	.LASF107
 2122 0010 01       		.byte	0x1
 2123 0011 23060000 		.4byte	.LASF108
 2124 0015 16000000 		.4byte	.LASF109
 2125 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2126 001d 00000000 		.4byte	0
 2127 0021 00000000 		.4byte	.Ldebug_line0
 2128 0025 02       		.uleb128 0x2
 2129 0026 01       		.byte	0x1
 2130 0027 06       		.byte	0x6
 2131 0028 35010000 		.4byte	.LASF0
 2132 002c 02       		.uleb128 0x2
 2133 002d 01       		.byte	0x1
 2134 002e 08       		.byte	0x8
 2135 002f 88040000 		.4byte	.LASF1
 2136 0033 02       		.uleb128 0x2
 2137 0034 02       		.byte	0x2
 2138 0035 05       		.byte	0x5
 2139 0036 96040000 		.4byte	.LASF2
 2140 003a 02       		.uleb128 0x2
 2141 003b 02       		.byte	0x2
 2142 003c 07       		.byte	0x7
 2143 003d 06030000 		.4byte	.LASF3
 2144 0041 02       		.uleb128 0x2
 2145 0042 04       		.byte	0x4
 2146 0043 05       		.byte	0x5
 2147 0044 9A010000 		.4byte	.LASF4
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 94


 2148 0048 02       		.uleb128 0x2
 2149 0049 04       		.byte	0x4
 2150 004a 07       		.byte	0x7
 2151 004b A9020000 		.4byte	.LASF5
 2152 004f 02       		.uleb128 0x2
 2153 0050 08       		.byte	0x8
 2154 0051 05       		.byte	0x5
 2155 0052 27010000 		.4byte	.LASF6
 2156 0056 02       		.uleb128 0x2
 2157 0057 08       		.byte	0x8
 2158 0058 07       		.byte	0x7
 2159 0059 A8000000 		.4byte	.LASF7
 2160 005d 03       		.uleb128 0x3
 2161 005e 04       		.byte	0x4
 2162 005f 05       		.byte	0x5
 2163 0060 696E7400 		.ascii	"int\000"
 2164 0064 02       		.uleb128 0x2
 2165 0065 04       		.byte	0x4
 2166 0066 07       		.byte	0x7
 2167 0067 8D020000 		.4byte	.LASF8
 2168 006b 04       		.uleb128 0x4
 2169 006c C5010000 		.4byte	.LASF9
 2170 0070 02       		.byte	0x2
 2171 0071 B901     		.2byte	0x1b9
 2172 0073 2C000000 		.4byte	0x2c
 2173 0077 04       		.uleb128 0x4
 2174 0078 0F000000 		.4byte	.LASF10
 2175 007c 02       		.byte	0x2
 2176 007d BA01     		.2byte	0x1ba
 2177 007f 3A000000 		.4byte	0x3a
 2178 0083 04       		.uleb128 0x4
 2179 0084 EE010000 		.4byte	.LASF11
 2180 0088 02       		.byte	0x2
 2181 0089 BB01     		.2byte	0x1bb
 2182 008b 48000000 		.4byte	0x48
 2183 008f 02       		.uleb128 0x2
 2184 0090 04       		.byte	0x4
 2185 0091 04       		.byte	0x4
 2186 0092 24040000 		.4byte	.LASF12
 2187 0096 02       		.uleb128 0x2
 2188 0097 08       		.byte	0x8
 2189 0098 04       		.byte	0x4
 2190 0099 E1010000 		.4byte	.LASF13
 2191 009d 02       		.uleb128 0x2
 2192 009e 01       		.byte	0x1
 2193 009f 08       		.byte	0x8
 2194 00a0 E2040000 		.4byte	.LASF14
 2195 00a4 04       		.uleb128 0x4
 2196 00a5 7C040000 		.4byte	.LASF15
 2197 00a9 02       		.byte	0x2
 2198 00aa 6302     		.2byte	0x263
 2199 00ac B0000000 		.4byte	0xb0
 2200 00b0 05       		.uleb128 0x5
 2201 00b1 6B000000 		.4byte	0x6b
 2202 00b5 04       		.uleb128 0x4
 2203 00b6 98030000 		.4byte	.LASF16
 2204 00ba 02       		.byte	0x2
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 95


 2205 00bb 6502     		.2byte	0x265
 2206 00bd C1000000 		.4byte	0xc1
 2207 00c1 05       		.uleb128 0x5
 2208 00c2 83000000 		.4byte	0x83
 2209 00c6 04       		.uleb128 0x4
 2210 00c7 FF040000 		.4byte	.LASF17
 2211 00cb 02       		.byte	0x2
 2212 00cc 7502     		.2byte	0x275
 2213 00ce D2000000 		.4byte	0xd2
 2214 00d2 06       		.uleb128 0x6
 2215 00d3 04       		.byte	0x4
 2216 00d4 D8000000 		.4byte	0xd8
 2217 00d8 07       		.uleb128 0x7
 2218 00d9 02       		.uleb128 0x2
 2219 00da 04       		.byte	0x4
 2220 00db 07       		.byte	0x7
 2221 00dc BA030000 		.4byte	.LASF18
 2222 00e0 08       		.uleb128 0x8
 2223 00e1 40040000 		.4byte	.LASF19
 2224 00e5 03       		.byte	0x3
 2225 00e6 F5       		.byte	0xf5
 2226 00e7 D2000000 		.4byte	0xd2
 2227 00eb 09       		.uleb128 0x9
 2228 00ec FA050000 		.4byte	.LASF20
 2229 00f0 01       		.byte	0x1
 2230 00f1 6B       		.byte	0x6b
 2231 00f2 00000000 		.4byte	.LFB1
 2232 00f6 14000000 		.4byte	.LFE1-.LFB1
 2233 00fa 01       		.uleb128 0x1
 2234 00fb 9C       		.byte	0x9c
 2235 00fc 0A       		.uleb128 0xa
 2236 00fd 7E030000 		.4byte	.LASF21
 2237 0101 01       		.byte	0x1
 2238 0102 1D01     		.2byte	0x11d
 2239 0104 00000000 		.4byte	.LFB4
 2240 0108 14000000 		.4byte	.LFE4-.LFB4
 2241 010c 01       		.uleb128 0x1
 2242 010d 9C       		.byte	0x9c
 2243 010e 0B       		.uleb128 0xb
 2244 010f BB020000 		.4byte	.LASF22
 2245 0113 01       		.byte	0x1
 2246 0114 8B       		.byte	0x8b
 2247 0115 00000000 		.4byte	.LFB2
 2248 0119 18000000 		.4byte	.LFE2-.LFB2
 2249 011d 01       		.uleb128 0x1
 2250 011e 9C       		.byte	0x9c
 2251 011f 2D010000 		.4byte	0x12d
 2252 0123 0C       		.uleb128 0xc
 2253 0124 06000000 		.4byte	.LVL0
 2254 0128 FC000000 		.4byte	0xfc
 2255 012c 00       		.byte	0
 2256 012d 0D       		.uleb128 0xd
 2257 012e 7C010000 		.4byte	.LASF79
 2258 0132 01       		.byte	0x1
 2259 0133 3001     		.2byte	0x130
 2260 0135 83000000 		.4byte	0x83
 2261 0139 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 96


 2262 013d 14000000 		.4byte	.LFE5-.LFB5
 2263 0141 01       		.uleb128 0x1
 2264 0142 9C       		.byte	0x9c
 2265 0143 0E       		.uleb128 0xe
 2266 0144 52000000 		.4byte	.LASF23
 2267 0148 01       		.byte	0x1
 2268 0149 AD01     		.2byte	0x1ad
 2269 014b 00000000 		.4byte	.LFB6
 2270 014f 20000000 		.4byte	.LFE6-.LFB6
 2271 0153 01       		.uleb128 0x1
 2272 0154 9C       		.byte	0x9c
 2273 0155 9C010000 		.4byte	0x19c
 2274 0159 0F       		.uleb128 0xf
 2275 015a BE040000 		.4byte	.LASF27
 2276 015e 01       		.byte	0x1
 2277 015f AD01     		.2byte	0x1ad
 2278 0161 83000000 		.4byte	0x83
 2279 0165 00000000 		.4byte	.LLST0
 2280 0169 10       		.uleb128 0x10
 2281 016a 52010000 		.4byte	.LASF24
 2282 016e 01       		.byte	0x1
 2283 016f AF01     		.2byte	0x1af
 2284 0171 6B000000 		.4byte	0x6b
 2285 0175 2C000000 		.4byte	.LLST1
 2286 0179 10       		.uleb128 0x10
 2287 017a 4F060000 		.4byte	.LASF25
 2288 017e 01       		.byte	0x1
 2289 017f B001     		.2byte	0x1b0
 2290 0181 83000000 		.4byte	0x83
 2291 0185 3F000000 		.4byte	.LLST2
 2292 0189 0C       		.uleb128 0xc
 2293 018a 08000000 		.4byte	.LVL2
 2294 018e 9B0B0000 		.4byte	0xb9b
 2295 0192 0C       		.uleb128 0xc
 2296 0193 1A000000 		.4byte	.LVL5
 2297 0197 A60B0000 		.4byte	0xba6
 2298 019b 00       		.byte	0
 2299 019c 0E       		.uleb128 0xe
 2300 019d 7E000000 		.4byte	.LASF26
 2301 01a1 01       		.byte	0x1
 2302 01a2 D901     		.2byte	0x1d9
 2303 01a4 00000000 		.4byte	.LFB7
 2304 01a8 34000000 		.4byte	.LFE7-.LFB7
 2305 01ac 01       		.uleb128 0x1
 2306 01ad 9C       		.byte	0x9c
 2307 01ae C1010000 		.4byte	0x1c1
 2308 01b2 11       		.uleb128 0x11
 2309 01b3 DA010000 		.4byte	.LASF28
 2310 01b7 01       		.byte	0x1
 2311 01b8 D901     		.2byte	0x1d9
 2312 01ba 83000000 		.4byte	0x83
 2313 01be 01       		.uleb128 0x1
 2314 01bf 50       		.byte	0x50
 2315 01c0 00       		.byte	0
 2316 01c1 12       		.uleb128 0x12
 2317 01c2 FA010000 		.4byte	.LASF33
 2318 01c6 01       		.byte	0x1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 97


 2319 01c7 FE01     		.2byte	0x1fe
 2320 01c9 83000000 		.4byte	0x83
 2321 01cd 00000000 		.4byte	.LFB8
 2322 01d1 1C000000 		.4byte	.LFE8-.LFB8
 2323 01d5 01       		.uleb128 0x1
 2324 01d6 9C       		.byte	0x9c
 2325 01d7 0E020000 		.4byte	0x20e
 2326 01db 10       		.uleb128 0x10
 2327 01dc 52010000 		.4byte	.LASF24
 2328 01e0 01       		.byte	0x1
 2329 01e1 0002     		.2byte	0x200
 2330 01e3 6B000000 		.4byte	0x6b
 2331 01e7 5D000000 		.4byte	.LLST3
 2332 01eb 10       		.uleb128 0x10
 2333 01ec DD030000 		.4byte	.LASF29
 2334 01f0 01       		.byte	0x1
 2335 01f1 0102     		.2byte	0x201
 2336 01f3 83000000 		.4byte	0x83
 2337 01f7 70000000 		.4byte	.LLST4
 2338 01fb 0C       		.uleb128 0xc
 2339 01fc 06000000 		.4byte	.LVL8
 2340 0200 9B0B0000 		.4byte	0xb9b
 2341 0204 0C       		.uleb128 0xc
 2342 0205 12000000 		.4byte	.LVL10
 2343 0209 A60B0000 		.4byte	0xba6
 2344 020d 00       		.byte	0
 2345 020e 0E       		.uleb128 0xe
 2346 020f 32050000 		.4byte	.LASF30
 2347 0213 01       		.byte	0x1
 2348 0214 3502     		.2byte	0x235
 2349 0216 00000000 		.4byte	.LFB9
 2350 021a 24000000 		.4byte	.LFE9-.LFB9
 2351 021e 01       		.uleb128 0x1
 2352 021f 9C       		.byte	0x9c
 2353 0220 57020000 		.4byte	0x257
 2354 0224 0F       		.uleb128 0xf
 2355 0225 F2050000 		.4byte	.LASF31
 2356 0229 01       		.byte	0x1
 2357 022a 3502     		.2byte	0x235
 2358 022c 83000000 		.4byte	0x83
 2359 0230 8E000000 		.4byte	.LLST5
 2360 0234 10       		.uleb128 0x10
 2361 0235 52010000 		.4byte	.LASF24
 2362 0239 01       		.byte	0x1
 2363 023a 3702     		.2byte	0x237
 2364 023c 6B000000 		.4byte	0x6b
 2365 0240 BA000000 		.4byte	.LLST6
 2366 0244 0C       		.uleb128 0xc
 2367 0245 08000000 		.4byte	.LVL13
 2368 0249 9B0B0000 		.4byte	0xb9b
 2369 024d 0C       		.uleb128 0xc
 2370 024e 1E000000 		.4byte	.LVL15
 2371 0252 A60B0000 		.4byte	0xba6
 2372 0256 00       		.byte	0
 2373 0257 0E       		.uleb128 0xe
 2374 0258 1C050000 		.4byte	.LASF32
 2375 025c 01       		.byte	0x1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 98


 2376 025d D503     		.2byte	0x3d5
 2377 025f 00000000 		.4byte	.LFB11
 2378 0263 24000000 		.4byte	.LFE11-.LFB11
 2379 0267 01       		.uleb128 0x1
 2380 0268 9C       		.byte	0x9c
 2381 0269 A0020000 		.4byte	0x2a0
 2382 026d 0F       		.uleb128 0xf
 2383 026e F2050000 		.4byte	.LASF31
 2384 0272 01       		.byte	0x1
 2385 0273 D503     		.2byte	0x3d5
 2386 0275 83000000 		.4byte	0x83
 2387 0279 CD000000 		.4byte	.LLST7
 2388 027d 10       		.uleb128 0x10
 2389 027e 52010000 		.4byte	.LASF24
 2390 0282 01       		.byte	0x1
 2391 0283 D703     		.2byte	0x3d7
 2392 0285 6B000000 		.4byte	0x6b
 2393 0289 F9000000 		.4byte	.LLST8
 2394 028d 0C       		.uleb128 0xc
 2395 028e 08000000 		.4byte	.LVL17
 2396 0292 9B0B0000 		.4byte	0xb9b
 2397 0296 0C       		.uleb128 0xc
 2398 0297 1E000000 		.4byte	.LVL19
 2399 029b A60B0000 		.4byte	0xba6
 2400 029f 00       		.byte	0
 2401 02a0 12       		.uleb128 0x12
 2402 02a1 F2020000 		.4byte	.LASF34
 2403 02a5 01       		.byte	0x1
 2404 02a6 A008     		.2byte	0x8a0
 2405 02a8 83000000 		.4byte	0x83
 2406 02ac 00000000 		.4byte	.LFB12
 2407 02b0 14000000 		.4byte	.LFE12-.LFB12
 2408 02b4 01       		.uleb128 0x1
 2409 02b5 9C       		.byte	0x9c
 2410 02b6 D9020000 		.4byte	0x2d9
 2411 02ba 0F       		.uleb128 0xf
 2412 02bb D2040000 		.4byte	.LASF35
 2413 02bf 01       		.byte	0x1
 2414 02c0 A008     		.2byte	0x8a0
 2415 02c2 83000000 		.4byte	0x83
 2416 02c6 0C010000 		.4byte	.LLST9
 2417 02ca 13       		.uleb128 0x13
 2418 02cb AD030000 		.4byte	.LASF36
 2419 02cf 01       		.byte	0x1
 2420 02d0 A208     		.2byte	0x8a2
 2421 02d2 83000000 		.4byte	0x83
 2422 02d6 01       		.uleb128 0x1
 2423 02d7 50       		.byte	0x50
 2424 02d8 00       		.byte	0
 2425 02d9 12       		.uleb128 0x12
 2426 02da 9A000000 		.4byte	.LASF37
 2427 02de 01       		.byte	0x1
 2428 02df B708     		.2byte	0x8b7
 2429 02e1 83000000 		.4byte	0x83
 2430 02e5 00000000 		.4byte	.LFB13
 2431 02e9 10000000 		.4byte	.LFE13-.LFB13
 2432 02ed 01       		.uleb128 0x1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 99


 2433 02ee 9C       		.byte	0x9c
 2434 02ef 02030000 		.4byte	0x302
 2435 02f3 13       		.uleb128 0x13
 2436 02f4 D9040000 		.4byte	.LASF38
 2437 02f8 01       		.byte	0x1
 2438 02f9 B908     		.2byte	0x8b9
 2439 02fb 83000000 		.4byte	0x83
 2440 02ff 01       		.uleb128 0x1
 2441 0300 50       		.byte	0x50
 2442 0301 00       		.byte	0
 2443 0302 0E       		.uleb128 0xe
 2444 0303 D0000000 		.4byte	.LASF39
 2445 0307 01       		.byte	0x1
 2446 0308 CE08     		.2byte	0x8ce
 2447 030a 00000000 		.4byte	.LFB14
 2448 030e 0C000000 		.4byte	.LFE14-.LFB14
 2449 0312 01       		.uleb128 0x1
 2450 0313 9C       		.byte	0x9c
 2451 0314 27030000 		.4byte	0x327
 2452 0318 11       		.uleb128 0x11
 2453 0319 F5010000 		.4byte	.LASF40
 2454 031d 01       		.byte	0x1
 2455 031e CE08     		.2byte	0x8ce
 2456 0320 83000000 		.4byte	0x83
 2457 0324 01       		.uleb128 0x1
 2458 0325 50       		.byte	0x50
 2459 0326 00       		.byte	0
 2460 0327 0E       		.uleb128 0xe
 2461 0328 A0040000 		.4byte	.LASF41
 2462 032c 01       		.byte	0x1
 2463 032d 8509     		.2byte	0x985
 2464 032f 00000000 		.4byte	.LFB21
 2465 0333 14000000 		.4byte	.LFE21-.LFB21
 2466 0337 01       		.uleb128 0x1
 2467 0338 9C       		.byte	0x9c
 2468 0339 4E030000 		.4byte	0x34e
 2469 033d 0F       		.uleb128 0xf
 2470 033e 47030000 		.4byte	.LASF42
 2471 0342 01       		.byte	0x1
 2472 0343 8509     		.2byte	0x985
 2473 0345 6B000000 		.4byte	0x6b
 2474 0349 2A010000 		.4byte	.LLST10
 2475 034d 00       		.byte	0
 2476 034e 12       		.uleb128 0x12
 2477 034f 19010000 		.4byte	.LASF43
 2478 0353 01       		.byte	0x1
 2479 0354 9709     		.2byte	0x997
 2480 0356 6B000000 		.4byte	0x6b
 2481 035a 00000000 		.4byte	.LFB22
 2482 035e 18000000 		.4byte	.LFE22-.LFB22
 2483 0362 01       		.uleb128 0x1
 2484 0363 9C       		.byte	0x9c
 2485 0364 79030000 		.4byte	0x379
 2486 0368 0F       		.uleb128 0xf
 2487 0369 47030000 		.4byte	.LASF42
 2488 036d 01       		.byte	0x1
 2489 036e 9709     		.2byte	0x997
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 100


 2490 0370 6B000000 		.4byte	0x6b
 2491 0374 4B010000 		.4byte	.LLST11
 2492 0378 00       		.byte	0
 2493 0379 0E       		.uleb128 0xe
 2494 037a A3010000 		.4byte	.LASF44
 2495 037e 01       		.byte	0x1
 2496 037f A709     		.2byte	0x9a7
 2497 0381 00000000 		.4byte	.LFB23
 2498 0385 14000000 		.4byte	.LFE23-.LFB23
 2499 0389 01       		.uleb128 0x1
 2500 038a 9C       		.byte	0x9c
 2501 038b A0030000 		.4byte	0x3a0
 2502 038f 0F       		.uleb128 0xf
 2503 0390 47030000 		.4byte	.LASF42
 2504 0394 01       		.byte	0x1
 2505 0395 A709     		.2byte	0x9a7
 2506 0397 6B000000 		.4byte	0x6b
 2507 039b 6C010000 		.4byte	.LLST12
 2508 039f 00       		.byte	0
 2509 03a0 0E       		.uleb128 0xe
 2510 03a1 E2020000 		.4byte	.LASF45
 2511 03a5 01       		.byte	0x1
 2512 03a6 B509     		.2byte	0x9b5
 2513 03a8 00000000 		.4byte	.LFB24
 2514 03ac 14000000 		.4byte	.LFE24-.LFB24
 2515 03b0 01       		.uleb128 0x1
 2516 03b1 9C       		.byte	0x9c
 2517 03b2 C7030000 		.4byte	0x3c7
 2518 03b6 0F       		.uleb128 0xf
 2519 03b7 47030000 		.4byte	.LASF42
 2520 03bb 01       		.byte	0x1
 2521 03bc B509     		.2byte	0x9b5
 2522 03be 6B000000 		.4byte	0x6b
 2523 03c2 8D010000 		.4byte	.LLST13
 2524 03c6 00       		.byte	0
 2525 03c7 0E       		.uleb128 0xe
 2526 03c8 C3030000 		.4byte	.LASF46
 2527 03cc 01       		.byte	0x1
 2528 03cd C409     		.2byte	0x9c4
 2529 03cf 00000000 		.4byte	.LFB25
 2530 03d3 14000000 		.4byte	.LFE25-.LFB25
 2531 03d7 01       		.uleb128 0x1
 2532 03d8 9C       		.byte	0x9c
 2533 03d9 EE030000 		.4byte	0x3ee
 2534 03dd 0F       		.uleb128 0xf
 2535 03de 47030000 		.4byte	.LASF42
 2536 03e2 01       		.byte	0x1
 2537 03e3 C409     		.2byte	0x9c4
 2538 03e5 6B000000 		.4byte	0x6b
 2539 03e9 AE010000 		.4byte	.LLST14
 2540 03ed 00       		.byte	0
 2541 03ee 0E       		.uleb128 0xe
 2542 03ef 81040000 		.4byte	.LASF47
 2543 03f3 01       		.byte	0x1
 2544 03f4 D309     		.2byte	0x9d3
 2545 03f6 00000000 		.4byte	.LFB26
 2546 03fa 04000000 		.4byte	.LFE26-.LFB26
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 101


 2547 03fe 01       		.uleb128 0x1
 2548 03ff 9C       		.byte	0x9c
 2549 0400 13040000 		.4byte	0x413
 2550 0404 11       		.uleb128 0x11
 2551 0405 D2040000 		.4byte	.LASF35
 2552 0409 01       		.byte	0x1
 2553 040a D309     		.2byte	0x9d3
 2554 040c 6B000000 		.4byte	0x6b
 2555 0410 01       		.uleb128 0x1
 2556 0411 50       		.byte	0x50
 2557 0412 00       		.byte	0
 2558 0413 12       		.uleb128 0x12
 2559 0414 6C030000 		.4byte	.LASF48
 2560 0418 01       		.byte	0x1
 2561 0419 E708     		.2byte	0x8e7
 2562 041b C6000000 		.4byte	0xc6
 2563 041f 00000000 		.4byte	.LFB15
 2564 0423 20000000 		.4byte	.LFE15-.LFB15
 2565 0427 01       		.uleb128 0x1
 2566 0428 9C       		.byte	0x9c
 2567 0429 7B040000 		.4byte	0x47b
 2568 042d 0F       		.uleb128 0xf
 2569 042e 47030000 		.4byte	.LASF42
 2570 0432 01       		.byte	0x1
 2571 0433 E708     		.2byte	0x8e7
 2572 0435 6B000000 		.4byte	0x6b
 2573 0439 CF010000 		.4byte	.LLST15
 2574 043d 0F       		.uleb128 0xf
 2575 043e D5030000 		.4byte	.LASF49
 2576 0442 01       		.byte	0x1
 2577 0443 E708     		.2byte	0x8e7
 2578 0445 C6000000 		.4byte	0xc6
 2579 0449 F0010000 		.4byte	.LLST16
 2580 044d 13       		.uleb128 0x13
 2581 044e CE050000 		.4byte	.LASF50
 2582 0452 01       		.byte	0x1
 2583 0453 E908     		.2byte	0x8e9
 2584 0455 C6000000 		.4byte	0xc6
 2585 0459 01       		.uleb128 0x1
 2586 045a 50       		.byte	0x50
 2587 045b 14       		.uleb128 0x14
 2588 045c 00000000 		.4byte	.LASF51
 2589 0460 01       		.byte	0x1
 2590 0461 EA08     		.2byte	0x8ea
 2591 0463 7B040000 		.4byte	0x47b
 2592 0467 00000020 		.4byte	0x20000000
 2593 046b 15       		.uleb128 0x15
 2594 046c 10000000 		.4byte	.LVL40
 2595 0470 EE030000 		.4byte	0x3ee
 2596 0474 16       		.uleb128 0x16
 2597 0475 01       		.uleb128 0x1
 2598 0476 50       		.byte	0x50
 2599 0477 01       		.uleb128 0x1
 2600 0478 30       		.byte	0x30
 2601 0479 00       		.byte	0
 2602 047a 00       		.byte	0
 2603 047b 06       		.uleb128 0x6
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 102


 2604 047c 04       		.byte	0x4
 2605 047d C6000000 		.4byte	0xc6
 2606 0481 12       		.uleb128 0x12
 2607 0482 AC040000 		.4byte	.LASF52
 2608 0486 01       		.byte	0x1
 2609 0487 0909     		.2byte	0x909
 2610 0489 C6000000 		.4byte	0xc6
 2611 048d 00000000 		.4byte	.LFB16
 2612 0491 1C000000 		.4byte	.LFE16-.LFB16
 2613 0495 01       		.uleb128 0x1
 2614 0496 9C       		.byte	0x9c
 2615 0497 CB040000 		.4byte	0x4cb
 2616 049b 0F       		.uleb128 0xf
 2617 049c 47030000 		.4byte	.LASF42
 2618 04a0 01       		.byte	0x1
 2619 04a1 0909     		.2byte	0x909
 2620 04a3 6B000000 		.4byte	0x6b
 2621 04a7 1C020000 		.4byte	.LLST17
 2622 04ab 14       		.uleb128 0x14
 2623 04ac 00000000 		.4byte	.LASF51
 2624 04b0 01       		.byte	0x1
 2625 04b1 0B09     		.2byte	0x90b
 2626 04b3 7B040000 		.4byte	0x47b
 2627 04b7 00000020 		.4byte	0x20000000
 2628 04bb 15       		.uleb128 0x15
 2629 04bc 0E000000 		.4byte	.LVL46
 2630 04c0 EE030000 		.4byte	0x3ee
 2631 04c4 16       		.uleb128 0x16
 2632 04c5 01       		.uleb128 0x1
 2633 04c6 50       		.byte	0x50
 2634 04c7 01       		.uleb128 0x1
 2635 04c8 30       		.byte	0x30
 2636 04c9 00       		.byte	0
 2637 04ca 00       		.byte	0
 2638 04cb 12       		.uleb128 0x12
 2639 04cc 38030000 		.4byte	.LASF53
 2640 04d0 01       		.byte	0x1
 2641 04d1 1F09     		.2byte	0x91f
 2642 04d3 C6000000 		.4byte	0xc6
 2643 04d7 00000000 		.4byte	.LFB17
 2644 04db 24000000 		.4byte	.LFE17-.LFB17
 2645 04df 01       		.uleb128 0x1
 2646 04e0 9C       		.byte	0x9c
 2647 04e1 33050000 		.4byte	0x533
 2648 04e5 0F       		.uleb128 0xf
 2649 04e6 47030000 		.4byte	.LASF42
 2650 04ea 01       		.byte	0x1
 2651 04eb 1F09     		.2byte	0x91f
 2652 04ed 6B000000 		.4byte	0x6b
 2653 04f1 3D020000 		.4byte	.LLST18
 2654 04f5 0F       		.uleb128 0xf
 2655 04f6 D5030000 		.4byte	.LASF49
 2656 04fa 01       		.byte	0x1
 2657 04fb 1F09     		.2byte	0x91f
 2658 04fd C6000000 		.4byte	0xc6
 2659 0501 5E020000 		.4byte	.LLST19
 2660 0505 13       		.uleb128 0x13
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 103


 2661 0506 CE050000 		.4byte	.LASF50
 2662 050a 01       		.byte	0x1
 2663 050b 2109     		.2byte	0x921
 2664 050d C6000000 		.4byte	0xc6
 2665 0511 01       		.uleb128 0x1
 2666 0512 50       		.byte	0x50
 2667 0513 14       		.uleb128 0x14
 2668 0514 00000000 		.4byte	.LASF51
 2669 0518 01       		.byte	0x1
 2670 0519 2209     		.2byte	0x922
 2671 051b 7B040000 		.4byte	0x47b
 2672 051f 00000020 		.4byte	0x20000000
 2673 0523 15       		.uleb128 0x15
 2674 0524 10000000 		.4byte	.LVL50
 2675 0528 EE030000 		.4byte	0x3ee
 2676 052c 16       		.uleb128 0x16
 2677 052d 01       		.uleb128 0x1
 2678 052e 50       		.byte	0x50
 2679 052f 01       		.uleb128 0x1
 2680 0530 30       		.byte	0x30
 2681 0531 00       		.byte	0
 2682 0532 00       		.byte	0
 2683 0533 12       		.uleb128 0x12
 2684 0534 52040000 		.4byte	.LASF54
 2685 0538 01       		.byte	0x1
 2686 0539 3B09     		.2byte	0x93b
 2687 053b C6000000 		.4byte	0xc6
 2688 053f 00000000 		.4byte	.LFB18
 2689 0543 20000000 		.4byte	.LFE18-.LFB18
 2690 0547 01       		.uleb128 0x1
 2691 0548 9C       		.byte	0x9c
 2692 0549 7D050000 		.4byte	0x57d
 2693 054d 0F       		.uleb128 0xf
 2694 054e 47030000 		.4byte	.LASF42
 2695 0552 01       		.byte	0x1
 2696 0553 3B09     		.2byte	0x93b
 2697 0555 6B000000 		.4byte	0x6b
 2698 0559 8A020000 		.4byte	.LLST20
 2699 055d 14       		.uleb128 0x14
 2700 055e 00000000 		.4byte	.LASF51
 2701 0562 01       		.byte	0x1
 2702 0563 3D09     		.2byte	0x93d
 2703 0565 7B040000 		.4byte	0x47b
 2704 0569 00000020 		.4byte	0x20000000
 2705 056d 15       		.uleb128 0x15
 2706 056e 0E000000 		.4byte	.LVL56
 2707 0572 EE030000 		.4byte	0x3ee
 2708 0576 16       		.uleb128 0x16
 2709 0577 01       		.uleb128 0x1
 2710 0578 50       		.byte	0x50
 2711 0579 01       		.uleb128 0x1
 2712 057a 30       		.byte	0x30
 2713 057b 00       		.byte	0
 2714 057c 00       		.byte	0
 2715 057d 0E       		.uleb128 0xe
 2716 057e 13040000 		.4byte	.LASF55
 2717 0582 01       		.byte	0x1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 104


 2718 0583 4E09     		.2byte	0x94e
 2719 0585 00000000 		.4byte	.LFB19
 2720 0589 4C000000 		.4byte	.LFE19-.LFB19
 2721 058d 01       		.uleb128 0x1
 2722 058e 9C       		.byte	0x9c
 2723 058f 1C060000 		.4byte	0x61c
 2724 0593 0F       		.uleb128 0xf
 2725 0594 47030000 		.4byte	.LASF42
 2726 0598 01       		.byte	0x1
 2727 0599 4E09     		.2byte	0x94e
 2728 059b 6B000000 		.4byte	0x6b
 2729 059f AB020000 		.4byte	.LLST21
 2730 05a3 0F       		.uleb128 0xf
 2731 05a4 4E030000 		.4byte	.LASF56
 2732 05a8 01       		.byte	0x1
 2733 05a9 4E09     		.2byte	0x94e
 2734 05ab 6B000000 		.4byte	0x6b
 2735 05af CC020000 		.4byte	.LLST22
 2736 05b3 10       		.uleb128 0x10
 2737 05b4 52010000 		.4byte	.LASF24
 2738 05b8 01       		.byte	0x1
 2739 05b9 5009     		.2byte	0x950
 2740 05bb 6B000000 		.4byte	0x6b
 2741 05bf ED020000 		.4byte	.LLST23
 2742 05c3 10       		.uleb128 0x10
 2743 05c4 E8010000 		.4byte	.LASF57
 2744 05c8 01       		.byte	0x1
 2745 05c9 5109     		.2byte	0x951
 2746 05cb 83000000 		.4byte	0x83
 2747 05cf 00030000 		.4byte	.LLST24
 2748 05d3 10       		.uleb128 0x10
 2749 05d4 57020000 		.4byte	.LASF58
 2750 05d8 01       		.byte	0x1
 2751 05d9 5209     		.2byte	0x952
 2752 05db 83000000 		.4byte	0x83
 2753 05df 13030000 		.4byte	.LLST25
 2754 05e3 17       		.uleb128 0x17
 2755 05e4 10000000 		.4byte	.LVL59
 2756 05e8 EE030000 		.4byte	0x3ee
 2757 05ec F6050000 		.4byte	0x5f6
 2758 05f0 16       		.uleb128 0x16
 2759 05f1 01       		.uleb128 0x1
 2760 05f2 50       		.byte	0x50
 2761 05f3 01       		.uleb128 0x1
 2762 05f4 30       		.byte	0x30
 2763 05f5 00       		.byte	0
 2764 05f6 17       		.uleb128 0x17
 2765 05f7 1A000000 		.4byte	.LVL60
 2766 05fb EE030000 		.4byte	0x3ee
 2767 05ff 09060000 		.4byte	0x609
 2768 0603 16       		.uleb128 0x16
 2769 0604 01       		.uleb128 0x1
 2770 0605 50       		.byte	0x50
 2771 0606 01       		.uleb128 0x1
 2772 0607 30       		.byte	0x30
 2773 0608 00       		.byte	0
 2774 0609 0C       		.uleb128 0xc
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 105


 2775 060a 26000000 		.4byte	.LVL62
 2776 060e 9B0B0000 		.4byte	0xb9b
 2777 0612 0C       		.uleb128 0xc
 2778 0613 44000000 		.4byte	.LVL67
 2779 0617 A60B0000 		.4byte	0xba6
 2780 061b 00       		.byte	0
 2781 061c 12       		.uleb128 0x12
 2782 061d 2B020000 		.4byte	.LASF59
 2783 0621 01       		.byte	0x1
 2784 0622 7009     		.2byte	0x970
 2785 0624 6B000000 		.4byte	0x6b
 2786 0628 00000000 		.4byte	.LFB20
 2787 062c 2C000000 		.4byte	.LFE20-.LFB20
 2788 0630 01       		.uleb128 0x1
 2789 0631 9C       		.byte	0x9c
 2790 0632 66060000 		.4byte	0x666
 2791 0636 0F       		.uleb128 0xf
 2792 0637 47030000 		.4byte	.LASF42
 2793 063b 01       		.byte	0x1
 2794 063c 7009     		.2byte	0x970
 2795 063e 6B000000 		.4byte	0x6b
 2796 0642 31030000 		.4byte	.LLST26
 2797 0646 10       		.uleb128 0x10
 2798 0647 4E030000 		.4byte	.LASF56
 2799 064b 01       		.byte	0x1
 2800 064c 7209     		.2byte	0x972
 2801 064e 6B000000 		.4byte	0x6b
 2802 0652 52030000 		.4byte	.LLST27
 2803 0656 15       		.uleb128 0x15
 2804 0657 0E000000 		.4byte	.LVL71
 2805 065b EE030000 		.4byte	0x3ee
 2806 065f 16       		.uleb128 0x16
 2807 0660 01       		.uleb128 0x1
 2808 0661 50       		.byte	0x50
 2809 0662 01       		.uleb128 0x1
 2810 0663 30       		.byte	0x30
 2811 0664 00       		.byte	0
 2812 0665 00       		.byte	0
 2813 0666 0A       		.uleb128 0xa
 2814 0667 F0000000 		.4byte	.LASF60
 2815 066b 01       		.byte	0x1
 2816 066c EB09     		.2byte	0x9eb
 2817 066e 00000000 		.4byte	.LFB27
 2818 0672 18000000 		.4byte	.LFE27-.LFB27
 2819 0676 01       		.uleb128 0x1
 2820 0677 9C       		.byte	0x9c
 2821 0678 0E       		.uleb128 0xe
 2822 0679 94050000 		.4byte	.LASF61
 2823 067d 01       		.byte	0x1
 2824 067e FF09     		.2byte	0x9ff
 2825 0680 00000000 		.4byte	.LFB28
 2826 0684 30000000 		.4byte	.LFE28-.LFB28
 2827 0688 01       		.uleb128 0x1
 2828 0689 9C       		.byte	0x9c
 2829 068a B1060000 		.4byte	0x6b1
 2830 068e 0F       		.uleb128 0xf
 2831 068f 61040000 		.4byte	.LASF62
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 106


 2832 0693 01       		.byte	0x1
 2833 0694 FF09     		.2byte	0x9ff
 2834 0696 83000000 		.4byte	0x83
 2835 069a 65030000 		.4byte	.LLST28
 2836 069e 0C       		.uleb128 0xc
 2837 069f 0E000000 		.4byte	.LVL76
 2838 06a3 B70B0000 		.4byte	0xbb7
 2839 06a7 0C       		.uleb128 0xc
 2840 06a8 26000000 		.4byte	.LVL78
 2841 06ac B70B0000 		.4byte	0xbb7
 2842 06b0 00       		.byte	0
 2843 06b1 0B       		.uleb128 0xb
 2844 06b2 12020000 		.4byte	.LASF63
 2845 06b6 01       		.byte	0x1
 2846 06b7 AF       		.byte	0xaf
 2847 06b8 00000000 		.4byte	.LFB3
 2848 06bc CC000000 		.4byte	.LFE3-.LFB3
 2849 06c0 01       		.uleb128 0x1
 2850 06c1 9C       		.byte	0x9c
 2851 06c2 5A070000 		.4byte	0x75a
 2852 06c6 18       		.uleb128 0x18
 2853 06c7 41010000 		.4byte	.LASF64
 2854 06cb 01       		.byte	0x1
 2855 06cc B5       		.byte	0xb5
 2856 06cd 83000000 		.4byte	0x83
 2857 06d1 83030000 		.4byte	.LLST29
 2858 06d5 18       		.uleb128 0x18
 2859 06d6 52010000 		.4byte	.LASF24
 2860 06da 01       		.byte	0x1
 2861 06db B6       		.byte	0xb6
 2862 06dc 6B000000 		.4byte	0x6b
 2863 06e0 AE030000 		.4byte	.LLST30
 2864 06e4 18       		.uleb128 0x18
 2865 06e5 19030000 		.4byte	.LASF65
 2866 06e9 01       		.byte	0x1
 2867 06ea B7       		.byte	0xb7
 2868 06eb 83000000 		.4byte	0x83
 2869 06ef C1030000 		.4byte	.LLST31
 2870 06f3 18       		.uleb128 0x18
 2871 06f4 61010000 		.4byte	.LASF66
 2872 06f8 01       		.byte	0x1
 2873 06f9 B8       		.byte	0xb8
 2874 06fa 83000000 		.4byte	0x83
 2875 06fe 17040000 		.4byte	.LLST32
 2876 0702 19       		.uleb128 0x19
 2877 0703 88050000 		.4byte	.LASF67
 2878 0707 01       		.byte	0x1
 2879 0708 B9       		.byte	0xb9
 2880 0709 C1000000 		.4byte	0xc1
 2881 070d 02       		.uleb128 0x2
 2882 070e 91       		.byte	0x91
 2883 070f 6C       		.sleb128 -20
 2884 0710 0C       		.uleb128 0xc
 2885 0711 08000000 		.4byte	.LVL81
 2886 0715 C80B0000 		.4byte	0xbc8
 2887 0719 0C       		.uleb128 0xc
 2888 071a 10000000 		.4byte	.LVL82
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 107


 2889 071e 9B0B0000 		.4byte	0xb9b
 2890 0722 17       		.uleb128 0x17
 2891 0723 82000000 		.4byte	.LVL98
 2892 0727 D30B0000 		.4byte	0xbd3
 2893 072b 36070000 		.4byte	0x736
 2894 072f 16       		.uleb128 0x16
 2895 0730 01       		.uleb128 0x1
 2896 0731 50       		.byte	0x50
 2897 0732 02       		.uleb128 0x2
 2898 0733 08       		.byte	0x8
 2899 0734 30       		.byte	0x30
 2900 0735 00       		.byte	0
 2901 0736 17       		.uleb128 0x17
 2902 0737 94000000 		.4byte	.LVL99
 2903 073b 78060000 		.4byte	0x678
 2904 073f 49070000 		.4byte	0x749
 2905 0743 16       		.uleb128 0x16
 2906 0744 01       		.uleb128 0x1
 2907 0745 50       		.byte	0x50
 2908 0746 01       		.uleb128 0x1
 2909 0747 44       		.byte	0x44
 2910 0748 00       		.byte	0
 2911 0749 15       		.uleb128 0x15
 2912 074a 9E000000 		.4byte	.LVL100
 2913 074e A60B0000 		.4byte	0xba6
 2914 0752 16       		.uleb128 0x16
 2915 0753 01       		.uleb128 0x1
 2916 0754 50       		.byte	0x50
 2917 0755 02       		.uleb128 0x2
 2918 0756 74       		.byte	0x74
 2919 0757 00       		.sleb128 0
 2920 0758 00       		.byte	0
 2921 0759 00       		.byte	0
 2922 075a 0E       		.uleb128 0xe
 2923 075b 57030000 		.4byte	.LASF68
 2924 075f 01       		.byte	0x1
 2925 0760 3C03     		.2byte	0x33c
 2926 0762 00000000 		.4byte	.LFB10
 2927 0766 D8000000 		.4byte	.LFE10-.LFB10
 2928 076a 01       		.uleb128 0x1
 2929 076b 9C       		.byte	0x9c
 2930 076c 22080000 		.4byte	0x822
 2931 0770 0F       		.uleb128 0xf
 2932 0771 41010000 		.4byte	.LASF64
 2933 0775 01       		.byte	0x1
 2934 0776 3C03     		.2byte	0x33c
 2935 0778 83000000 		.4byte	0x83
 2936 077c 36040000 		.4byte	.LLST33
 2937 0780 10       		.uleb128 0x10
 2938 0781 52010000 		.4byte	.LASF24
 2939 0785 01       		.byte	0x1
 2940 0786 3E03     		.2byte	0x33e
 2941 0788 6B000000 		.4byte	0x6b
 2942 078c 86040000 		.4byte	.LLST34
 2943 0790 10       		.uleb128 0x10
 2944 0791 71050000 		.4byte	.LASF69
 2945 0795 01       		.byte	0x1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 108


 2946 0796 3F03     		.2byte	0x33f
 2947 0798 6B000000 		.4byte	0x6b
 2948 079c 9A040000 		.4byte	.LLST35
 2949 07a0 10       		.uleb128 0x10
 2950 07a1 92010000 		.4byte	.LASF70
 2951 07a5 01       		.byte	0x1
 2952 07a6 4203     		.2byte	0x342
 2953 07a8 83000000 		.4byte	0x83
 2954 07ac BE040000 		.4byte	.LLST36
 2955 07b0 0C       		.uleb128 0xc
 2956 07b1 26000000 		.4byte	.LVL103
 2957 07b5 9B0B0000 		.4byte	0xb9b
 2958 07b9 0C       		.uleb128 0xc
 2959 07ba 2C000000 		.4byte	.LVL105
 2960 07be 2D010000 		.4byte	0x12d
 2961 07c2 0C       		.uleb128 0xc
 2962 07c3 34000000 		.4byte	.LVL107
 2963 07c7 FC000000 		.4byte	0xfc
 2964 07cb 17       		.uleb128 0x17
 2965 07cc 74000000 		.4byte	.LVL114
 2966 07d0 B70B0000 		.4byte	0xbb7
 2967 07d4 DF070000 		.4byte	0x7df
 2968 07d8 16       		.uleb128 0x16
 2969 07d9 01       		.uleb128 0x1
 2970 07da 50       		.byte	0x50
 2971 07db 02       		.uleb128 0x2
 2972 07dc 08       		.byte	0x8
 2973 07dd 32       		.byte	0x32
 2974 07de 00       		.byte	0
 2975 07df 17       		.uleb128 0x17
 2976 07e0 94000000 		.4byte	.LVL115
 2977 07e4 B70B0000 		.4byte	0xbb7
 2978 07e8 F3070000 		.4byte	0x7f3
 2979 07ec 16       		.uleb128 0x16
 2980 07ed 01       		.uleb128 0x1
 2981 07ee 50       		.byte	0x50
 2982 07ef 02       		.uleb128 0x2
 2983 07f0 08       		.byte	0x8
 2984 07f1 32       		.byte	0x32
 2985 07f2 00       		.byte	0
 2986 07f3 0C       		.uleb128 0xc
 2987 07f4 AE000000 		.4byte	.LVL117
 2988 07f8 B1060000 		.4byte	0x6b1
 2989 07fc 17       		.uleb128 0x17
 2990 07fd B4000000 		.4byte	.LVL118
 2991 0801 A60B0000 		.4byte	0xba6
 2992 0805 12080000 		.4byte	0x812
 2993 0809 16       		.uleb128 0x16
 2994 080a 01       		.uleb128 0x1
 2995 080b 50       		.byte	0x50
 2996 080c 04       		.uleb128 0x4
 2997 080d 91       		.byte	0x91
 2998 080e 64       		.sleb128 -28
 2999 080f 94       		.byte	0x94
 3000 0810 01       		.byte	0x1
 3001 0811 00       		.byte	0
 3002 0812 15       		.uleb128 0x15
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 109


 3003 0813 BC000000 		.4byte	.LVL121
 3004 0817 EE030000 		.4byte	0x3ee
 3005 081b 16       		.uleb128 0x16
 3006 081c 01       		.uleb128 0x1
 3007 081d 50       		.byte	0x50
 3008 081e 01       		.uleb128 0x1
 3009 081f 30       		.byte	0x30
 3010 0820 00       		.byte	0
 3011 0821 00       		.byte	0
 3012 0822 0E       		.uleb128 0xe
 3013 0823 C8040000 		.4byte	.LASF71
 3014 0827 01       		.byte	0x1
 3015 0828 160A     		.2byte	0xa16
 3016 082a 00000000 		.4byte	.LFB29
 3017 082e 14000000 		.4byte	.LFE29-.LFB29
 3018 0832 01       		.uleb128 0x1
 3019 0833 9C       		.byte	0x9c
 3020 0834 52080000 		.4byte	0x852
 3021 0838 0F       		.uleb128 0xf
 3022 0839 42060000 		.4byte	.LASF72
 3023 083d 01       		.byte	0x1
 3024 083e 160A     		.2byte	0xa16
 3025 0840 77000000 		.4byte	0x77
 3026 0844 01050000 		.4byte	.LLST37
 3027 0848 0C       		.uleb128 0xc
 3028 0849 0C000000 		.4byte	.LVL124
 3029 084d B70B0000 		.4byte	0xbb7
 3030 0851 00       		.byte	0
 3031 0852 1A       		.uleb128 0x1a
 3032 0853 46010000 		.4byte	.LASF73
 3033 0857 01       		.byte	0x1
 3034 0858 240A     		.2byte	0xa24
 3035 085a 00000000 		.4byte	.LFB30
 3036 085e 4C000000 		.4byte	.LFE30-.LFB30
 3037 0862 01       		.uleb128 0x1
 3038 0863 9C       		.byte	0x9c
 3039 0864 79080000 		.4byte	0x879
 3040 0868 0F       		.uleb128 0xf
 3041 0869 41010000 		.4byte	.LASF64
 3042 086d 01       		.byte	0x1
 3043 086e 240A     		.2byte	0xa24
 3044 0870 83000000 		.4byte	0x83
 3045 0874 22050000 		.4byte	.LLST38
 3046 0878 00       		.byte	0
 3047 0879 0A       		.uleb128 0xa
 3048 087a E4050000 		.4byte	.LASF74
 3049 087e 01       		.byte	0x1
 3050 087f 910A     		.2byte	0xa91
 3051 0881 00000000 		.4byte	.LFB34
 3052 0885 10000000 		.4byte	.LFE34-.LFB34
 3053 0889 01       		.uleb128 0x1
 3054 088a 9C       		.byte	0x9c
 3055 088b 0A       		.uleb128 0xa
 3056 088c 00010000 		.4byte	.LASF75
 3057 0890 01       		.byte	0x1
 3058 0891 A10A     		.2byte	0xaa1
 3059 0893 00000000 		.4byte	.LFB35
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 110


 3060 0897 10000000 		.4byte	.LFE35-.LFB35
 3061 089b 01       		.uleb128 0x1
 3062 089c 9C       		.byte	0x9c
 3063 089d 0E       		.uleb128 0xe
 3064 089e 0C050000 		.4byte	.LASF76
 3065 08a2 01       		.byte	0x1
 3066 08a3 800A     		.2byte	0xa80
 3067 08a5 00000000 		.4byte	.LFB33
 3068 08a9 18000000 		.4byte	.LFE33-.LFB33
 3069 08ad 01       		.uleb128 0x1
 3070 08ae 9C       		.byte	0x9c
 3071 08af BD080000 		.4byte	0x8bd
 3072 08b3 0C       		.uleb128 0xc
 3073 08b4 06000000 		.4byte	.LVL129
 3074 08b8 8B080000 		.4byte	0x88b
 3075 08bc 00       		.byte	0
 3076 08bd 0A       		.uleb128 0xa
 3077 08be B4050000 		.4byte	.LASF77
 3078 08c2 01       		.byte	0x1
 3079 08c3 B10A     		.2byte	0xab1
 3080 08c5 00000000 		.4byte	.LFB36
 3081 08c9 10000000 		.4byte	.LFE36-.LFB36
 3082 08cd 01       		.uleb128 0x1
 3083 08ce 9C       		.byte	0x9c
 3084 08cf 0E       		.uleb128 0xe
 3085 08d0 56060000 		.4byte	.LASF78
 3086 08d4 01       		.byte	0x1
 3087 08d5 C20A     		.2byte	0xac2
 3088 08d7 00000000 		.4byte	.LFB37
 3089 08db 10000000 		.4byte	.LFE37-.LFB37
 3090 08df 01       		.uleb128 0x1
 3091 08e0 9C       		.byte	0x9c
 3092 08e1 F6080000 		.4byte	0x8f6
 3093 08e5 0F       		.uleb128 0xf
 3094 08e6 57020000 		.4byte	.LASF58
 3095 08ea 01       		.byte	0x1
 3096 08eb C20A     		.2byte	0xac2
 3097 08ed 83000000 		.4byte	0x83
 3098 08f1 43050000 		.4byte	.LLST39
 3099 08f5 00       		.byte	0
 3100 08f6 0D       		.uleb128 0xd
 3101 08f7 69010000 		.4byte	.LASF80
 3102 08fb 01       		.byte	0x1
 3103 08fc D20A     		.2byte	0xad2
 3104 08fe 83000000 		.4byte	0x83
 3105 0902 00000000 		.4byte	.LFB38
 3106 0906 10000000 		.4byte	.LFE38-.LFB38
 3107 090a 01       		.uleb128 0x1
 3108 090b 9C       		.byte	0x9c
 3109 090c 0D       		.uleb128 0xd
 3110 090d F3030000 		.4byte	.LASF81
 3111 0911 01       		.byte	0x1
 3112 0912 E20A     		.2byte	0xae2
 3113 0914 83000000 		.4byte	0x83
 3114 0918 00000000 		.4byte	.LFB39
 3115 091c 10000000 		.4byte	.LFE39-.LFB39
 3116 0920 01       		.uleb128 0x1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 111


 3117 0921 9C       		.byte	0x9c
 3118 0922 0E       		.uleb128 0xe
 3119 0923 20030000 		.4byte	.LASF82
 3120 0927 01       		.byte	0x1
 3121 0928 020B     		.2byte	0xb02
 3122 092a 00000000 		.4byte	.LFB40
 3123 092e 20000000 		.4byte	.LFE40-.LFB40
 3124 0932 01       		.uleb128 0x1
 3125 0933 9C       		.byte	0x9c
 3126 0934 47090000 		.4byte	0x947
 3127 0938 11       		.uleb128 0x11
 3128 0939 5D020000 		.4byte	.LASF83
 3129 093d 01       		.byte	0x1
 3130 093e 020B     		.2byte	0xb02
 3131 0940 83000000 		.4byte	0x83
 3132 0944 01       		.uleb128 0x1
 3133 0945 50       		.byte	0x50
 3134 0946 00       		.byte	0
 3135 0947 0D       		.uleb128 0xd
 3136 0948 9C050000 		.4byte	.LASF84
 3137 094c 01       		.byte	0x1
 3138 094d 1B0B     		.2byte	0xb1b
 3139 094f 83000000 		.4byte	0x83
 3140 0953 00000000 		.4byte	.LFB41
 3141 0957 10000000 		.4byte	.LFE41-.LFB41
 3142 095b 01       		.uleb128 0x1
 3143 095c 9C       		.byte	0x9c
 3144 095d 0D       		.uleb128 0xd
 3145 095e 77020000 		.4byte	.LASF85
 3146 0962 01       		.byte	0x1
 3147 0963 320B     		.2byte	0xb32
 3148 0965 83000000 		.4byte	0x83
 3149 0969 00000000 		.4byte	.LFB42
 3150 096d 10000000 		.4byte	.LFE42-.LFB42
 3151 0971 01       		.uleb128 0x1
 3152 0972 9C       		.byte	0x9c
 3153 0973 1B       		.uleb128 0x1b
 3154 0974 69060000 		.4byte	.LASF110
 3155 0978 01       		.byte	0x1
 3156 0979 870B     		.2byte	0xb87
 3157 097b 00000000 		.4byte	.LFB46
 3158 097f 28000000 		.4byte	.LFE46-.LFB46
 3159 0983 01       		.uleb128 0x1
 3160 0984 9C       		.byte	0x9c
 3161 0985 A1090000 		.4byte	0x9a1
 3162 0989 1C       		.uleb128 0x1c
 3163 098a 6900     		.ascii	"i\000"
 3164 098c 01       		.byte	0x1
 3165 098d 890B     		.2byte	0xb89
 3166 098f 83000000 		.4byte	0x83
 3167 0993 64050000 		.4byte	.LLST40
 3168 0997 0C       		.uleb128 0xc
 3169 0998 06000000 		.4byte	.LVL133
 3170 099c 5D090000 		.4byte	0x95d
 3171 09a0 00       		.byte	0
 3172 09a1 0A       		.uleb128 0xa
 3173 09a2 9A020000 		.4byte	.LASF86
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 112


 3174 09a6 01       		.byte	0x1
 3175 09a7 3F0B     		.2byte	0xb3f
 3176 09a9 00000000 		.4byte	.LFB43
 3177 09ad 0C000000 		.4byte	.LFE43-.LFB43
 3178 09b1 01       		.uleb128 0x1
 3179 09b2 9C       		.byte	0x9c
 3180 09b3 1A       		.uleb128 0x1a
 3181 09b4 49020000 		.4byte	.LASF87
 3182 09b8 01       		.byte	0x1
 3183 09b9 610A     		.2byte	0xa61
 3184 09bb 00000000 		.4byte	.LFB32
 3185 09bf 4C000000 		.4byte	.LFE32-.LFB32
 3186 09c3 01       		.uleb128 0x1
 3187 09c4 9C       		.byte	0x9c
 3188 09c5 280A0000 		.4byte	0xa28
 3189 09c9 1C       		.uleb128 0x1c
 3190 09ca 6900     		.ascii	"i\000"
 3191 09cc 01       		.byte	0x1
 3192 09cd 630A     		.2byte	0xa63
 3193 09cf 83000000 		.4byte	0x83
 3194 09d3 82050000 		.4byte	.LLST41
 3195 09d7 17       		.uleb128 0x17
 3196 09d8 1C000000 		.4byte	.LVL143
 3197 09dc 13040000 		.4byte	0x413
 3198 09e0 F3090000 		.4byte	0x9f3
 3199 09e4 16       		.uleb128 0x16
 3200 09e5 01       		.uleb128 0x1
 3201 09e6 51       		.byte	0x51
 3202 09e7 05       		.uleb128 0x5
 3203 09e8 03       		.byte	0x3
 3204 09e9 00000000 		.4byte	CySysTickServiceCallbacks
 3205 09ed 16       		.uleb128 0x16
 3206 09ee 01       		.uleb128 0x1
 3207 09ef 50       		.byte	0x50
 3208 09f0 01       		.uleb128 0x1
 3209 09f1 3F       		.byte	0x3f
 3210 09f2 00       		.byte	0
 3211 09f3 17       		.uleb128 0x17
 3212 09f4 22000000 		.4byte	.LVL144
 3213 09f8 22090000 		.4byte	0x922
 3214 09fc 060A0000 		.4byte	0xa06
 3215 0a00 16       		.uleb128 0x16
 3216 0a01 01       		.uleb128 0x1
 3217 0a02 50       		.byte	0x50
 3218 0a03 01       		.uleb128 0x1
 3219 0a04 31       		.byte	0x31
 3220 0a05 00       		.byte	0
 3221 0a06 0C       		.uleb128 0xc
 3222 0a07 32000000 		.4byte	.LVL146
 3223 0a0b CF080000 		.4byte	0x8cf
 3224 0a0f 0C       		.uleb128 0xc
 3225 0a10 36000000 		.4byte	.LVL147
 3226 0a14 A1090000 		.4byte	0x9a1
 3227 0a18 15       		.uleb128 0x15
 3228 0a19 3C000000 		.4byte	.LVL148
 3229 0a1d 27030000 		.4byte	0x327
 3230 0a21 16       		.uleb128 0x16
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 113


 3231 0a22 01       		.uleb128 0x1
 3232 0a23 50       		.byte	0x50
 3233 0a24 01       		.uleb128 0x1
 3234 0a25 3F       		.byte	0x3f
 3235 0a26 00       		.byte	0
 3236 0a27 00       		.byte	0
 3237 0a28 0E       		.uleb128 0xe
 3238 0a29 9E030000 		.4byte	.LASF88
 3239 0a2d 01       		.byte	0x1
 3240 0a2e 440A     		.2byte	0xa44
 3241 0a30 00000000 		.4byte	.LFB31
 3242 0a34 20000000 		.4byte	.LFE31-.LFB31
 3243 0a38 01       		.uleb128 0x1
 3244 0a39 9C       		.byte	0x9c
 3245 0a3a 510A0000 		.4byte	0xa51
 3246 0a3e 0C       		.uleb128 0xc
 3247 0a3f 0E000000 		.4byte	.LVL149
 3248 0a43 B3090000 		.4byte	0x9b3
 3249 0a47 0C       		.uleb128 0xc
 3250 0a48 18000000 		.4byte	.LVL150
 3251 0a4c 9D080000 		.4byte	0x89d
 3252 0a50 00       		.byte	0
 3253 0a51 12       		.uleb128 0x12
 3254 0a52 49050000 		.4byte	.LASF89
 3255 0a56 01       		.byte	0x1
 3256 0a57 620B     		.2byte	0xb62
 3257 0a59 E0000000 		.4byte	0xe0
 3258 0a5d 00000000 		.4byte	.LFB44
 3259 0a61 10000000 		.4byte	.LFE44-.LFB44
 3260 0a65 01       		.uleb128 0x1
 3261 0a66 9C       		.byte	0x9c
 3262 0a67 980A0000 		.4byte	0xa98
 3263 0a6b 0F       		.uleb128 0xf
 3264 0a6c 47030000 		.4byte	.LASF42
 3265 0a70 01       		.byte	0x1
 3266 0a71 620B     		.2byte	0xb62
 3267 0a73 83000000 		.4byte	0x83
 3268 0a77 A1050000 		.4byte	.LLST42
 3269 0a7b 11       		.uleb128 0x11
 3270 0a7c EA030000 		.4byte	.LASF90
 3271 0a80 01       		.byte	0x1
 3272 0a81 620B     		.2byte	0xb62
 3273 0a83 E0000000 		.4byte	0xe0
 3274 0a87 01       		.uleb128 0x1
 3275 0a88 51       		.byte	0x51
 3276 0a89 13       		.uleb128 0x13
 3277 0a8a 93000000 		.4byte	.LASF91
 3278 0a8e 01       		.byte	0x1
 3279 0a8f 640B     		.2byte	0xb64
 3280 0a91 E0000000 		.4byte	0xe0
 3281 0a95 01       		.uleb128 0x1
 3282 0a96 50       		.byte	0x50
 3283 0a97 00       		.byte	0
 3284 0a98 12       		.uleb128 0x12
 3285 0a99 B0010000 		.4byte	.LASF92
 3286 0a9d 01       		.byte	0x1
 3287 0a9e 7A0B     		.2byte	0xb7a
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 114


 3288 0aa0 E0000000 		.4byte	0xe0
 3289 0aa4 00000000 		.4byte	.LFB45
 3290 0aa8 0C000000 		.4byte	.LFE45-.LFB45
 3291 0aac 01       		.uleb128 0x1
 3292 0aad 9C       		.byte	0x9c
 3293 0aae C30A0000 		.4byte	0xac3
 3294 0ab2 0F       		.uleb128 0xf
 3295 0ab3 47030000 		.4byte	.LASF42
 3296 0ab7 01       		.byte	0x1
 3297 0ab8 7A0B     		.2byte	0xb7a
 3298 0aba 83000000 		.4byte	0x83
 3299 0abe C2050000 		.4byte	.LLST43
 3300 0ac2 00       		.byte	0
 3301 0ac3 0E       		.uleb128 0xe
 3302 0ac4 69020000 		.4byte	.LASF93
 3303 0ac8 01       		.byte	0x1
 3304 0ac9 A70B     		.2byte	0xba7
 3305 0acb 00000000 		.4byte	.LFB47
 3306 0acf 70000000 		.4byte	.LFE47-.LFB47
 3307 0ad3 01       		.uleb128 0x1
 3308 0ad4 9C       		.byte	0x9c
 3309 0ad5 E80A0000 		.4byte	0xae8
 3310 0ad9 11       		.uleb128 0x11
 3311 0ada 7F050000 		.4byte	.LASF94
 3312 0ade 01       		.byte	0x1
 3313 0adf A70B     		.2byte	0xba7
 3314 0ae1 E80A0000 		.4byte	0xae8
 3315 0ae5 01       		.uleb128 0x1
 3316 0ae6 50       		.byte	0x50
 3317 0ae7 00       		.byte	0
 3318 0ae8 06       		.uleb128 0x6
 3319 0ae9 04       		.byte	0x4
 3320 0aea 83000000 		.4byte	0x83
 3321 0aee 1D       		.uleb128 0x1d
 3322 0aef E0000000 		.4byte	0xe0
 3323 0af3 FE0A0000 		.4byte	0xafe
 3324 0af7 1E       		.uleb128 0x1e
 3325 0af8 D9000000 		.4byte	0xd9
 3326 0afc 04       		.byte	0x4
 3327 0afd 00       		.byte	0
 3328 0afe 19       		.uleb128 0x19
 3329 0aff 5E050000 		.4byte	.LASF95
 3330 0b03 01       		.byte	0x1
 3331 0b04 22       		.byte	0x22
 3332 0b05 EE0A0000 		.4byte	0xaee
 3333 0b09 05       		.uleb128 0x5
 3334 0b0a 03       		.byte	0x3
 3335 0b0b 00000000 		.4byte	CySysTickCallbacks
 3336 0b0f 1F       		.uleb128 0x1f
 3337 0b10 05040000 		.4byte	.LASF96
 3338 0b14 01       		.byte	0x1
 3339 0b15 1B       		.byte	0x1b
 3340 0b16 83000000 		.4byte	0x83
 3341 0b1a 05       		.uleb128 0x5
 3342 0b1b 03       		.byte	0x3
 3343 0b1c 00000000 		.4byte	cydelayFreqHz
 3344 0b20 1F       		.uleb128 0x1f
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 115


 3345 0b21 CB010000 		.4byte	.LASF97
 3346 0b25 01       		.byte	0x1
 3347 0b26 1C       		.byte	0x1c
 3348 0b27 83000000 		.4byte	0x83
 3349 0b2b 05       		.uleb128 0x5
 3350 0b2c 03       		.byte	0x3
 3351 0b2d 00000000 		.4byte	cydelayFreqKhz
 3352 0b31 1F       		.uleb128 0x1f
 3353 0b32 D5050000 		.4byte	.LASF98
 3354 0b36 01       		.byte	0x1
 3355 0b37 1D       		.byte	0x1d
 3356 0b38 6B000000 		.4byte	0x6b
 3357 0b3c 05       		.uleb128 0x5
 3358 0b3d 03       		.byte	0x3
 3359 0b3e 00000000 		.4byte	cydelayFreqMhz
 3360 0b42 1F       		.uleb128 0x1f
 3361 0b43 3C020000 		.4byte	.LASF99
 3362 0b47 01       		.byte	0x1
 3363 0b48 1E       		.byte	0x1e
 3364 0b49 83000000 		.4byte	0x83
 3365 0b4d 05       		.uleb128 0x5
 3366 0b4e 03       		.byte	0x3
 3367 0b4f 00000000 		.4byte	cydelay32kMs
 3368 0b53 1F       		.uleb128 0x1f
 3369 0b54 BF000000 		.4byte	.LASF100
 3370 0b58 01       		.byte	0x1
 3371 0b59 36       		.byte	0x36
 3372 0b5a 83000000 		.4byte	0x83
 3373 0b5e 05       		.uleb128 0x5
 3374 0b5f 03       		.byte	0x3
 3375 0b60 00000000 		.4byte	CySysTickInitVar
 3376 0b64 1D       		.uleb128 0x1d
 3377 0b65 6B000000 		.4byte	0x6b
 3378 0b69 740B0000 		.4byte	0xb74
 3379 0b6d 1E       		.uleb128 0x1e
 3380 0b6e D9000000 		.4byte	0xd9
 3381 0b72 16       		.byte	0x16
 3382 0b73 00       		.byte	0
 3383 0b74 1F       		.uleb128 0x1f
 3384 0b75 E7040000 		.4byte	.LASF101
 3385 0b79 01       		.byte	0x1
 3386 0b7a 4C       		.byte	0x4c
 3387 0b7b 850B0000 		.4byte	0xb85
 3388 0b7f 05       		.uleb128 0x5
 3389 0b80 03       		.byte	0x3
 3390 0b81 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 3391 0b85 20       		.uleb128 0x20
 3392 0b86 640B0000 		.4byte	0xb64
 3393 0b8a 1F       		.uleb128 0x1f
 3394 0b8b 6B000000 		.4byte	.LASF102
 3395 0b8f 01       		.byte	0x1
 3396 0b90 5B       		.byte	0x5b
 3397 0b91 83000000 		.4byte	0x83
 3398 0b95 05       		.uleb128 0x5
 3399 0b96 03       		.byte	0x3
 3400 0b97 00000000 		.4byte	CySysClkPumpConfig
 3401 0b9b 21       		.uleb128 0x21
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 116


 3402 0b9c CB020000 		.4byte	.LASF105
 3403 0ba0 03       		.byte	0x3
 3404 0ba1 E5       		.byte	0xe5
 3405 0ba2 6B000000 		.4byte	0x6b
 3406 0ba6 22       		.uleb128 0x22
 3407 0ba7 2A040000 		.4byte	.LASF103
 3408 0bab 03       		.byte	0x3
 3409 0bac E6       		.byte	0xe6
 3410 0bad B70B0000 		.4byte	0xbb7
 3411 0bb1 23       		.uleb128 0x23
 3412 0bb2 6B000000 		.4byte	0x6b
 3413 0bb6 00       		.byte	0
 3414 0bb7 22       		.uleb128 0x22
 3415 0bb8 6E040000 		.4byte	.LASF104
 3416 0bbc 03       		.byte	0x3
 3417 0bbd DC       		.byte	0xdc
 3418 0bbe C80B0000 		.4byte	0xbc8
 3419 0bc2 23       		.uleb128 0x23
 3420 0bc3 83000000 		.4byte	0x83
 3421 0bc7 00       		.byte	0
 3422 0bc8 21       		.uleb128 0x21
 3423 0bc9 DD000000 		.4byte	.LASF106
 3424 0bcd 04       		.byte	0x4
 3425 0bce 54       		.byte	0x54
 3426 0bcf 83000000 		.4byte	0x83
 3427 0bd3 24       		.uleb128 0x24
 3428 0bd4 0B060000 		.4byte	.LASF111
 3429 0bd8 05       		.byte	0x5
 3430 0bd9 52       		.byte	0x52
 3431 0bda 23       		.uleb128 0x23
 3432 0bdb 83000000 		.4byte	0x83
 3433 0bdf 00       		.byte	0
 3434 0be0 00       		.byte	0
 3435              		.section	.debug_abbrev,"",%progbits
 3436              	.Ldebug_abbrev0:
 3437 0000 01       		.uleb128 0x1
 3438 0001 11       		.uleb128 0x11
 3439 0002 01       		.byte	0x1
 3440 0003 25       		.uleb128 0x25
 3441 0004 0E       		.uleb128 0xe
 3442 0005 13       		.uleb128 0x13
 3443 0006 0B       		.uleb128 0xb
 3444 0007 03       		.uleb128 0x3
 3445 0008 0E       		.uleb128 0xe
 3446 0009 1B       		.uleb128 0x1b
 3447 000a 0E       		.uleb128 0xe
 3448 000b 55       		.uleb128 0x55
 3449 000c 17       		.uleb128 0x17
 3450 000d 11       		.uleb128 0x11
 3451 000e 01       		.uleb128 0x1
 3452 000f 10       		.uleb128 0x10
 3453 0010 17       		.uleb128 0x17
 3454 0011 00       		.byte	0
 3455 0012 00       		.byte	0
 3456 0013 02       		.uleb128 0x2
 3457 0014 24       		.uleb128 0x24
 3458 0015 00       		.byte	0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 117


 3459 0016 0B       		.uleb128 0xb
 3460 0017 0B       		.uleb128 0xb
 3461 0018 3E       		.uleb128 0x3e
 3462 0019 0B       		.uleb128 0xb
 3463 001a 03       		.uleb128 0x3
 3464 001b 0E       		.uleb128 0xe
 3465 001c 00       		.byte	0
 3466 001d 00       		.byte	0
 3467 001e 03       		.uleb128 0x3
 3468 001f 24       		.uleb128 0x24
 3469 0020 00       		.byte	0
 3470 0021 0B       		.uleb128 0xb
 3471 0022 0B       		.uleb128 0xb
 3472 0023 3E       		.uleb128 0x3e
 3473 0024 0B       		.uleb128 0xb
 3474 0025 03       		.uleb128 0x3
 3475 0026 08       		.uleb128 0x8
 3476 0027 00       		.byte	0
 3477 0028 00       		.byte	0
 3478 0029 04       		.uleb128 0x4
 3479 002a 16       		.uleb128 0x16
 3480 002b 00       		.byte	0
 3481 002c 03       		.uleb128 0x3
 3482 002d 0E       		.uleb128 0xe
 3483 002e 3A       		.uleb128 0x3a
 3484 002f 0B       		.uleb128 0xb
 3485 0030 3B       		.uleb128 0x3b
 3486 0031 05       		.uleb128 0x5
 3487 0032 49       		.uleb128 0x49
 3488 0033 13       		.uleb128 0x13
 3489 0034 00       		.byte	0
 3490 0035 00       		.byte	0
 3491 0036 05       		.uleb128 0x5
 3492 0037 35       		.uleb128 0x35
 3493 0038 00       		.byte	0
 3494 0039 49       		.uleb128 0x49
 3495 003a 13       		.uleb128 0x13
 3496 003b 00       		.byte	0
 3497 003c 00       		.byte	0
 3498 003d 06       		.uleb128 0x6
 3499 003e 0F       		.uleb128 0xf
 3500 003f 00       		.byte	0
 3501 0040 0B       		.uleb128 0xb
 3502 0041 0B       		.uleb128 0xb
 3503 0042 49       		.uleb128 0x49
 3504 0043 13       		.uleb128 0x13
 3505 0044 00       		.byte	0
 3506 0045 00       		.byte	0
 3507 0046 07       		.uleb128 0x7
 3508 0047 15       		.uleb128 0x15
 3509 0048 00       		.byte	0
 3510 0049 27       		.uleb128 0x27
 3511 004a 19       		.uleb128 0x19
 3512 004b 00       		.byte	0
 3513 004c 00       		.byte	0
 3514 004d 08       		.uleb128 0x8
 3515 004e 16       		.uleb128 0x16
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 118


 3516 004f 00       		.byte	0
 3517 0050 03       		.uleb128 0x3
 3518 0051 0E       		.uleb128 0xe
 3519 0052 3A       		.uleb128 0x3a
 3520 0053 0B       		.uleb128 0xb
 3521 0054 3B       		.uleb128 0x3b
 3522 0055 0B       		.uleb128 0xb
 3523 0056 49       		.uleb128 0x49
 3524 0057 13       		.uleb128 0x13
 3525 0058 00       		.byte	0
 3526 0059 00       		.byte	0
 3527 005a 09       		.uleb128 0x9
 3528 005b 2E       		.uleb128 0x2e
 3529 005c 00       		.byte	0
 3530 005d 3F       		.uleb128 0x3f
 3531 005e 19       		.uleb128 0x19
 3532 005f 03       		.uleb128 0x3
 3533 0060 0E       		.uleb128 0xe
 3534 0061 3A       		.uleb128 0x3a
 3535 0062 0B       		.uleb128 0xb
 3536 0063 3B       		.uleb128 0x3b
 3537 0064 0B       		.uleb128 0xb
 3538 0065 27       		.uleb128 0x27
 3539 0066 19       		.uleb128 0x19
 3540 0067 11       		.uleb128 0x11
 3541 0068 01       		.uleb128 0x1
 3542 0069 12       		.uleb128 0x12
 3543 006a 06       		.uleb128 0x6
 3544 006b 40       		.uleb128 0x40
 3545 006c 18       		.uleb128 0x18
 3546 006d 9742     		.uleb128 0x2117
 3547 006f 19       		.uleb128 0x19
 3548 0070 00       		.byte	0
 3549 0071 00       		.byte	0
 3550 0072 0A       		.uleb128 0xa
 3551 0073 2E       		.uleb128 0x2e
 3552 0074 00       		.byte	0
 3553 0075 3F       		.uleb128 0x3f
 3554 0076 19       		.uleb128 0x19
 3555 0077 03       		.uleb128 0x3
 3556 0078 0E       		.uleb128 0xe
 3557 0079 3A       		.uleb128 0x3a
 3558 007a 0B       		.uleb128 0xb
 3559 007b 3B       		.uleb128 0x3b
 3560 007c 05       		.uleb128 0x5
 3561 007d 27       		.uleb128 0x27
 3562 007e 19       		.uleb128 0x19
 3563 007f 11       		.uleb128 0x11
 3564 0080 01       		.uleb128 0x1
 3565 0081 12       		.uleb128 0x12
 3566 0082 06       		.uleb128 0x6
 3567 0083 40       		.uleb128 0x40
 3568 0084 18       		.uleb128 0x18
 3569 0085 9742     		.uleb128 0x2117
 3570 0087 19       		.uleb128 0x19
 3571 0088 00       		.byte	0
 3572 0089 00       		.byte	0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 119


 3573 008a 0B       		.uleb128 0xb
 3574 008b 2E       		.uleb128 0x2e
 3575 008c 01       		.byte	0x1
 3576 008d 3F       		.uleb128 0x3f
 3577 008e 19       		.uleb128 0x19
 3578 008f 03       		.uleb128 0x3
 3579 0090 0E       		.uleb128 0xe
 3580 0091 3A       		.uleb128 0x3a
 3581 0092 0B       		.uleb128 0xb
 3582 0093 3B       		.uleb128 0x3b
 3583 0094 0B       		.uleb128 0xb
 3584 0095 27       		.uleb128 0x27
 3585 0096 19       		.uleb128 0x19
 3586 0097 11       		.uleb128 0x11
 3587 0098 01       		.uleb128 0x1
 3588 0099 12       		.uleb128 0x12
 3589 009a 06       		.uleb128 0x6
 3590 009b 40       		.uleb128 0x40
 3591 009c 18       		.uleb128 0x18
 3592 009d 9742     		.uleb128 0x2117
 3593 009f 19       		.uleb128 0x19
 3594 00a0 01       		.uleb128 0x1
 3595 00a1 13       		.uleb128 0x13
 3596 00a2 00       		.byte	0
 3597 00a3 00       		.byte	0
 3598 00a4 0C       		.uleb128 0xc
 3599 00a5 898201   		.uleb128 0x4109
 3600 00a8 00       		.byte	0
 3601 00a9 11       		.uleb128 0x11
 3602 00aa 01       		.uleb128 0x1
 3603 00ab 31       		.uleb128 0x31
 3604 00ac 13       		.uleb128 0x13
 3605 00ad 00       		.byte	0
 3606 00ae 00       		.byte	0
 3607 00af 0D       		.uleb128 0xd
 3608 00b0 2E       		.uleb128 0x2e
 3609 00b1 00       		.byte	0
 3610 00b2 3F       		.uleb128 0x3f
 3611 00b3 19       		.uleb128 0x19
 3612 00b4 03       		.uleb128 0x3
 3613 00b5 0E       		.uleb128 0xe
 3614 00b6 3A       		.uleb128 0x3a
 3615 00b7 0B       		.uleb128 0xb
 3616 00b8 3B       		.uleb128 0x3b
 3617 00b9 05       		.uleb128 0x5
 3618 00ba 27       		.uleb128 0x27
 3619 00bb 19       		.uleb128 0x19
 3620 00bc 49       		.uleb128 0x49
 3621 00bd 13       		.uleb128 0x13
 3622 00be 11       		.uleb128 0x11
 3623 00bf 01       		.uleb128 0x1
 3624 00c0 12       		.uleb128 0x12
 3625 00c1 06       		.uleb128 0x6
 3626 00c2 40       		.uleb128 0x40
 3627 00c3 18       		.uleb128 0x18
 3628 00c4 9742     		.uleb128 0x2117
 3629 00c6 19       		.uleb128 0x19
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 120


 3630 00c7 00       		.byte	0
 3631 00c8 00       		.byte	0
 3632 00c9 0E       		.uleb128 0xe
 3633 00ca 2E       		.uleb128 0x2e
 3634 00cb 01       		.byte	0x1
 3635 00cc 3F       		.uleb128 0x3f
 3636 00cd 19       		.uleb128 0x19
 3637 00ce 03       		.uleb128 0x3
 3638 00cf 0E       		.uleb128 0xe
 3639 00d0 3A       		.uleb128 0x3a
 3640 00d1 0B       		.uleb128 0xb
 3641 00d2 3B       		.uleb128 0x3b
 3642 00d3 05       		.uleb128 0x5
 3643 00d4 27       		.uleb128 0x27
 3644 00d5 19       		.uleb128 0x19
 3645 00d6 11       		.uleb128 0x11
 3646 00d7 01       		.uleb128 0x1
 3647 00d8 12       		.uleb128 0x12
 3648 00d9 06       		.uleb128 0x6
 3649 00da 40       		.uleb128 0x40
 3650 00db 18       		.uleb128 0x18
 3651 00dc 9742     		.uleb128 0x2117
 3652 00de 19       		.uleb128 0x19
 3653 00df 01       		.uleb128 0x1
 3654 00e0 13       		.uleb128 0x13
 3655 00e1 00       		.byte	0
 3656 00e2 00       		.byte	0
 3657 00e3 0F       		.uleb128 0xf
 3658 00e4 05       		.uleb128 0x5
 3659 00e5 00       		.byte	0
 3660 00e6 03       		.uleb128 0x3
 3661 00e7 0E       		.uleb128 0xe
 3662 00e8 3A       		.uleb128 0x3a
 3663 00e9 0B       		.uleb128 0xb
 3664 00ea 3B       		.uleb128 0x3b
 3665 00eb 05       		.uleb128 0x5
 3666 00ec 49       		.uleb128 0x49
 3667 00ed 13       		.uleb128 0x13
 3668 00ee 02       		.uleb128 0x2
 3669 00ef 17       		.uleb128 0x17
 3670 00f0 00       		.byte	0
 3671 00f1 00       		.byte	0
 3672 00f2 10       		.uleb128 0x10
 3673 00f3 34       		.uleb128 0x34
 3674 00f4 00       		.byte	0
 3675 00f5 03       		.uleb128 0x3
 3676 00f6 0E       		.uleb128 0xe
 3677 00f7 3A       		.uleb128 0x3a
 3678 00f8 0B       		.uleb128 0xb
 3679 00f9 3B       		.uleb128 0x3b
 3680 00fa 05       		.uleb128 0x5
 3681 00fb 49       		.uleb128 0x49
 3682 00fc 13       		.uleb128 0x13
 3683 00fd 02       		.uleb128 0x2
 3684 00fe 17       		.uleb128 0x17
 3685 00ff 00       		.byte	0
 3686 0100 00       		.byte	0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 121


 3687 0101 11       		.uleb128 0x11
 3688 0102 05       		.uleb128 0x5
 3689 0103 00       		.byte	0
 3690 0104 03       		.uleb128 0x3
 3691 0105 0E       		.uleb128 0xe
 3692 0106 3A       		.uleb128 0x3a
 3693 0107 0B       		.uleb128 0xb
 3694 0108 3B       		.uleb128 0x3b
 3695 0109 05       		.uleb128 0x5
 3696 010a 49       		.uleb128 0x49
 3697 010b 13       		.uleb128 0x13
 3698 010c 02       		.uleb128 0x2
 3699 010d 18       		.uleb128 0x18
 3700 010e 00       		.byte	0
 3701 010f 00       		.byte	0
 3702 0110 12       		.uleb128 0x12
 3703 0111 2E       		.uleb128 0x2e
 3704 0112 01       		.byte	0x1
 3705 0113 3F       		.uleb128 0x3f
 3706 0114 19       		.uleb128 0x19
 3707 0115 03       		.uleb128 0x3
 3708 0116 0E       		.uleb128 0xe
 3709 0117 3A       		.uleb128 0x3a
 3710 0118 0B       		.uleb128 0xb
 3711 0119 3B       		.uleb128 0x3b
 3712 011a 05       		.uleb128 0x5
 3713 011b 27       		.uleb128 0x27
 3714 011c 19       		.uleb128 0x19
 3715 011d 49       		.uleb128 0x49
 3716 011e 13       		.uleb128 0x13
 3717 011f 11       		.uleb128 0x11
 3718 0120 01       		.uleb128 0x1
 3719 0121 12       		.uleb128 0x12
 3720 0122 06       		.uleb128 0x6
 3721 0123 40       		.uleb128 0x40
 3722 0124 18       		.uleb128 0x18
 3723 0125 9742     		.uleb128 0x2117
 3724 0127 19       		.uleb128 0x19
 3725 0128 01       		.uleb128 0x1
 3726 0129 13       		.uleb128 0x13
 3727 012a 00       		.byte	0
 3728 012b 00       		.byte	0
 3729 012c 13       		.uleb128 0x13
 3730 012d 34       		.uleb128 0x34
 3731 012e 00       		.byte	0
 3732 012f 03       		.uleb128 0x3
 3733 0130 0E       		.uleb128 0xe
 3734 0131 3A       		.uleb128 0x3a
 3735 0132 0B       		.uleb128 0xb
 3736 0133 3B       		.uleb128 0x3b
 3737 0134 05       		.uleb128 0x5
 3738 0135 49       		.uleb128 0x49
 3739 0136 13       		.uleb128 0x13
 3740 0137 02       		.uleb128 0x2
 3741 0138 18       		.uleb128 0x18
 3742 0139 00       		.byte	0
 3743 013a 00       		.byte	0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 122


 3744 013b 14       		.uleb128 0x14
 3745 013c 34       		.uleb128 0x34
 3746 013d 00       		.byte	0
 3747 013e 03       		.uleb128 0x3
 3748 013f 0E       		.uleb128 0xe
 3749 0140 3A       		.uleb128 0x3a
 3750 0141 0B       		.uleb128 0xb
 3751 0142 3B       		.uleb128 0x3b
 3752 0143 05       		.uleb128 0x5
 3753 0144 49       		.uleb128 0x49
 3754 0145 13       		.uleb128 0x13
 3755 0146 1C       		.uleb128 0x1c
 3756 0147 06       		.uleb128 0x6
 3757 0148 00       		.byte	0
 3758 0149 00       		.byte	0
 3759 014a 15       		.uleb128 0x15
 3760 014b 898201   		.uleb128 0x4109
 3761 014e 01       		.byte	0x1
 3762 014f 11       		.uleb128 0x11
 3763 0150 01       		.uleb128 0x1
 3764 0151 31       		.uleb128 0x31
 3765 0152 13       		.uleb128 0x13
 3766 0153 00       		.byte	0
 3767 0154 00       		.byte	0
 3768 0155 16       		.uleb128 0x16
 3769 0156 8A8201   		.uleb128 0x410a
 3770 0159 00       		.byte	0
 3771 015a 02       		.uleb128 0x2
 3772 015b 18       		.uleb128 0x18
 3773 015c 9142     		.uleb128 0x2111
 3774 015e 18       		.uleb128 0x18
 3775 015f 00       		.byte	0
 3776 0160 00       		.byte	0
 3777 0161 17       		.uleb128 0x17
 3778 0162 898201   		.uleb128 0x4109
 3779 0165 01       		.byte	0x1
 3780 0166 11       		.uleb128 0x11
 3781 0167 01       		.uleb128 0x1
 3782 0168 31       		.uleb128 0x31
 3783 0169 13       		.uleb128 0x13
 3784 016a 01       		.uleb128 0x1
 3785 016b 13       		.uleb128 0x13
 3786 016c 00       		.byte	0
 3787 016d 00       		.byte	0
 3788 016e 18       		.uleb128 0x18
 3789 016f 34       		.uleb128 0x34
 3790 0170 00       		.byte	0
 3791 0171 03       		.uleb128 0x3
 3792 0172 0E       		.uleb128 0xe
 3793 0173 3A       		.uleb128 0x3a
 3794 0174 0B       		.uleb128 0xb
 3795 0175 3B       		.uleb128 0x3b
 3796 0176 0B       		.uleb128 0xb
 3797 0177 49       		.uleb128 0x49
 3798 0178 13       		.uleb128 0x13
 3799 0179 02       		.uleb128 0x2
 3800 017a 17       		.uleb128 0x17
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 123


 3801 017b 00       		.byte	0
 3802 017c 00       		.byte	0
 3803 017d 19       		.uleb128 0x19
 3804 017e 34       		.uleb128 0x34
 3805 017f 00       		.byte	0
 3806 0180 03       		.uleb128 0x3
 3807 0181 0E       		.uleb128 0xe
 3808 0182 3A       		.uleb128 0x3a
 3809 0183 0B       		.uleb128 0xb
 3810 0184 3B       		.uleb128 0x3b
 3811 0185 0B       		.uleb128 0xb
 3812 0186 49       		.uleb128 0x49
 3813 0187 13       		.uleb128 0x13
 3814 0188 02       		.uleb128 0x2
 3815 0189 18       		.uleb128 0x18
 3816 018a 00       		.byte	0
 3817 018b 00       		.byte	0
 3818 018c 1A       		.uleb128 0x1a
 3819 018d 2E       		.uleb128 0x2e
 3820 018e 01       		.byte	0x1
 3821 018f 3F       		.uleb128 0x3f
 3822 0190 19       		.uleb128 0x19
 3823 0191 03       		.uleb128 0x3
 3824 0192 0E       		.uleb128 0xe
 3825 0193 3A       		.uleb128 0x3a
 3826 0194 0B       		.uleb128 0xb
 3827 0195 3B       		.uleb128 0x3b
 3828 0196 05       		.uleb128 0x5
 3829 0197 27       		.uleb128 0x27
 3830 0198 19       		.uleb128 0x19
 3831 0199 11       		.uleb128 0x11
 3832 019a 01       		.uleb128 0x1
 3833 019b 12       		.uleb128 0x12
 3834 019c 06       		.uleb128 0x6
 3835 019d 40       		.uleb128 0x40
 3836 019e 18       		.uleb128 0x18
 3837 019f 9642     		.uleb128 0x2116
 3838 01a1 19       		.uleb128 0x19
 3839 01a2 01       		.uleb128 0x1
 3840 01a3 13       		.uleb128 0x13
 3841 01a4 00       		.byte	0
 3842 01a5 00       		.byte	0
 3843 01a6 1B       		.uleb128 0x1b
 3844 01a7 2E       		.uleb128 0x2e
 3845 01a8 01       		.byte	0x1
 3846 01a9 03       		.uleb128 0x3
 3847 01aa 0E       		.uleb128 0xe
 3848 01ab 3A       		.uleb128 0x3a
 3849 01ac 0B       		.uleb128 0xb
 3850 01ad 3B       		.uleb128 0x3b
 3851 01ae 05       		.uleb128 0x5
 3852 01af 27       		.uleb128 0x27
 3853 01b0 19       		.uleb128 0x19
 3854 01b1 11       		.uleb128 0x11
 3855 01b2 01       		.uleb128 0x1
 3856 01b3 12       		.uleb128 0x12
 3857 01b4 06       		.uleb128 0x6
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 124


 3858 01b5 40       		.uleb128 0x40
 3859 01b6 18       		.uleb128 0x18
 3860 01b7 9642     		.uleb128 0x2116
 3861 01b9 19       		.uleb128 0x19
 3862 01ba 01       		.uleb128 0x1
 3863 01bb 13       		.uleb128 0x13
 3864 01bc 00       		.byte	0
 3865 01bd 00       		.byte	0
 3866 01be 1C       		.uleb128 0x1c
 3867 01bf 34       		.uleb128 0x34
 3868 01c0 00       		.byte	0
 3869 01c1 03       		.uleb128 0x3
 3870 01c2 08       		.uleb128 0x8
 3871 01c3 3A       		.uleb128 0x3a
 3872 01c4 0B       		.uleb128 0xb
 3873 01c5 3B       		.uleb128 0x3b
 3874 01c6 05       		.uleb128 0x5
 3875 01c7 49       		.uleb128 0x49
 3876 01c8 13       		.uleb128 0x13
 3877 01c9 02       		.uleb128 0x2
 3878 01ca 17       		.uleb128 0x17
 3879 01cb 00       		.byte	0
 3880 01cc 00       		.byte	0
 3881 01cd 1D       		.uleb128 0x1d
 3882 01ce 01       		.uleb128 0x1
 3883 01cf 01       		.byte	0x1
 3884 01d0 49       		.uleb128 0x49
 3885 01d1 13       		.uleb128 0x13
 3886 01d2 01       		.uleb128 0x1
 3887 01d3 13       		.uleb128 0x13
 3888 01d4 00       		.byte	0
 3889 01d5 00       		.byte	0
 3890 01d6 1E       		.uleb128 0x1e
 3891 01d7 21       		.uleb128 0x21
 3892 01d8 00       		.byte	0
 3893 01d9 49       		.uleb128 0x49
 3894 01da 13       		.uleb128 0x13
 3895 01db 2F       		.uleb128 0x2f
 3896 01dc 0B       		.uleb128 0xb
 3897 01dd 00       		.byte	0
 3898 01de 00       		.byte	0
 3899 01df 1F       		.uleb128 0x1f
 3900 01e0 34       		.uleb128 0x34
 3901 01e1 00       		.byte	0
 3902 01e2 03       		.uleb128 0x3
 3903 01e3 0E       		.uleb128 0xe
 3904 01e4 3A       		.uleb128 0x3a
 3905 01e5 0B       		.uleb128 0xb
 3906 01e6 3B       		.uleb128 0x3b
 3907 01e7 0B       		.uleb128 0xb
 3908 01e8 49       		.uleb128 0x49
 3909 01e9 13       		.uleb128 0x13
 3910 01ea 3F       		.uleb128 0x3f
 3911 01eb 19       		.uleb128 0x19
 3912 01ec 02       		.uleb128 0x2
 3913 01ed 18       		.uleb128 0x18
 3914 01ee 00       		.byte	0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 125


 3915 01ef 00       		.byte	0
 3916 01f0 20       		.uleb128 0x20
 3917 01f1 26       		.uleb128 0x26
 3918 01f2 00       		.byte	0
 3919 01f3 49       		.uleb128 0x49
 3920 01f4 13       		.uleb128 0x13
 3921 01f5 00       		.byte	0
 3922 01f6 00       		.byte	0
 3923 01f7 21       		.uleb128 0x21
 3924 01f8 2E       		.uleb128 0x2e
 3925 01f9 00       		.byte	0
 3926 01fa 3F       		.uleb128 0x3f
 3927 01fb 19       		.uleb128 0x19
 3928 01fc 03       		.uleb128 0x3
 3929 01fd 0E       		.uleb128 0xe
 3930 01fe 3A       		.uleb128 0x3a
 3931 01ff 0B       		.uleb128 0xb
 3932 0200 3B       		.uleb128 0x3b
 3933 0201 0B       		.uleb128 0xb
 3934 0202 27       		.uleb128 0x27
 3935 0203 19       		.uleb128 0x19
 3936 0204 49       		.uleb128 0x49
 3937 0205 13       		.uleb128 0x13
 3938 0206 3C       		.uleb128 0x3c
 3939 0207 19       		.uleb128 0x19
 3940 0208 00       		.byte	0
 3941 0209 00       		.byte	0
 3942 020a 22       		.uleb128 0x22
 3943 020b 2E       		.uleb128 0x2e
 3944 020c 01       		.byte	0x1
 3945 020d 3F       		.uleb128 0x3f
 3946 020e 19       		.uleb128 0x19
 3947 020f 03       		.uleb128 0x3
 3948 0210 0E       		.uleb128 0xe
 3949 0211 3A       		.uleb128 0x3a
 3950 0212 0B       		.uleb128 0xb
 3951 0213 3B       		.uleb128 0x3b
 3952 0214 0B       		.uleb128 0xb
 3953 0215 27       		.uleb128 0x27
 3954 0216 19       		.uleb128 0x19
 3955 0217 3C       		.uleb128 0x3c
 3956 0218 19       		.uleb128 0x19
 3957 0219 01       		.uleb128 0x1
 3958 021a 13       		.uleb128 0x13
 3959 021b 00       		.byte	0
 3960 021c 00       		.byte	0
 3961 021d 23       		.uleb128 0x23
 3962 021e 05       		.uleb128 0x5
 3963 021f 00       		.byte	0
 3964 0220 49       		.uleb128 0x49
 3965 0221 13       		.uleb128 0x13
 3966 0222 00       		.byte	0
 3967 0223 00       		.byte	0
 3968 0224 24       		.uleb128 0x24
 3969 0225 2E       		.uleb128 0x2e
 3970 0226 01       		.byte	0x1
 3971 0227 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 126


 3972 0228 19       		.uleb128 0x19
 3973 0229 03       		.uleb128 0x3
 3974 022a 0E       		.uleb128 0xe
 3975 022b 3A       		.uleb128 0x3a
 3976 022c 0B       		.uleb128 0xb
 3977 022d 3B       		.uleb128 0x3b
 3978 022e 0B       		.uleb128 0xb
 3979 022f 27       		.uleb128 0x27
 3980 0230 19       		.uleb128 0x19
 3981 0231 3C       		.uleb128 0x3c
 3982 0232 19       		.uleb128 0x19
 3983 0233 00       		.byte	0
 3984 0234 00       		.byte	0
 3985 0235 00       		.byte	0
 3986              		.section	.debug_loc,"",%progbits
 3987              	.Ldebug_loc0:
 3988              	.LLST0:
 3989 0000 00000000 		.4byte	.LVL1
 3990 0004 07000000 		.4byte	.LVL2-1
 3991 0008 0100     		.2byte	0x1
 3992 000a 50       		.byte	0x50
 3993 000b 07000000 		.4byte	.LVL2-1
 3994 000f 1A000000 		.4byte	.LVL6
 3995 0013 0100     		.2byte	0x1
 3996 0015 54       		.byte	0x54
 3997 0016 1A000000 		.4byte	.LVL6
 3998 001a 20000000 		.4byte	.LFE6
 3999 001e 0400     		.2byte	0x4
 4000 0020 F3       		.byte	0xf3
 4001 0021 01       		.uleb128 0x1
 4002 0022 50       		.byte	0x50
 4003 0023 9F       		.byte	0x9f
 4004 0024 00000000 		.4byte	0
 4005 0028 00000000 		.4byte	0
 4006              	.LLST1:
 4007 002c 08000000 		.4byte	.LVL2
 4008 0030 19000000 		.4byte	.LVL5-1
 4009 0034 0100     		.2byte	0x1
 4010 0036 50       		.byte	0x50
 4011 0037 00000000 		.4byte	0
 4012 003b 00000000 		.4byte	0
 4013              	.LLST2:
 4014 003f 10000000 		.4byte	.LVL3
 4015 0043 14000000 		.4byte	.LVL4
 4016 0047 0100     		.2byte	0x1
 4017 0049 52       		.byte	0x52
 4018 004a 14000000 		.4byte	.LVL4
 4019 004e 19000000 		.4byte	.LVL5-1
 4020 0052 0100     		.2byte	0x1
 4021 0054 53       		.byte	0x53
 4022 0055 00000000 		.4byte	0
 4023 0059 00000000 		.4byte	0
 4024              	.LLST3:
 4025 005d 06000000 		.4byte	.LVL8
 4026 0061 11000000 		.4byte	.LVL10-1
 4027 0065 0100     		.2byte	0x1
 4028 0067 50       		.byte	0x50
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 127


 4029 0068 00000000 		.4byte	0
 4030 006c 00000000 		.4byte	0
 4031              	.LLST4:
 4032 0070 0E000000 		.4byte	.LVL9
 4033 0074 14000000 		.4byte	.LVL11
 4034 0078 0100     		.2byte	0x1
 4035 007a 54       		.byte	0x54
 4036 007b 14000000 		.4byte	.LVL11
 4037 007f 1C000000 		.4byte	.LFE8
 4038 0083 0100     		.2byte	0x1
 4039 0085 50       		.byte	0x50
 4040 0086 00000000 		.4byte	0
 4041 008a 00000000 		.4byte	0
 4042              	.LLST5:
 4043 008e 00000000 		.4byte	.LVL12
 4044 0092 07000000 		.4byte	.LVL13-1
 4045 0096 0100     		.2byte	0x1
 4046 0098 50       		.byte	0x50
 4047 0099 07000000 		.4byte	.LVL13-1
 4048 009d 0A000000 		.4byte	.LVL14
 4049 00a1 0100     		.2byte	0x1
 4050 00a3 54       		.byte	0x54
 4051 00a4 0A000000 		.4byte	.LVL14
 4052 00a8 24000000 		.4byte	.LFE9
 4053 00ac 0400     		.2byte	0x4
 4054 00ae F3       		.byte	0xf3
 4055 00af 01       		.uleb128 0x1
 4056 00b0 50       		.byte	0x50
 4057 00b1 9F       		.byte	0x9f
 4058 00b2 00000000 		.4byte	0
 4059 00b6 00000000 		.4byte	0
 4060              	.LLST6:
 4061 00ba 08000000 		.4byte	.LVL13
 4062 00be 1D000000 		.4byte	.LVL15-1
 4063 00c2 0100     		.2byte	0x1
 4064 00c4 50       		.byte	0x50
 4065 00c5 00000000 		.4byte	0
 4066 00c9 00000000 		.4byte	0
 4067              	.LLST7:
 4068 00cd 00000000 		.4byte	.LVL16
 4069 00d1 07000000 		.4byte	.LVL17-1
 4070 00d5 0100     		.2byte	0x1
 4071 00d7 50       		.byte	0x50
 4072 00d8 07000000 		.4byte	.LVL17-1
 4073 00dc 14000000 		.4byte	.LVL18
 4074 00e0 0100     		.2byte	0x1
 4075 00e2 54       		.byte	0x54
 4076 00e3 14000000 		.4byte	.LVL18
 4077 00e7 24000000 		.4byte	.LFE11
 4078 00eb 0400     		.2byte	0x4
 4079 00ed F3       		.byte	0xf3
 4080 00ee 01       		.uleb128 0x1
 4081 00ef 50       		.byte	0x50
 4082 00f0 9F       		.byte	0x9f
 4083 00f1 00000000 		.4byte	0
 4084 00f5 00000000 		.4byte	0
 4085              	.LLST8:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 128


 4086 00f9 08000000 		.4byte	.LVL17
 4087 00fd 1D000000 		.4byte	.LVL19-1
 4088 0101 0100     		.2byte	0x1
 4089 0103 50       		.byte	0x50
 4090 0104 00000000 		.4byte	0
 4091 0108 00000000 		.4byte	0
 4092              	.LLST9:
 4093 010c 00000000 		.4byte	.LVL20
 4094 0110 04000000 		.4byte	.LVL21
 4095 0114 0100     		.2byte	0x1
 4096 0116 50       		.byte	0x50
 4097 0117 04000000 		.4byte	.LVL21
 4098 011b 14000000 		.4byte	.LFE12
 4099 011f 0100     		.2byte	0x1
 4100 0121 52       		.byte	0x52
 4101 0122 00000000 		.4byte	0
 4102 0126 00000000 		.4byte	0
 4103              	.LLST10:
 4104 012a 00000000 		.4byte	.LVL26
 4105 012e 04000000 		.4byte	.LVL27
 4106 0132 0100     		.2byte	0x1
 4107 0134 50       		.byte	0x50
 4108 0135 04000000 		.4byte	.LVL27
 4109 0139 14000000 		.4byte	.LFE21
 4110 013d 0400     		.2byte	0x4
 4111 013f F3       		.byte	0xf3
 4112 0140 01       		.uleb128 0x1
 4113 0141 50       		.byte	0x50
 4114 0142 9F       		.byte	0x9f
 4115 0143 00000000 		.4byte	0
 4116 0147 00000000 		.4byte	0
 4117              	.LLST11:
 4118 014b 00000000 		.4byte	.LVL28
 4119 014f 08000000 		.4byte	.LVL29
 4120 0153 0100     		.2byte	0x1
 4121 0155 50       		.byte	0x50
 4122 0156 08000000 		.4byte	.LVL29
 4123 015a 18000000 		.4byte	.LFE22
 4124 015e 0400     		.2byte	0x4
 4125 0160 F3       		.byte	0xf3
 4126 0161 01       		.uleb128 0x1
 4127 0162 50       		.byte	0x50
 4128 0163 9F       		.byte	0x9f
 4129 0164 00000000 		.4byte	0
 4130 0168 00000000 		.4byte	0
 4131              	.LLST12:
 4132 016c 00000000 		.4byte	.LVL30
 4133 0170 04000000 		.4byte	.LVL31
 4134 0174 0100     		.2byte	0x1
 4135 0176 50       		.byte	0x50
 4136 0177 04000000 		.4byte	.LVL31
 4137 017b 14000000 		.4byte	.LFE23
 4138 017f 0400     		.2byte	0x4
 4139 0181 F3       		.byte	0xf3
 4140 0182 01       		.uleb128 0x1
 4141 0183 50       		.byte	0x50
 4142 0184 9F       		.byte	0x9f
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 129


 4143 0185 00000000 		.4byte	0
 4144 0189 00000000 		.4byte	0
 4145              	.LLST13:
 4146 018d 00000000 		.4byte	.LVL32
 4147 0191 04000000 		.4byte	.LVL33
 4148 0195 0100     		.2byte	0x1
 4149 0197 50       		.byte	0x50
 4150 0198 04000000 		.4byte	.LVL33
 4151 019c 14000000 		.4byte	.LFE24
 4152 01a0 0400     		.2byte	0x4
 4153 01a2 F3       		.byte	0xf3
 4154 01a3 01       		.uleb128 0x1
 4155 01a4 50       		.byte	0x50
 4156 01a5 9F       		.byte	0x9f
 4157 01a6 00000000 		.4byte	0
 4158 01aa 00000000 		.4byte	0
 4159              	.LLST14:
 4160 01ae 00000000 		.4byte	.LVL34
 4161 01b2 04000000 		.4byte	.LVL35
 4162 01b6 0100     		.2byte	0x1
 4163 01b8 50       		.byte	0x50
 4164 01b9 04000000 		.4byte	.LVL35
 4165 01bd 14000000 		.4byte	.LFE25
 4166 01c1 0400     		.2byte	0x4
 4167 01c3 F3       		.byte	0xf3
 4168 01c4 01       		.uleb128 0x1
 4169 01c5 50       		.byte	0x50
 4170 01c6 9F       		.byte	0x9f
 4171 01c7 00000000 		.4byte	0
 4172 01cb 00000000 		.4byte	0
 4173              	.LLST15:
 4174 01cf 00000000 		.4byte	.LVL37
 4175 01d3 0C000000 		.4byte	.LVL39
 4176 01d7 0100     		.2byte	0x1
 4177 01d9 50       		.byte	0x50
 4178 01da 0C000000 		.4byte	.LVL39
 4179 01de 20000000 		.4byte	.LFE15
 4180 01e2 0400     		.2byte	0x4
 4181 01e4 F3       		.byte	0xf3
 4182 01e5 01       		.uleb128 0x1
 4183 01e6 50       		.byte	0x50
 4184 01e7 9F       		.byte	0x9f
 4185 01e8 00000000 		.4byte	0
 4186 01ec 00000000 		.4byte	0
 4187              	.LLST16:
 4188 01f0 00000000 		.4byte	.LVL37
 4189 01f4 0F000000 		.4byte	.LVL40-1
 4190 01f8 0100     		.2byte	0x1
 4191 01fa 51       		.byte	0x51
 4192 01fb 0F000000 		.4byte	.LVL40-1
 4193 01ff 1E000000 		.4byte	.LVL42
 4194 0203 0100     		.2byte	0x1
 4195 0205 55       		.byte	0x55
 4196 0206 1E000000 		.4byte	.LVL42
 4197 020a 20000000 		.4byte	.LFE15
 4198 020e 0400     		.2byte	0x4
 4199 0210 F3       		.byte	0xf3
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 130


 4200 0211 01       		.uleb128 0x1
 4201 0212 51       		.byte	0x51
 4202 0213 9F       		.byte	0x9f
 4203 0214 00000000 		.4byte	0
 4204 0218 00000000 		.4byte	0
 4205              	.LLST17:
 4206 021c 00000000 		.4byte	.LVL43
 4207 0220 0A000000 		.4byte	.LVL45
 4208 0224 0100     		.2byte	0x1
 4209 0226 50       		.byte	0x50
 4210 0227 0A000000 		.4byte	.LVL45
 4211 022b 1C000000 		.4byte	.LFE16
 4212 022f 0400     		.2byte	0x4
 4213 0231 F3       		.byte	0xf3
 4214 0232 01       		.uleb128 0x1
 4215 0233 50       		.byte	0x50
 4216 0234 9F       		.byte	0x9f
 4217 0235 00000000 		.4byte	0
 4218 0239 00000000 		.4byte	0
 4219              	.LLST18:
 4220 023d 00000000 		.4byte	.LVL47
 4221 0241 0C000000 		.4byte	.LVL49
 4222 0245 0100     		.2byte	0x1
 4223 0247 50       		.byte	0x50
 4224 0248 0C000000 		.4byte	.LVL49
 4225 024c 24000000 		.4byte	.LFE17
 4226 0250 0400     		.2byte	0x4
 4227 0252 F3       		.byte	0xf3
 4228 0253 01       		.uleb128 0x1
 4229 0254 50       		.byte	0x50
 4230 0255 9F       		.byte	0x9f
 4231 0256 00000000 		.4byte	0
 4232 025a 00000000 		.4byte	0
 4233              	.LLST19:
 4234 025e 00000000 		.4byte	.LVL47
 4235 0262 0F000000 		.4byte	.LVL50-1
 4236 0266 0100     		.2byte	0x1
 4237 0268 51       		.byte	0x51
 4238 0269 0F000000 		.4byte	.LVL50-1
 4239 026d 1C000000 		.4byte	.LVL52
 4240 0271 0100     		.2byte	0x1
 4241 0273 55       		.byte	0x55
 4242 0274 1C000000 		.4byte	.LVL52
 4243 0278 24000000 		.4byte	.LFE17
 4244 027c 0400     		.2byte	0x4
 4245 027e F3       		.byte	0xf3
 4246 027f 01       		.uleb128 0x1
 4247 0280 51       		.byte	0x51
 4248 0281 9F       		.byte	0x9f
 4249 0282 00000000 		.4byte	0
 4250 0286 00000000 		.4byte	0
 4251              	.LLST20:
 4252 028a 00000000 		.4byte	.LVL53
 4253 028e 0A000000 		.4byte	.LVL55
 4254 0292 0100     		.2byte	0x1
 4255 0294 50       		.byte	0x50
 4256 0295 0A000000 		.4byte	.LVL55
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 131


 4257 0299 20000000 		.4byte	.LFE18
 4258 029d 0400     		.2byte	0x4
 4259 029f F3       		.byte	0xf3
 4260 02a0 01       		.uleb128 0x1
 4261 02a1 50       		.byte	0x50
 4262 02a2 9F       		.byte	0x9f
 4263 02a3 00000000 		.4byte	0
 4264 02a7 00000000 		.4byte	0
 4265              	.LLST21:
 4266 02ab 00000000 		.4byte	.LVL57
 4267 02af 0C000000 		.4byte	.LVL58
 4268 02b3 0100     		.2byte	0x1
 4269 02b5 50       		.byte	0x50
 4270 02b6 0C000000 		.4byte	.LVL58
 4271 02ba 4C000000 		.4byte	.LFE19
 4272 02be 0400     		.2byte	0x4
 4273 02c0 F3       		.byte	0xf3
 4274 02c1 01       		.uleb128 0x1
 4275 02c2 50       		.byte	0x50
 4276 02c3 9F       		.byte	0x9f
 4277 02c4 00000000 		.4byte	0
 4278 02c8 00000000 		.4byte	0
 4279              	.LLST22:
 4280 02cc 00000000 		.4byte	.LVL57
 4281 02d0 0F000000 		.4byte	.LVL59-1
 4282 02d4 0100     		.2byte	0x1
 4283 02d6 51       		.byte	0x51
 4284 02d7 0F000000 		.4byte	.LVL59-1
 4285 02db 4C000000 		.4byte	.LFE19
 4286 02df 0400     		.2byte	0x4
 4287 02e1 F3       		.byte	0xf3
 4288 02e2 01       		.uleb128 0x1
 4289 02e3 51       		.byte	0x51
 4290 02e4 9F       		.byte	0x9f
 4291 02e5 00000000 		.4byte	0
 4292 02e9 00000000 		.4byte	0
 4293              	.LLST23:
 4294 02ed 26000000 		.4byte	.LVL62
 4295 02f1 43000000 		.4byte	.LVL67-1
 4296 02f5 0100     		.2byte	0x1
 4297 02f7 50       		.byte	0x50
 4298 02f8 00000000 		.4byte	0
 4299 02fc 00000000 		.4byte	0
 4300              	.LLST24:
 4301 0300 22000000 		.4byte	.LVL61
 4302 0304 3C000000 		.4byte	.LVL65
 4303 0308 0100     		.2byte	0x1
 4304 030a 55       		.byte	0x55
 4305 030b 00000000 		.4byte	0
 4306 030f 00000000 		.4byte	0
 4307              	.LLST25:
 4308 0313 32000000 		.4byte	.LVL63
 4309 0317 3E000000 		.4byte	.LVL66
 4310 031b 0100     		.2byte	0x1
 4311 031d 53       		.byte	0x53
 4312 031e 3E000000 		.4byte	.LVL66
 4313 0322 44000000 		.4byte	.LVL68
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 132


 4314 0326 0100     		.2byte	0x1
 4315 0328 55       		.byte	0x55
 4316 0329 00000000 		.4byte	0
 4317 032d 00000000 		.4byte	0
 4318              	.LLST26:
 4319 0331 00000000 		.4byte	.LVL69
 4320 0335 0A000000 		.4byte	.LVL70
 4321 0339 0100     		.2byte	0x1
 4322 033b 50       		.byte	0x50
 4323 033c 0A000000 		.4byte	.LVL70
 4324 0340 2C000000 		.4byte	.LFE20
 4325 0344 0400     		.2byte	0x4
 4326 0346 F3       		.byte	0xf3
 4327 0347 01       		.uleb128 0x1
 4328 0348 50       		.byte	0x50
 4329 0349 9F       		.byte	0x9f
 4330 034a 00000000 		.4byte	0
 4331 034e 00000000 		.4byte	0
 4332              	.LLST27:
 4333 0352 24000000 		.4byte	.LVL72
 4334 0356 26000000 		.4byte	.LVL73
 4335 035a 0100     		.2byte	0x1
 4336 035c 50       		.byte	0x50
 4337 035d 00000000 		.4byte	0
 4338 0361 00000000 		.4byte	0
 4339              	.LLST28:
 4340 0365 00000000 		.4byte	.LVL74
 4341 0369 06000000 		.4byte	.LVL75
 4342 036d 0100     		.2byte	0x1
 4343 036f 50       		.byte	0x50
 4344 0370 06000000 		.4byte	.LVL75
 4345 0374 26000000 		.4byte	.LVL79
 4346 0378 0100     		.2byte	0x1
 4347 037a 54       		.byte	0x54
 4348 037b 00000000 		.4byte	0
 4349 037f 00000000 		.4byte	0
 4350              	.LLST29:
 4351 0383 2C000000 		.4byte	.LVL84
 4352 0387 56000000 		.4byte	.LVL88
 4353 038b 0100     		.2byte	0x1
 4354 038d 52       		.byte	0x52
 4355 038e 5A000000 		.4byte	.LVL90
 4356 0392 62000000 		.4byte	.LVL91
 4357 0396 0100     		.2byte	0x1
 4358 0398 52       		.byte	0x52
 4359 0399 62000000 		.4byte	.LVL91
 4360 039d 72000000 		.4byte	.LVL95
 4361 03a1 0300     		.2byte	0x3
 4362 03a3 72       		.byte	0x72
 4363 03a4 1A       		.sleb128 26
 4364 03a5 9F       		.byte	0x9f
 4365 03a6 00000000 		.4byte	0
 4366 03aa 00000000 		.4byte	0
 4367              	.LLST30:
 4368 03ae 12000000 		.4byte	.LVL83
 4369 03b2 9E000000 		.4byte	.LVL100
 4370 03b6 0100     		.2byte	0x1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 133


 4371 03b8 54       		.byte	0x54
 4372 03b9 00000000 		.4byte	0
 4373 03bd 00000000 		.4byte	0
 4374              	.LLST31:
 4375 03c1 34000000 		.4byte	.LVL85
 4376 03c5 4A000000 		.4byte	.LVL86
 4377 03c9 0100     		.2byte	0x1
 4378 03cb 51       		.byte	0x51
 4379 03cc 4A000000 		.4byte	.LVL86
 4380 03d0 50000000 		.4byte	.LVL87
 4381 03d4 0100     		.2byte	0x1
 4382 03d6 53       		.byte	0x53
 4383 03d7 50000000 		.4byte	.LVL87
 4384 03db 58000000 		.4byte	.LVL89
 4385 03df 0100     		.2byte	0x1
 4386 03e1 51       		.byte	0x51
 4387 03e2 58000000 		.4byte	.LVL89
 4388 03e6 5A000000 		.4byte	.LVL90
 4389 03ea 0100     		.2byte	0x1
 4390 03ec 53       		.byte	0x53
 4391 03ed 5A000000 		.4byte	.LVL90
 4392 03f1 72000000 		.4byte	.LVL95
 4393 03f5 0100     		.2byte	0x1
 4394 03f7 51       		.byte	0x51
 4395 03f8 72000000 		.4byte	.LVL95
 4396 03fc 7A000000 		.4byte	.LVL96
 4397 0400 0100     		.2byte	0x1
 4398 0402 53       		.byte	0x53
 4399 0403 7A000000 		.4byte	.LVL96
 4400 0407 7C000000 		.4byte	.LVL97
 4401 040b 0200     		.2byte	0x2
 4402 040d 72       		.byte	0x72
 4403 040e 00       		.sleb128 0
 4404 040f 00000000 		.4byte	0
 4405 0413 00000000 		.4byte	0
 4406              	.LLST32:
 4407 0417 04000000 		.4byte	.LVL80
 4408 041b 68000000 		.4byte	.LVL92
 4409 041f 0200     		.2byte	0x2
 4410 0421 30       		.byte	0x30
 4411 0422 9F       		.byte	0x9f
 4412 0423 6E000000 		.4byte	.LVL93
 4413 0427 70000000 		.4byte	.LVL94
 4414 042b 0100     		.2byte	0x1
 4415 042d 53       		.byte	0x53
 4416 042e 00000000 		.4byte	0
 4417 0432 00000000 		.4byte	0
 4418              	.LLST33:
 4419 0436 00000000 		.4byte	.LVL101
 4420 043a 25000000 		.4byte	.LVL103-1
 4421 043e 0100     		.2byte	0x1
 4422 0440 50       		.byte	0x50
 4423 0441 25000000 		.4byte	.LVL103-1
 4424 0445 A0000000 		.4byte	.LVL116
 4425 0449 0100     		.2byte	0x1
 4426 044b 54       		.byte	0x54
 4427 044c A0000000 		.4byte	.LVL116
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 134


 4428 0450 B6000000 		.4byte	.LVL119
 4429 0454 0400     		.2byte	0x4
 4430 0456 F3       		.byte	0xf3
 4431 0457 01       		.uleb128 0x1
 4432 0458 50       		.byte	0x50
 4433 0459 9F       		.byte	0x9f
 4434 045a B6000000 		.4byte	.LVL119
 4435 045e B8000000 		.4byte	.LVL120
 4436 0462 0100     		.2byte	0x1
 4437 0464 50       		.byte	0x50
 4438 0465 B8000000 		.4byte	.LVL120
 4439 0469 BC000000 		.4byte	.LVL121
 4440 046d 0100     		.2byte	0x1
 4441 046f 54       		.byte	0x54
 4442 0470 BC000000 		.4byte	.LVL121
 4443 0474 D8000000 		.4byte	.LFE10
 4444 0478 0400     		.2byte	0x4
 4445 047a F3       		.byte	0xf3
 4446 047b 01       		.uleb128 0x1
 4447 047c 50       		.byte	0x50
 4448 047d 9F       		.byte	0x9f
 4449 047e 00000000 		.4byte	0
 4450 0482 00000000 		.4byte	0
 4451              	.LLST34:
 4452 0486 28000000 		.4byte	.LVL104
 4453 048a 44000000 		.4byte	.LVL110
 4454 048e 0200     		.2byte	0x2
 4455 0490 91       		.byte	0x91
 4456 0491 64       		.sleb128 -28
 4457 0492 00000000 		.4byte	0
 4458 0496 00000000 		.4byte	0
 4459              	.LLST35:
 4460 049a 4C000000 		.4byte	.LVL111
 4461 049e 54000000 		.4byte	.LVL112
 4462 04a2 0100     		.2byte	0x1
 4463 04a4 53       		.byte	0x53
 4464 04a5 54000000 		.4byte	.LVL112
 4465 04a9 58000000 		.4byte	.LVL113
 4466 04ad 0700     		.2byte	0x7
 4467 04af 0C       		.byte	0xc
 4468 04b0 0C0F0340 		.4byte	0x40030f0c
 4469 04b4 06       		.byte	0x6
 4470 04b5 9F       		.byte	0x9f
 4471 04b6 00000000 		.4byte	0
 4472 04ba 00000000 		.4byte	0
 4473              	.LLST36:
 4474 04be 06000000 		.4byte	.LVL102
 4475 04c2 30000000 		.4byte	.LVL106
 4476 04c6 0200     		.2byte	0x2
 4477 04c8 30       		.byte	0x30
 4478 04c9 9F       		.byte	0x9f
 4479 04ca 30000000 		.4byte	.LVL106
 4480 04ce 38000000 		.4byte	.LVL108
 4481 04d2 0200     		.2byte	0x2
 4482 04d4 31       		.byte	0x31
 4483 04d5 9F       		.byte	0x9f
 4484 04d6 38000000 		.4byte	.LVL108
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 135


 4485 04da 3A000000 		.4byte	.LVL109
 4486 04de 0200     		.2byte	0x2
 4487 04e0 30       		.byte	0x30
 4488 04e1 9F       		.byte	0x9f
 4489 04e2 3A000000 		.4byte	.LVL109
 4490 04e6 B6000000 		.4byte	.LVL119
 4491 04ea 0100     		.2byte	0x1
 4492 04ec 56       		.byte	0x56
 4493 04ed B6000000 		.4byte	.LVL119
 4494 04f1 BC000000 		.4byte	.LVL121
 4495 04f5 0200     		.2byte	0x2
 4496 04f7 30       		.byte	0x30
 4497 04f8 9F       		.byte	0x9f
 4498 04f9 00000000 		.4byte	0
 4499 04fd 00000000 		.4byte	0
 4500              	.LLST37:
 4501 0501 00000000 		.4byte	.LVL122
 4502 0505 08000000 		.4byte	.LVL123
 4503 0509 0100     		.2byte	0x1
 4504 050b 50       		.byte	0x50
 4505 050c 08000000 		.4byte	.LVL123
 4506 0510 14000000 		.4byte	.LFE29
 4507 0514 0400     		.2byte	0x4
 4508 0516 F3       		.byte	0xf3
 4509 0517 01       		.uleb128 0x1
 4510 0518 50       		.byte	0x50
 4511 0519 9F       		.byte	0x9f
 4512 051a 00000000 		.4byte	0
 4513 051e 00000000 		.4byte	0
 4514              	.LLST38:
 4515 0522 00000000 		.4byte	.LVL125
 4516 0526 1A000000 		.4byte	.LVL126
 4517 052a 0100     		.2byte	0x1
 4518 052c 50       		.byte	0x50
 4519 052d 1A000000 		.4byte	.LVL126
 4520 0531 4C000000 		.4byte	.LFE30
 4521 0535 0400     		.2byte	0x4
 4522 0537 F3       		.byte	0xf3
 4523 0538 01       		.uleb128 0x1
 4524 0539 50       		.byte	0x50
 4525 053a 9F       		.byte	0x9f
 4526 053b 00000000 		.4byte	0
 4527 053f 00000000 		.4byte	0
 4528              	.LLST39:
 4529 0543 00000000 		.4byte	.LVL130
 4530 0547 02000000 		.4byte	.LVL131
 4531 054b 0100     		.2byte	0x1
 4532 054d 50       		.byte	0x50
 4533 054e 02000000 		.4byte	.LVL131
 4534 0552 10000000 		.4byte	.LFE37
 4535 0556 0400     		.2byte	0x4
 4536 0558 F3       		.byte	0xf3
 4537 0559 01       		.uleb128 0x1
 4538 055a 50       		.byte	0x50
 4539 055b 9F       		.byte	0x9f
 4540 055c 00000000 		.4byte	0
 4541 0560 00000000 		.4byte	0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 136


 4542              	.LLST40:
 4543 0564 0C000000 		.4byte	.LVL134
 4544 0568 1C000000 		.4byte	.LVL137
 4545 056c 0100     		.2byte	0x1
 4546 056e 54       		.byte	0x54
 4547 056f 1E000000 		.4byte	.LVL138
 4548 0573 22000000 		.4byte	.LVL139
 4549 0577 0100     		.2byte	0x1
 4550 0579 54       		.byte	0x54
 4551 057a 00000000 		.4byte	0
 4552 057e 00000000 		.4byte	0
 4553              	.LLST41:
 4554 0582 02000000 		.4byte	.LVL140
 4555 0586 06000000 		.4byte	.LVL141
 4556 058a 0200     		.2byte	0x2
 4557 058c 30       		.byte	0x30
 4558 058d 9F       		.byte	0x9f
 4559 058e 06000000 		.4byte	.LVL141
 4560 0592 1B000000 		.4byte	.LVL143-1
 4561 0596 0100     		.2byte	0x1
 4562 0598 53       		.byte	0x53
 4563 0599 00000000 		.4byte	0
 4564 059d 00000000 		.4byte	0
 4565              	.LLST42:
 4566 05a1 00000000 		.4byte	.LVL151
 4567 05a5 06000000 		.4byte	.LVL152
 4568 05a9 0100     		.2byte	0x1
 4569 05ab 50       		.byte	0x50
 4570 05ac 06000000 		.4byte	.LVL152
 4571 05b0 10000000 		.4byte	.LFE44
 4572 05b4 0400     		.2byte	0x4
 4573 05b6 F3       		.byte	0xf3
 4574 05b7 01       		.uleb128 0x1
 4575 05b8 50       		.byte	0x50
 4576 05b9 9F       		.byte	0x9f
 4577 05ba 00000000 		.4byte	0
 4578 05be 00000000 		.4byte	0
 4579              	.LLST43:
 4580 05c2 00000000 		.4byte	.LVL153
 4581 05c6 02000000 		.4byte	.LVL154
 4582 05ca 0100     		.2byte	0x1
 4583 05cc 50       		.byte	0x50
 4584 05cd 02000000 		.4byte	.LVL154
 4585 05d1 0C000000 		.4byte	.LFE45
 4586 05d5 0400     		.2byte	0x4
 4587 05d7 F3       		.byte	0xf3
 4588 05d8 01       		.uleb128 0x1
 4589 05d9 50       		.byte	0x50
 4590 05da 9F       		.byte	0x9f
 4591 05db 00000000 		.4byte	0
 4592 05df 00000000 		.4byte	0
 4593              		.section	.debug_aranges,"",%progbits
 4594 0000 8C010000 		.4byte	0x18c
 4595 0004 0200     		.2byte	0x2
 4596 0006 00000000 		.4byte	.Ldebug_info0
 4597 000a 04       		.byte	0x4
 4598 000b 00       		.byte	0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 137


 4599 000c 0000     		.2byte	0
 4600 000e 0000     		.2byte	0
 4601 0010 00000000 		.4byte	.LFB1
 4602 0014 14000000 		.4byte	.LFE1-.LFB1
 4603 0018 00000000 		.4byte	.LFB4
 4604 001c 14000000 		.4byte	.LFE4-.LFB4
 4605 0020 00000000 		.4byte	.LFB2
 4606 0024 18000000 		.4byte	.LFE2-.LFB2
 4607 0028 00000000 		.4byte	.LFB5
 4608 002c 14000000 		.4byte	.LFE5-.LFB5
 4609 0030 00000000 		.4byte	.LFB6
 4610 0034 20000000 		.4byte	.LFE6-.LFB6
 4611 0038 00000000 		.4byte	.LFB7
 4612 003c 34000000 		.4byte	.LFE7-.LFB7
 4613 0040 00000000 		.4byte	.LFB8
 4614 0044 1C000000 		.4byte	.LFE8-.LFB8
 4615 0048 00000000 		.4byte	.LFB9
 4616 004c 24000000 		.4byte	.LFE9-.LFB9
 4617 0050 00000000 		.4byte	.LFB11
 4618 0054 24000000 		.4byte	.LFE11-.LFB11
 4619 0058 00000000 		.4byte	.LFB12
 4620 005c 14000000 		.4byte	.LFE12-.LFB12
 4621 0060 00000000 		.4byte	.LFB13
 4622 0064 10000000 		.4byte	.LFE13-.LFB13
 4623 0068 00000000 		.4byte	.LFB14
 4624 006c 0C000000 		.4byte	.LFE14-.LFB14
 4625 0070 00000000 		.4byte	.LFB21
 4626 0074 14000000 		.4byte	.LFE21-.LFB21
 4627 0078 00000000 		.4byte	.LFB22
 4628 007c 18000000 		.4byte	.LFE22-.LFB22
 4629 0080 00000000 		.4byte	.LFB23
 4630 0084 14000000 		.4byte	.LFE23-.LFB23
 4631 0088 00000000 		.4byte	.LFB24
 4632 008c 14000000 		.4byte	.LFE24-.LFB24
 4633 0090 00000000 		.4byte	.LFB25
 4634 0094 14000000 		.4byte	.LFE25-.LFB25
 4635 0098 00000000 		.4byte	.LFB26
 4636 009c 04000000 		.4byte	.LFE26-.LFB26
 4637 00a0 00000000 		.4byte	.LFB15
 4638 00a4 20000000 		.4byte	.LFE15-.LFB15
 4639 00a8 00000000 		.4byte	.LFB16
 4640 00ac 1C000000 		.4byte	.LFE16-.LFB16
 4641 00b0 00000000 		.4byte	.LFB17
 4642 00b4 24000000 		.4byte	.LFE17-.LFB17
 4643 00b8 00000000 		.4byte	.LFB18
 4644 00bc 20000000 		.4byte	.LFE18-.LFB18
 4645 00c0 00000000 		.4byte	.LFB19
 4646 00c4 4C000000 		.4byte	.LFE19-.LFB19
 4647 00c8 00000000 		.4byte	.LFB20
 4648 00cc 2C000000 		.4byte	.LFE20-.LFB20
 4649 00d0 00000000 		.4byte	.LFB27
 4650 00d4 18000000 		.4byte	.LFE27-.LFB27
 4651 00d8 00000000 		.4byte	.LFB28
 4652 00dc 30000000 		.4byte	.LFE28-.LFB28
 4653 00e0 00000000 		.4byte	.LFB3
 4654 00e4 CC000000 		.4byte	.LFE3-.LFB3
 4655 00e8 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 138


 4656 00ec D8000000 		.4byte	.LFE10-.LFB10
 4657 00f0 00000000 		.4byte	.LFB29
 4658 00f4 14000000 		.4byte	.LFE29-.LFB29
 4659 00f8 00000000 		.4byte	.LFB30
 4660 00fc 4C000000 		.4byte	.LFE30-.LFB30
 4661 0100 00000000 		.4byte	.LFB34
 4662 0104 10000000 		.4byte	.LFE34-.LFB34
 4663 0108 00000000 		.4byte	.LFB35
 4664 010c 10000000 		.4byte	.LFE35-.LFB35
 4665 0110 00000000 		.4byte	.LFB33
 4666 0114 18000000 		.4byte	.LFE33-.LFB33
 4667 0118 00000000 		.4byte	.LFB36
 4668 011c 10000000 		.4byte	.LFE36-.LFB36
 4669 0120 00000000 		.4byte	.LFB37
 4670 0124 10000000 		.4byte	.LFE37-.LFB37
 4671 0128 00000000 		.4byte	.LFB38
 4672 012c 10000000 		.4byte	.LFE38-.LFB38
 4673 0130 00000000 		.4byte	.LFB39
 4674 0134 10000000 		.4byte	.LFE39-.LFB39
 4675 0138 00000000 		.4byte	.LFB40
 4676 013c 20000000 		.4byte	.LFE40-.LFB40
 4677 0140 00000000 		.4byte	.LFB41
 4678 0144 10000000 		.4byte	.LFE41-.LFB41
 4679 0148 00000000 		.4byte	.LFB42
 4680 014c 10000000 		.4byte	.LFE42-.LFB42
 4681 0150 00000000 		.4byte	.LFB46
 4682 0154 28000000 		.4byte	.LFE46-.LFB46
 4683 0158 00000000 		.4byte	.LFB43
 4684 015c 0C000000 		.4byte	.LFE43-.LFB43
 4685 0160 00000000 		.4byte	.LFB32
 4686 0164 4C000000 		.4byte	.LFE32-.LFB32
 4687 0168 00000000 		.4byte	.LFB31
 4688 016c 20000000 		.4byte	.LFE31-.LFB31
 4689 0170 00000000 		.4byte	.LFB44
 4690 0174 10000000 		.4byte	.LFE44-.LFB44
 4691 0178 00000000 		.4byte	.LFB45
 4692 017c 0C000000 		.4byte	.LFE45-.LFB45
 4693 0180 00000000 		.4byte	.LFB47
 4694 0184 70000000 		.4byte	.LFE47-.LFB47
 4695 0188 00000000 		.4byte	0
 4696 018c 00000000 		.4byte	0
 4697              		.section	.debug_ranges,"",%progbits
 4698              	.Ldebug_ranges0:
 4699 0000 00000000 		.4byte	.LFB1
 4700 0004 14000000 		.4byte	.LFE1
 4701 0008 00000000 		.4byte	.LFB4
 4702 000c 14000000 		.4byte	.LFE4
 4703 0010 00000000 		.4byte	.LFB2
 4704 0014 18000000 		.4byte	.LFE2
 4705 0018 00000000 		.4byte	.LFB5
 4706 001c 14000000 		.4byte	.LFE5
 4707 0020 00000000 		.4byte	.LFB6
 4708 0024 20000000 		.4byte	.LFE6
 4709 0028 00000000 		.4byte	.LFB7
 4710 002c 34000000 		.4byte	.LFE7
 4711 0030 00000000 		.4byte	.LFB8
 4712 0034 1C000000 		.4byte	.LFE8
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 139


 4713 0038 00000000 		.4byte	.LFB9
 4714 003c 24000000 		.4byte	.LFE9
 4715 0040 00000000 		.4byte	.LFB11
 4716 0044 24000000 		.4byte	.LFE11
 4717 0048 00000000 		.4byte	.LFB12
 4718 004c 14000000 		.4byte	.LFE12
 4719 0050 00000000 		.4byte	.LFB13
 4720 0054 10000000 		.4byte	.LFE13
 4721 0058 00000000 		.4byte	.LFB14
 4722 005c 0C000000 		.4byte	.LFE14
 4723 0060 00000000 		.4byte	.LFB21
 4724 0064 14000000 		.4byte	.LFE21
 4725 0068 00000000 		.4byte	.LFB22
 4726 006c 18000000 		.4byte	.LFE22
 4727 0070 00000000 		.4byte	.LFB23
 4728 0074 14000000 		.4byte	.LFE23
 4729 0078 00000000 		.4byte	.LFB24
 4730 007c 14000000 		.4byte	.LFE24
 4731 0080 00000000 		.4byte	.LFB25
 4732 0084 14000000 		.4byte	.LFE25
 4733 0088 00000000 		.4byte	.LFB26
 4734 008c 04000000 		.4byte	.LFE26
 4735 0090 00000000 		.4byte	.LFB15
 4736 0094 20000000 		.4byte	.LFE15
 4737 0098 00000000 		.4byte	.LFB16
 4738 009c 1C000000 		.4byte	.LFE16
 4739 00a0 00000000 		.4byte	.LFB17
 4740 00a4 24000000 		.4byte	.LFE17
 4741 00a8 00000000 		.4byte	.LFB18
 4742 00ac 20000000 		.4byte	.LFE18
 4743 00b0 00000000 		.4byte	.LFB19
 4744 00b4 4C000000 		.4byte	.LFE19
 4745 00b8 00000000 		.4byte	.LFB20
 4746 00bc 2C000000 		.4byte	.LFE20
 4747 00c0 00000000 		.4byte	.LFB27
 4748 00c4 18000000 		.4byte	.LFE27
 4749 00c8 00000000 		.4byte	.LFB28
 4750 00cc 30000000 		.4byte	.LFE28
 4751 00d0 00000000 		.4byte	.LFB3
 4752 00d4 CC000000 		.4byte	.LFE3
 4753 00d8 00000000 		.4byte	.LFB10
 4754 00dc D8000000 		.4byte	.LFE10
 4755 00e0 00000000 		.4byte	.LFB29
 4756 00e4 14000000 		.4byte	.LFE29
 4757 00e8 00000000 		.4byte	.LFB30
 4758 00ec 4C000000 		.4byte	.LFE30
 4759 00f0 00000000 		.4byte	.LFB34
 4760 00f4 10000000 		.4byte	.LFE34
 4761 00f8 00000000 		.4byte	.LFB35
 4762 00fc 10000000 		.4byte	.LFE35
 4763 0100 00000000 		.4byte	.LFB33
 4764 0104 18000000 		.4byte	.LFE33
 4765 0108 00000000 		.4byte	.LFB36
 4766 010c 10000000 		.4byte	.LFE36
 4767 0110 00000000 		.4byte	.LFB37
 4768 0114 10000000 		.4byte	.LFE37
 4769 0118 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 140


 4770 011c 10000000 		.4byte	.LFE38
 4771 0120 00000000 		.4byte	.LFB39
 4772 0124 10000000 		.4byte	.LFE39
 4773 0128 00000000 		.4byte	.LFB40
 4774 012c 20000000 		.4byte	.LFE40
 4775 0130 00000000 		.4byte	.LFB41
 4776 0134 10000000 		.4byte	.LFE41
 4777 0138 00000000 		.4byte	.LFB42
 4778 013c 10000000 		.4byte	.LFE42
 4779 0140 00000000 		.4byte	.LFB46
 4780 0144 28000000 		.4byte	.LFE46
 4781 0148 00000000 		.4byte	.LFB43
 4782 014c 0C000000 		.4byte	.LFE43
 4783 0150 00000000 		.4byte	.LFB32
 4784 0154 4C000000 		.4byte	.LFE32
 4785 0158 00000000 		.4byte	.LFB31
 4786 015c 20000000 		.4byte	.LFE31
 4787 0160 00000000 		.4byte	.LFB44
 4788 0164 10000000 		.4byte	.LFE44
 4789 0168 00000000 		.4byte	.LFB45
 4790 016c 0C000000 		.4byte	.LFE45
 4791 0170 00000000 		.4byte	.LFB47
 4792 0174 70000000 		.4byte	.LFE47
 4793 0178 00000000 		.4byte	0
 4794 017c 00000000 		.4byte	0
 4795              		.section	.debug_line,"",%progbits
 4796              	.Ldebug_line0:
 4797 0000 C3040000 		.section	.debug_str,"MS",%progbits,1
 4797      02006700 
 4797      00000201 
 4797      FB0E0D00 
 4797      01010101 
 4798              	.LASF51:
 4799 0000 72616D56 		.ascii	"ramVectorTable\000"
 4799      6563746F 
 4799      72546162 
 4799      6C6500
 4800              	.LASF10:
 4801 000f 75696E74 		.ascii	"uint16\000"
 4801      313600
 4802              	.LASF109:
 4803 0016 443A5C6C 		.ascii	"D:\\local_svn\\AYBR3000\\AYBR3000_V2.0\\AYBR3000\\A"
 4803      6F63616C 
 4803      5F73766E 
 4803      5C415942 
 4803      52333030 
 4804 0044 59425233 		.ascii	"YBR3000.cydsn\000"
 4804      3030302E 
 4804      63796473 
 4804      6E00
 4805              	.LASF23:
 4806 0052 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4806      73436C6B 
 4806      57726974 
 4806      65486663 
 4806      6C6B4469 
 4807              	.LASF102:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 141


 4808 006b 43795379 		.ascii	"CySysClkPumpConfig\000"
 4808      73436C6B 
 4808      50756D70 
 4808      436F6E66 
 4808      696700
 4809              	.LASF26:
 4810 007e 43795379 		.ascii	"CySysEnablePumpClock\000"
 4810      73456E61 
 4810      626C6550 
 4810      756D7043 
 4810      6C6F636B 
 4811              	.LASF91:
 4812 0093 72657456 		.ascii	"retVal\000"
 4812      616C00
 4813              	.LASF37:
 4814 009a 43794469 		.ascii	"CyDisableInts\000"
 4814      7361626C 
 4814      65496E74 
 4814      7300
 4815              	.LASF7:
 4816 00a8 6C6F6E67 		.ascii	"long long unsigned int\000"
 4816      206C6F6E 
 4816      6720756E 
 4816      7369676E 
 4816      65642069 
 4817              	.LASF100:
 4818 00bf 43795379 		.ascii	"CySysTickInitVar\000"
 4818      73546963 
 4818      6B496E69 
 4818      74566172 
 4818      00
 4819              	.LASF39:
 4820 00d0 4379456E 		.ascii	"CyEnableInts\000"
 4820      61626C65 
 4820      496E7473 
 4820      00
 4821              	.LASF106:
 4822 00dd 43795379 		.ascii	"CySysClkWcoEnabled\000"
 4822      73436C6B 
 4822      57636F45 
 4822      6E61626C 
 4822      656400
 4823              	.LASF60:
 4824 00f0 4379536F 		.ascii	"CySoftwareReset\000"
 4824      66747761 
 4824      72655265 
 4824      73657400 
 4825              	.LASF75:
 4826 0100 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4826      73546963 
 4826      6B456E61 
 4826      626C6549 
 4826      6E746572 
 4827              	.LASF43:
 4828 0119 4379496E 		.ascii	"CyIntGetState\000"
 4828      74476574 
 4828      53746174 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 142


 4828      6500
 4829              	.LASF6:
 4830 0127 6C6F6E67 		.ascii	"long long int\000"
 4830      206C6F6E 
 4830      6720696E 
 4830      7400
 4831              	.LASF0:
 4832 0135 7369676E 		.ascii	"signed char\000"
 4832      65642063 
 4832      68617200 
 4833              	.LASF64:
 4834 0141 66726571 		.ascii	"freq\000"
 4834      00
 4835              	.LASF73:
 4836 0146 43794465 		.ascii	"CyDelayFreq\000"
 4836      6C617946 
 4836      72657100 
 4837              	.LASF24:
 4838 0152 696E7465 		.ascii	"interruptState\000"
 4838      72727570 
 4838      74537461 
 4838      746500
 4839              	.LASF66:
 4840 0161 6C664C69 		.ascii	"lfLimit\000"
 4840      6D697400 
 4841              	.LASF80:
 4842 0169 43795379 		.ascii	"CySysTickGetReload\000"
 4842      73546963 
 4842      6B476574 
 4842      52656C6F 
 4842      616400
 4843              	.LASF79:
 4844 017c 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 4844      73436C6B 
 4844      496D6F47 
 4844      65745763 
 4844      6F4C6F63 
 4845              	.LASF70:
 4846 0192 77636F4C 		.ascii	"wcoLock\000"
 4846      6F636B00 
 4847              	.LASF4:
 4848 019a 6C6F6E67 		.ascii	"long int\000"
 4848      20696E74 
 4848      00
 4849              	.LASF44:
 4850 01a3 4379496E 		.ascii	"CyIntDisable\000"
 4850      74446973 
 4850      61626C65 
 4850      00
 4851              	.LASF92:
 4852 01b0 43795379 		.ascii	"CySysTickGetCallback\000"
 4852      73546963 
 4852      6B476574 
 4852      43616C6C 
 4852      6261636B 
 4853              	.LASF9:
 4854 01c5 75696E74 		.ascii	"uint8\000"
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 143


 4854      3800
 4855              	.LASF97:
 4856 01cb 63796465 		.ascii	"cydelayFreqKhz\000"
 4856      6C617946 
 4856      7265714B 
 4856      687A00
 4857              	.LASF28:
 4858 01da 656E6162 		.ascii	"enable\000"
 4858      6C6500
 4859              	.LASF13:
 4860 01e1 646F7562 		.ascii	"double\000"
 4860      6C6500
 4861              	.LASF57:
 4862 01e8 73686966 		.ascii	"shift\000"
 4862      7400
 4863              	.LASF11:
 4864 01ee 75696E74 		.ascii	"uint32\000"
 4864      333200
 4865              	.LASF40:
 4866 01f5 6D61736B 		.ascii	"mask\000"
 4866      00
 4867              	.LASF33:
 4868 01fa 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4868      73436C6B 
 4868      47657453 
 4868      7973636C 
 4868      6B536F75 
 4869              	.LASF63:
 4870 0212 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 4870      73436C6B 
 4870      496D6F45 
 4870      6E61626C 
 4870      6557636F 
 4871              	.LASF59:
 4872 022b 4379496E 		.ascii	"CyIntGetPriority\000"
 4872      74476574 
 4872      5072696F 
 4872      72697479 
 4872      00
 4873              	.LASF99:
 4874 023c 63796465 		.ascii	"cydelay32kMs\000"
 4874      6C617933 
 4874      326B4D73 
 4874      00
 4875              	.LASF87:
 4876 0249 43795379 		.ascii	"CySysTickInit\000"
 4876      73546963 
 4876      6B496E69 
 4876      7400
 4877              	.LASF58:
 4878 0257 76616C75 		.ascii	"value\000"
 4878      6500
 4879              	.LASF83:
 4880 025d 636C6F63 		.ascii	"clockSource\000"
 4880      6B536F75 
 4880      72636500 
 4881              	.LASF93:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 144


 4882 0269 43794765 		.ascii	"CyGetUniqueId\000"
 4882      74556E69 
 4882      71756549 
 4882      6400
 4883              	.LASF85:
 4884 0277 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4884      73546963 
 4884      6B476574 
 4884      436F756E 
 4884      74466C61 
 4885              	.LASF8:
 4886 028d 756E7369 		.ascii	"unsigned int\000"
 4886      676E6564 
 4886      20696E74 
 4886      00
 4887              	.LASF86:
 4888 029a 43795379 		.ascii	"CySysTickClear\000"
 4888      73546963 
 4888      6B436C65 
 4888      617200
 4889              	.LASF5:
 4890 02a9 6C6F6E67 		.ascii	"long unsigned int\000"
 4890      20756E73 
 4890      69676E65 
 4890      6420696E 
 4890      7400
 4891              	.LASF22:
 4892 02bb 43795379 		.ascii	"CySysClkImoStop\000"
 4892      73436C6B 
 4892      496D6F53 
 4892      746F7000 
 4893              	.LASF105:
 4894 02cb 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4894      74657243 
 4894      72697469 
 4894      63616C53 
 4894      65637469 
 4895              	.LASF45:
 4896 02e2 4379496E 		.ascii	"CyIntSetPending\000"
 4896      74536574 
 4896      50656E64 
 4896      696E6700 
 4897              	.LASF34:
 4898 02f2 43795379 		.ascii	"CySysGetResetReason\000"
 4898      73476574 
 4898      52657365 
 4898      74526561 
 4898      736F6E00 
 4899              	.LASF3:
 4900 0306 73686F72 		.ascii	"short unsigned int\000"
 4900      7420756E 
 4900      7369676E 
 4900      65642069 
 4900      6E7400
 4901              	.LASF65:
 4902 0319 72656754 		.ascii	"regTmp\000"
 4902      6D7000
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 145


 4903              	.LASF82:
 4904 0320 43795379 		.ascii	"CySysTickSetClockSource\000"
 4904      73546963 
 4904      6B536574 
 4904      436C6F63 
 4904      6B536F75 
 4905              	.LASF53:
 4906 0338 4379496E 		.ascii	"CyIntSetVector\000"
 4906      74536574 
 4906      56656374 
 4906      6F7200
 4907              	.LASF42:
 4908 0347 6E756D62 		.ascii	"number\000"
 4908      657200
 4909              	.LASF56:
 4910 034e 7072696F 		.ascii	"priority\000"
 4910      72697479 
 4910      00
 4911              	.LASF68:
 4912 0357 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4912      73436C6B 
 4912      57726974 
 4912      65496D6F 
 4912      46726571 
 4913              	.LASF48:
 4914 036c 4379496E 		.ascii	"CyIntSetSysVector\000"
 4914      74536574 
 4914      53797356 
 4914      6563746F 
 4914      7200
 4915              	.LASF21:
 4916 037e 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 4916      73436C6B 
 4916      496D6F44 
 4916      69736162 
 4916      6C655763 
 4917              	.LASF16:
 4918 0398 72656733 		.ascii	"reg32\000"
 4918      3200
 4919              	.LASF88:
 4920 039e 43795379 		.ascii	"CySysTickStart\000"
 4920      73546963 
 4920      6B537461 
 4920      727400
 4921              	.LASF36:
 4922 03ad 72657475 		.ascii	"returnStatus\000"
 4922      726E5374 
 4922      61747573 
 4922      00
 4923              	.LASF18:
 4924 03ba 73697A65 		.ascii	"sizetype\000"
 4924      74797065 
 4924      00
 4925              	.LASF46:
 4926 03c3 4379496E 		.ascii	"CyIntClearPending\000"
 4926      74436C65 
 4926      61725065 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 146


 4926      6E64696E 
 4926      6700
 4927              	.LASF49:
 4928 03d5 61646472 		.ascii	"address\000"
 4928      65737300 
 4929              	.LASF29:
 4930 03dd 73797363 		.ascii	"sysclkSource\000"
 4930      6C6B536F 
 4930      75726365 
 4930      00
 4931              	.LASF90:
 4932 03ea 66756E63 		.ascii	"function\000"
 4932      74696F6E 
 4932      00
 4933              	.LASF81:
 4934 03f3 43795379 		.ascii	"CySysTickGetValue\000"
 4934      73546963 
 4934      6B476574 
 4934      56616C75 
 4934      6500
 4935              	.LASF96:
 4936 0405 63796465 		.ascii	"cydelayFreqHz\000"
 4936      6C617946 
 4936      72657148 
 4936      7A00
 4937              	.LASF55:
 4938 0413 4379496E 		.ascii	"CyIntSetPriority\000"
 4938      74536574 
 4938      5072696F 
 4938      72697479 
 4938      00
 4939              	.LASF12:
 4940 0424 666C6F61 		.ascii	"float\000"
 4940      7400
 4941              	.LASF103:
 4942 042a 43794578 		.ascii	"CyExitCriticalSection\000"
 4942      69744372 
 4942      69746963 
 4942      616C5365 
 4942      6374696F 
 4943              	.LASF19:
 4944 0440 63795379 		.ascii	"cySysTickCallback\000"
 4944      73546963 
 4944      6B43616C 
 4944      6C626163 
 4944      6B00
 4945              	.LASF54:
 4946 0452 4379496E 		.ascii	"CyIntGetVector\000"
 4946      74476574 
 4946      56656374 
 4946      6F7200
 4947              	.LASF62:
 4948 0461 6D696C6C 		.ascii	"milliseconds\000"
 4948      69736563 
 4948      6F6E6473 
 4948      00
 4949              	.LASF104:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 147


 4950 046e 43794465 		.ascii	"CyDelayCycles\000"
 4950      6C617943 
 4950      79636C65 
 4950      7300
 4951              	.LASF15:
 4952 047c 72656738 		.ascii	"reg8\000"
 4952      00
 4953              	.LASF47:
 4954 0481 43794861 		.ascii	"CyHalt\000"
 4954      6C7400
 4955              	.LASF1:
 4956 0488 756E7369 		.ascii	"unsigned char\000"
 4956      676E6564 
 4956      20636861 
 4956      7200
 4957              	.LASF2:
 4958 0496 73686F72 		.ascii	"short int\000"
 4958      7420696E 
 4958      7400
 4959              	.LASF41:
 4960 04a0 4379496E 		.ascii	"CyIntEnable\000"
 4960      74456E61 
 4960      626C6500 
 4961              	.LASF52:
 4962 04ac 4379496E 		.ascii	"CyIntGetSysVector\000"
 4962      74476574 
 4962      53797356 
 4962      6563746F 
 4962      7200
 4963              	.LASF27:
 4964 04be 636C6B53 		.ascii	"clkSelect\000"
 4964      656C6563 
 4964      7400
 4965              	.LASF71:
 4966 04c8 43794465 		.ascii	"CyDelayUs\000"
 4966      6C617955 
 4966      7300
 4967              	.LASF35:
 4968 04d2 72656173 		.ascii	"reason\000"
 4968      6F6E00
 4969              	.LASF38:
 4970 04d9 696E7453 		.ascii	"intState\000"
 4970      74617465 
 4970      00
 4971              	.LASF14:
 4972 04e2 63686172 		.ascii	"char\000"
 4972      00
 4973              	.LASF101:
 4974 04e7 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 4974      6F467265 
 4974      714D687A 
 4974      3244706C 
 4974      6C4F6666 
 4975              	.LASF17:
 4976 04ff 63796973 		.ascii	"cyisraddress\000"
 4976      72616464 
 4976      72657373 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 148


 4976      00
 4977              	.LASF76:
 4978 050c 43795379 		.ascii	"CySysTickEnable\000"
 4978      73546963 
 4978      6B456E61 
 4978      626C6500 
 4979              	.LASF32:
 4980 051c 43795379 		.ascii	"CySysClkWriteHfclkDiv\000"
 4980      73436C6B 
 4980      57726974 
 4980      65486663 
 4980      6C6B4469 
 4981              	.LASF30:
 4982 0532 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4982      73436C6B 
 4982      57726974 
 4982      65537973 
 4982      636C6B44 
 4983              	.LASF89:
 4984 0549 43795379 		.ascii	"CySysTickSetCallback\000"
 4984      73546963 
 4984      6B536574 
 4984      43616C6C 
 4984      6261636B 
 4985              	.LASF95:
 4986 055e 43795379 		.ascii	"CySysTickCallbacks\000"
 4986      73546963 
 4986      6B43616C 
 4986      6C626163 
 4986      6B7300
 4987              	.LASF69:
 4988 0571 696D6F54 		.ascii	"imoTrim1Value\000"
 4988      72696D31 
 4988      56616C75 
 4988      6500
 4989              	.LASF94:
 4990 057f 756E6971 		.ascii	"uniqueId\000"
 4990      75654964 
 4990      00
 4991              	.LASF67:
 4992 0588 666C6173 		.ascii	"flashCtlReg\000"
 4992      6843746C 
 4992      52656700 
 4993              	.LASF61:
 4994 0594 43794465 		.ascii	"CyDelay\000"
 4994      6C617900 
 4995              	.LASF84:
 4996 059c 43795379 		.ascii	"CySysTickGetClockSource\000"
 4996      73546963 
 4996      6B476574 
 4996      436C6F63 
 4996      6B536F75 
 4997              	.LASF77:
 4998 05b4 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4998      73546963 
 4998      6B446973 
 4998      61626C65 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 149


 4998      496E7465 
 4999              	.LASF50:
 5000 05ce 6F6C6449 		.ascii	"oldIsr\000"
 5000      737200
 5001              	.LASF98:
 5002 05d5 63796465 		.ascii	"cydelayFreqMhz\000"
 5002      6C617946 
 5002      7265714D 
 5002      687A00
 5003              	.LASF74:
 5004 05e4 43795379 		.ascii	"CySysTickStop\000"
 5004      73546963 
 5004      6B53746F 
 5004      7000
 5005              	.LASF31:
 5006 05f2 64697669 		.ascii	"divider\000"
 5006      64657200 
 5007              	.LASF20:
 5008 05fa 43795379 		.ascii	"CySysClkImoStart\000"
 5008      73436C6B 
 5008      496D6F53 
 5008      74617274 
 5008      00
 5009              	.LASF111:
 5010 060b 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 5010      73466C61 
 5010      73685365 
 5010      74576169 
 5010      74437963 
 5011              	.LASF108:
 5012 0623 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5012      72617465 
 5012      645F536F 
 5012      75726365 
 5012      5C50536F 
 5013              	.LASF72:
 5014 0642 6D696372 		.ascii	"microseconds\000"
 5014      6F736563 
 5014      6F6E6473 
 5014      00
 5015              	.LASF25:
 5016 064f 746D7052 		.ascii	"tmpReg\000"
 5016      656700
 5017              	.LASF78:
 5018 0656 43795379 		.ascii	"CySysTickSetReload\000"
 5018      73546963 
 5018      6B536574 
 5018      52656C6F 
 5018      616400
 5019              	.LASF110:
 5020 0669 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5020      73546963 
 5020      6B536572 
 5020      76696365 
 5020      43616C6C 
 5021              	.LASF107:
 5022 0683 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\ccnWWsKV.s 			page 150


 5022      4320342E 
 5022      392E3320 
 5022      32303135 
 5022      30333033 
 5023 06b6 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 5023      20726576 
 5023      6973696F 
 5023      6E203232 
 5023      31323230 
 5024 06e9 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 5024      67202D66 
 5024      66756E63 
 5024      74696F6E 
 5024      2D736563 
 5025              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
